var CSSAntique =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!***********************!*\
  !*** ./cssantique.js ***!
  \***********************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _browserData = __webpack_require__(/*! browser-data */ 1);
	
	var fp = __webpack_require__(/*! lodash/fp */ 10);
	
	var newStylesheets = [];
	var initialStylesheets = [];
	
	/**
	 * filterStyles
	 *
	 * @param options = { ignore: [], browser: {name: 'Firefox', version: '3'} }
	 * @return {DOMelement} style DOM element
	 */
	var filterStyles = function filterStyles() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? { ignore: [], browser: { name: 'Firefox', version: '3' } } : arguments[0];
	
	  convertRemoteStyles();
	  var currentBrowserSupport = fp.curry(_browserData.browserSupport)(options.browser);
	  var initialSheets = fp.filter(function (s) {
	    return !s.disabled;
	  }, document.styleSheets);
	
	  // This new css sheet will replace the originals with rules containing only allowed properties
	  var styleElement = document.createElement('style');
	  document.head.appendChild(styleElement);
	  newStylesheets.push(styleElement); // Keep reference for resetStyles function
	
	  var discarded = [];
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = initialSheets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var sheet = _step.value;
	
	      if (!isIgnoredSheet(options.ignore, sheet)) {
	        var _getParsedRules = getParsedRules(currentBrowserSupport, sheet.cssRules);
	
	        var parsed = _getParsedRules.parsed;
	        var ignored = _getParsedRules.ignored;
	
	        discarded = fp.uniq(fp.concat(discarded, ignored));
	        updateSheet(parsed, styleElement.sheet);
	        sheet.disabled = true; // Disable the original css sheet
	        initialStylesheets.push(sheet); // Keep reference for resetStyles function
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	
	  return { styleElement: styleElement, discarded: discarded };
	};
	
	/**
	 * updateSheet
	 *
	 * @param newRules
	 * @param newSheet
	 */
	function updateSheet(newRules, newSheet) {
	  newRules.map(function (rule) {
	    newSheet.insertRule(rule, newSheet.cssRules.length);
	  });
	}
	
	/**
	 * convertRemoteStyles
	 * load remote styles with CORS
	 *
	 */
	function convertRemoteStyles() {
	  Object.keys(document.styleSheets).map(function (k) {
	    return document.styleSheets[k];
	  }).filter(function (s) {
	    return !s.disabled && getDomain(s.href) !== window.location.hostname;
	  }).map(function (s) {
	    loadCSSCors(s.href);
	    s.disabled = true;
	  });
	
	  function getDomain(uri) {
	    var l = document.createElement('a');
	    l.href = uri;
	    return l.hostname;
	  }
	}
	
	function isIgnoredSheet(ignore, sheet) {
	  if (sheet.href) {
	    var filename = sheet.href.slice(sheet.href.lastIndexOf('/') + 1);
	    return ignore.indexOf(filename) !== -1;
	  }
	  return false;
	}
	
	function getParsedRules(currentBrowserSupport, rules) {
	  var parsedRules = { parsed: [], ignored: [] };
	  fp.each(function (rule) {
	    if (rule instanceof window.CSSImportRule) {
	      var cssParsedRules = getParsedRules(currentBrowserSupport, rule.styleSheet.cssRules);
	      parsedRules = {
	        parsed: fp.concat(parsedRules.parsed, cssParsedRules.parsed),
	        ignored: fp.concat(parsedRules.ignored, cssParsedRules.ignored)
	      };
	    } else if (window.CSSFontFaceRule && rule instanceof window.CSSFontFaceRule) {
	      if (currentBrowserSupport('@font-face')) {
	        parsedRules.parsed.push(rule.cssText);
	      } else {
	        parsedRules.ignored.push('@font-face');
	      }
	    } else if (window.CSSKeyframesRule && rule instanceof window.CSSKeyframesRule) {
	      // TODO implement keyframesrule rules
	    } else if (window.CSSMediaRule && rule instanceof window.CSSMediaRule) {
	        if (currentBrowserSupport('@media')) {
	          var cleanedMediaRule = getCleanedMediaRule(currentBrowserSupport, rule);
	          parsedRules.ignored = fp.concat(parsedRules.ignored, cleanedMediaRule.ignored);
	          parsedRules.parsed.push(cleanedMediaRule.mediaRule);
	        } else {
	          parsedRules.ignored.push('@media');
	        }
	      } else if (_typeof(rule.style) !== 'object') {
	        console.error(rule);
	      } else {
	        var cleanedRule = getCleanedRule(currentBrowserSupport, rule);
	        parsedRules.ignored = fp.concat(parsedRules.ignored, cleanedRule.ignored);
	        if (fp.has('rule', cleanedRule)) {
	          parsedRules.parsed.push(cleanedRule.rule + ' {' + cleanedRule.properties + '}');
	        }
	      }
	  }, rules);
	  return parsedRules;
	}
	
	function getCleanedMediaRule(currentBrowserSupport, cssMediaRule) {
	  var cleanedMediaRules = [];
	  var ignoredRules = [];
	  fp.each(function (mediaRule) {
	    var cleanedMediaRule = getCleanedRule(currentBrowserSupport, mediaRule);
	    if (fp.has('rule', cleanedMediaRule)) {
	      cleanedMediaRules.push(cleanedMediaRule);
	    }
	    ignoredRules = fp.concat(ignoredRules, cleanedMediaRule.ignored);
	  }, cssMediaRule.cssRules);
	
	  var cleanedMediaRulesProps = cleanedMediaRules.map(function (r) {
	    return r.rule + ' {' + r.properties + '}';
	  }).join('\n');
	
	  return {
	    mediaRule: '@media ' + cssMediaRule.media.mediaText + ' {' + cleanedMediaRulesProps + '}',
	    ignored: fp.uniq(ignoredRules)
	  };
	}
	
	function getCleanedRule(currentBrowserSupport, rule) {
	  var cleanedRule = { ignored: [] };
	  var attributes = getAttributes(rule.style.cssText);
	  var segregatedAttributes = fp.groupBy(currentBrowserSupport, attributes); // -> {true:[...], false:[...], undefined: [...]}
	
	  if (fp.has('true', segregatedAttributes)) {
	    cleanedRule.rule = rule.selectorText;
	    cleanedRule.properties = segregatedAttributes.true.map(function (attribute) {
	      return attribute + ': ' + rule.style[attribute];
	    }).join('; ');
	  }
	  if (fp.has('false', segregatedAttributes)) {
	    cleanedRule.ignored = segregatedAttributes.false;
	  }
	  return cleanedRule;
	}
	
	function getAttributes(cssText) {
	  // Remove properties content in order to bypass delimiter characters conflicts
	  cssText = cssText.replace(/"[^"]*"/g, '').replace(/'[^']*'/g, '');
	  var begin = cssText.indexOf('{') + 1;
	  var end = cssText.indexOf('}');
	  return cssText.slice(begin, end).split(';').map(function (dec) {
	    return dec.split(':')[0].trim();
	  }).filter(function (attr) {
	    return attr !== '';
	  });
	}
	
	function loadCSSCors(stylesheet_uri) {
	  var _xhr = window.XMLHttpRequest;
	  var has_cred = false;
	  try {
	    has_cred = _xhr && 'withCredentials' in new _xhr();
	  } catch (e) {}
	  if (!has_cred) {
	    console.error('CORS not supported');
	    return;
	  }
	  var xhr = new _xhr();
	  xhr.open('GET', stylesheet_uri);
	  xhr.onload = function () {
	    xhr.onload = xhr.onerror = null;
	    if (xhr.status < 200 || xhr.status >= 300) {
	      console.error('style failed to load: ' + stylesheet_uri);
	    } else {
	      var style_tag = document.createElement('style');
	      style_tag.appendChild(document.createTextNode(xhr.responseText));
	      document.head.appendChild(style_tag);
	    }
	    xhr.onerror = function () {
	      xhr.onload = xhr.onerror = null;
	      console.error('XHR CORS CSS fail:' + styleURI);
	    };
	    xhr.send();
	  };
	}
	
	var resetStyles = function resetStyles() {
	  newStylesheets.map(function (e) {
	    e.remove();
	  });
	  newStylesheets = [];
	  initialStylesheets.map(function (e) {
	    e.disabled = false;
	  });
	  initialStylesheets = [];
	};
	
	var findStyleSheet = function findStyleSheet(search) {
	  var stylesheets = window.document.styleSheets;
	
	  return Object.keys(stylesheets).map(function (k) {
	    return stylesheets[k];
	  }).filter(function (s) {
	    return s.href !== null && s.href.indexOf(search) > -1;
	  });
	};
	
	module.exports = { browsersDb: _browserData.browsersDb, filterStyles: filterStyles, resetStyles: resetStyles, findStyleSheet: findStyleSheet };

/***/ },
/* 1 */
/*!****************************************!*\
  !*** ./~/browser-data/browser-data.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _ = __webpack_require__(/*! lodash */ 2);
	
	var wikipediaDb = __webpack_require__(/*! ./db/wikipediaDb */ 5);
	var browsersDb = __webpack_require__(/*! ./db/browsersDb */ 6);
	var mdnDb = __webpack_require__(/*! ./db/mdnDb */ 7);
	var enginesPrefixes = __webpack_require__(/*! ./db/enginesPrefixes */ 8);
	var versionsHelpers = __webpack_require__(/*! ./versionsHelpers */ 9);
	var findLastVersion = versionsHelpers.findLastVersion;
	var compareVersions = versionsHelpers.compareVersions;
	
	var browsers = Object.keys(browsersDb);
	
	/* API */
	
	// Uses engineSupportDb
	var getEngine = function getEngine(browser) {
	  if (browsers.indexOf(browser.name) === -1) {
	    return undefined;
	  }
	  var browserData = browsersDb[browser.name];
	  var browserVersion = findLastVersion(Object.keys(browserData), browser.version);
	  return browserData[browserVersion];
	};
	
	// Uses mdnDb
	var browserSupport = function browserSupport(browser, property) {
	  var splited = splitPrefix(property);
	  var prefix = splited.prefix;
	  var property = splited.property;
	
	  var browsers = {
	    'Firefox': 'f',
	    'Android': 'a',
	    'Safari': 's',
	    'Chrome': 'c',
	    'Opera': 'o',
	    'IE': 'ie',
	    'IEMobile': 'iem'
	  };
	  var browserId = browsers[browser.name];
	  if (!mdnDb.hasOwnProperty(property)) {
	    // Fallback to wikipedia database
	    return browserSupport_(browser, property);
	  } else {
	    var supports = mdnDb[property].c.bs[browserId];
	    var defaultSupports = supports.filter(function (s) {
	      return s.p === prefix;
	    });
	    if (defaultSupports.length === 0) {
	      return undefined;
	    }
	    var version = defaultSupports[0].v;
	    switch (version) {
	      case 'yes':
	        return true;
	      case 'no':
	        return false;
	      case '-':
	      case '?':
	        return undefined;
	      // case undefined:
	      //   console.log(mdnDb[property])
	      default:
	        return compareVersions(version, browser.version) <= 0;
	    }
	  }
	  return undefined;
	};
	
	// Uses engineSupportDb
	var browserSupport_ = function browserSupport(browser, property) {
	  var engine = getEngine(browser);
	  return engineSupport(engine, property);
	};
	
	// Uses engineSupportDb
	var engineSupport = function engineSupport(engine, property) {
	  var originalProperty = property;
	  property = removePrefix(engine, property);
	  if (!wikipediaDb.hasOwnProperty(property)) {
	    console.log('property not in database: ' + property + ' (' + originalProperty + ')');
	    return undefined;
	  }
	  if (!wikipediaDb[property].hasOwnProperty(engine.name)) {
	    // MSHTML fallback
	    if (engine.name === 'MSHTML' && wikipediaDb[property].hasOwnProperty('Trident')) {
	      engine = { name: 'Trident', version: '3' };
	    } else {
	      console.log(engine.name + ' not in database for property ' + property);
	      console.log(wikipediaDb[property]);
	      return undefined;
	    }
	  }
	  var support = wikipediaDb[property][engine.name].toLowerCase();
	  switch (support) {
	    case 'yes':
	      return true;
	    case 'no':
	      return false;
	    default:
	      return support <= engine.version;
	  }
	  return undefined;
	};
	
	/* Helpers */
	
	function splitPrefix(property) {
	  var prefixes = _.uniq(_.flatten(_.values(enginesPrefixes))).map(function (p) {
	    return p.replace(/-/g, '');
	  });
	  var prefix = '';
	  prefixes.forEach(function (curPrefix) {
	    var pty = property.replace(new RegExp('^-?' + curPrefix + '-'), '');
	    if (pty !== property) {
	      property = pty;
	      prefix = '-' + curPrefix;
	    }
	  });
	  return { prefix: prefix, property: property };
	}
	
	function removePrefix(engine, property) {
	  enginesPrefixes[engine.name].forEach(function (prefix) {
	    property = property.replace(new RegExp('^' + prefix), '');
	  });
	  return property;
	}
	
	module.exports = { getEngine: getEngine, browserSupport: browserSupport, engineSupport: engineSupport, browsersDb: browsersDb };

/***/ },
/* 2 */
/*!*******************************************!*\
  !*** ./~/browser-data/~/lodash/lodash.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {'use strict';var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol?"symbol":typeof obj;}; /**
	 * @license
	 * lodash <https://lodash.com/>
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */;(function(){ /** Used as a safe reference for `undefined` in pre-ES5 environments. */var undefined; /** Used as the semantic version number. */var VERSION='4.12.0'; /** Used as the size to enable large array optimizations. */var LARGE_ARRAY_SIZE=200; /** Used as the `TypeError` message for "Functions" methods. */var FUNC_ERROR_TEXT='Expected a function'; /** Used to stand-in for `undefined` hash values. */var HASH_UNDEFINED='__lodash_hash_undefined__'; /** Used as the internal argument placeholder. */var PLACEHOLDER='__lodash_placeholder__'; /** Used to compose bitmasks for wrapper metadata. */var BIND_FLAG=1,BIND_KEY_FLAG=2,CURRY_BOUND_FLAG=4,CURRY_FLAG=8,CURRY_RIGHT_FLAG=16,PARTIAL_FLAG=32,PARTIAL_RIGHT_FLAG=64,ARY_FLAG=128,REARG_FLAG=256,FLIP_FLAG=512; /** Used to compose bitmasks for comparison styles. */var UNORDERED_COMPARE_FLAG=1,PARTIAL_COMPARE_FLAG=2; /** Used as default options for `_.truncate`. */var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...'; /** Used to detect hot functions by number of calls within a span of milliseconds. */var HOT_COUNT=150,HOT_SPAN=16; /** Used to indicate the type of lazy iteratees. */var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3; /** Used as references for various `Number` constants. */var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e+308,NAN=0/0; /** Used as references for the maximum length and index of an array. */var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1; /** `Object#toString` result references. */var argsTag='[object Arguments]',arrayTag='[object Array]',boolTag='[object Boolean]',dateTag='[object Date]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',objectTag='[object Object]',promiseTag='[object Promise]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]'; /** Used to match empty string literals in compiled template source. */var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g; /** Used to match HTML entities and HTML characters. */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39|#96);/g,reUnescapedHtml=/[&<>"'`]/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source); /** Used to match template delimiters. */var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g; /** Used to match property names within property paths. */var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g; /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	   */var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source); /** Used to match leading and trailing whitespace. */var reTrim=/^\s+|\s+$/g,reTrimStart=/^\s+/,reTrimEnd=/\s+$/; /** Used to match non-compound words composed of alphanumeric characters. */var reBasicWord=/[a-zA-Z0-9]+/g; /** Used to match backslashes in property paths. */var reEscapeChar=/\\(\\)?/g; /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).
	   */var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g; /** Used to match `RegExp` flags from their coerced string values. */var reFlags=/\w*$/; /** Used to detect hexadecimal string values. */var reHasHexPrefix=/^0x/i; /** Used to detect bad signed hexadecimal string values. */var reIsBadHex=/^[-+]0x[0-9a-f]+$/i; /** Used to detect binary string values. */var reIsBinary=/^0b[01]+$/i; /** Used to detect host constructors (Safari). */var reIsHostCtor=/^\[object .+?Constructor\]$/; /** Used to detect octal string values. */var reIsOctal=/^0o[0-7]+$/i; /** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\d*)$/; /** Used to match latin-1 supplementary letters (excluding mathematical operators). */var reLatin1=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g; /** Used to ensure capturing order of template delimiters. */var reNoMatch=/($^)/; /** Used to match unescaped characters in compiled string literals. */var reUnescapedString=/['\n\r\u2028\u2029\\]/g; /** Used to compose unicode character classes. */var rsAstralRange='\\ud800-\\udfff',rsComboMarksRange='\\u0300-\\u036f\\ufe20-\\ufe23',rsComboSymbolsRange='\\u20d0-\\u20f0',rsDingbatRange='\\u2700-\\u27bf',rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange='\\u2000-\\u206f',rsSpaceRange=' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange='\\ufe0e\\ufe0f',rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange; /** Used to compose unicode capture groups. */var rsApos='[\'’]',rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboMarksRange+rsComboSymbolsRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz='\\ud83c[\\udffb-\\udfff]',rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional='(?:\\ud83c[\\udde6-\\uddff]){2}',rsSurrPair='[\\ud800-\\udbff][\\udc00-\\udfff]',rsUpper='['+rsUpperRange+']',rsZWJ='\\u200d'; /** Used to compose unicode regexes. */var rsLowerMisc='(?:'+rsLower+'|'+rsMisc+')',rsUpperMisc='(?:'+rsUpper+'|'+rsMisc+')',rsOptLowerContr='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptUpperContr='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')'; /** Used to match apostrophes. */var reApos=RegExp(rsApos,'g'); /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */var reComboMark=RegExp(rsCombo,'g'); /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */var reComplexSymbol=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g'); /** Used to match complex or compound words. */var reComplexWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptLowerContr+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsUpperMisc+'+'+rsOptUpperContr+'(?='+[rsBreak,rsUpper+rsLowerMisc,'$'].join('|')+')',rsUpper+'?'+rsLowerMisc+'+'+rsOptLowerContr,rsUpper+'+'+rsOptUpperContr,rsDigits,rsEmoji].join('|'),'g'); /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */var reHasComplexSymbol=RegExp('['+rsZWJ+rsAstralRange+rsComboMarksRange+rsComboSymbolsRange+rsVarRange+']'); /** Used to detect strings that need a more robust regexp to match words. */var reHasComplexWord=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/; /** Used to assign default `context` object properties. */var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','Reflect','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout']; /** Used to make template sourceURLs easier to identify. */var templateCounter=-1; /** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false; /** Used to identify `toStringTag` values supported by `_.clone`. */var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false; /** Used to map latin-1 supplementary letters to basic latin letters. */var deburredLetters={'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcC':'I','\xcd':'I','\xce':'I','\xcf':'I','\xeC':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss'}; /** Used to map characters to HTML entities. */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;','`':'&#96;'}; /** Used to map HTML entities to characters. */var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'",'&#96;':'`'}; /** Used to determine if values are of the language type `Object`. */var objectTypes={'function':true,'object':true}; /** Used to escape characters for inclusion in compiled string literals. */var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r','\u2028':'u2028','\u2029':'u2029'}; /** Built-in method references without a dependency on `root`. */var freeParseFloat=parseFloat,freeParseInt=parseInt; /** Detect free variable `exports`. */var freeExports=objectTypes[ false?'undefined':_typeof(exports)]&&exports&&!exports.nodeType?exports:undefined; /** Detect free variable `module`. */var freeModule=objectTypes[ false?'undefined':_typeof(module)]&&module&&!module.nodeType?module:undefined; /** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports?freeExports:undefined; /** Detect free variable `global` from Node.js. */var freeGlobal=checkGlobal(freeExports&&freeModule&&(typeof global==='undefined'?'undefined':_typeof(global))=='object'&&global); /** Detect free variable `self`. */var freeSelf=checkGlobal(objectTypes[typeof self==='undefined'?'undefined':_typeof(self)]&&self); /** Detect free variable `window`. */var freeWindow=checkGlobal(objectTypes[typeof window==='undefined'?'undefined':_typeof(window)]&&window); /** Detect `this` as the global object. */var thisGlobal=checkGlobal(objectTypes[_typeof(this)]&&this); /**
	   * Used as a reference to the global object.
	   *
	   * The `this` value is used if it's the global object to avoid Greasemonkey's
	   * restricted `window` object, otherwise the `window` object is used.
	   */var root=freeGlobal||freeWindow!==(thisGlobal&&thisGlobal.window)&&freeWindow||freeSelf||thisGlobal||Function('return this')(); /*--------------------------------------------------------------------------*/ /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */function addMapEntry(map,pair){ // Don't return `Map#set` because it doesn't return the map instance in IE 11.
	map.set(pair[0],pair[1]);return map;} /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */function addSetEntry(set,value){set.add(value);return set;} /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */function apply(func,thisArg,args){var length=args.length;switch(length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);} /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array.length;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;} /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */function arrayEach(array,iteratee){var index=-1,length=array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;} /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */function arrayEachRight(array,iteratee){var length=array.length;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;} /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */function arrayEvery(array,predicate){var index=-1,length=array.length;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;} /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */function arrayFilter(array,predicate){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;} /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */function arrayIncludes(array,value){return !!array.length&&baseIndexOf(array,value,0)>-1;} /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */function arrayIncludesWith(array,value,comparator){var index=-1,length=array.length;while(++index<length){if(comparator(value,array[index])){return true;}}return false;} /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */function arrayMap(array,iteratee){var index=-1,length=array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;} /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;} /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array.length;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;} /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array.length;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;} /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */function arraySome(array,predicate){var index=-1,length=array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;} /**
	   * The base implementation of methods like `_.find` and `_.findKey`, without
	   * support for iteratee shorthands, which iterates over `collection` using
	   * `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @param {boolean} [retKey] Specify returning the key of the found element
	   *  instead of the element itself.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */function baseFind(collection,predicate,eachFunc,retKey){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=retKey?key:value;return false;}});return result;} /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseFindIndex(array,predicate,fromRight){var length=array.length,index=fromRight?length:-1;while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return -1;} /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseIndexOf(array,value,fromIndex){if(value!==value){return indexOfNaN(array,fromIndex);}var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return -1;} /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return -1;} /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */function baseMean(array,iteratee){var length=array?array.length:0;return length?baseSum(array,iteratee)/length:NAN;} /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;} /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;} /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined){result=result===undefined?current:result+current;}}return result;} /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;} /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */function baseToPairs(object,props){return arrayMap(props,function(key){return [key,object[key]];});} /**
	   * The base implementation of `_.unary` without support for storing wrapper metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */function baseUnary(func){return function(value){return func(value);};} /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */function baseValues(object,props){return arrayMap(props,function(key){return object[key];});} /**
	   * Checks if a cache value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */function cacheHas(cache,key){return cache.has(key);} /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;} /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;} /**
	   * Checks if `value` is a global object.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	   */function checkGlobal(value){return value&&value.Object===Object?value:null;} /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){result++;}}return result;} /**
	   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */function deburrLetter(letter){return deburredLetters[letter];} /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */function escapeHtmlChar(chr){return htmlEscapes[chr];} /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */function escapeStringChar(chr){return '\\'+stringEscapes[chr];} /**
	   * Gets the index at which the first occurrence of `NaN` is found in `array`.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	   */function indexOfNaN(array,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?0:-1);while(fromRight?index--:++index<length){var other=array[index];if(other!==other){return index;}}return -1;} /**
	   * Checks if `value` is a host object in IE < 9.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	   */function isHostObject(value){ // Many host objects are `Object` objects that can coerce to strings
	// despite having improperly defined `toString` methods.
	var result=false;if(value!=null&&typeof value.toString!='function'){try{result=!!(value+'');}catch(e){}}return result;} /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;} /**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;} /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;} /**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;} /**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;} /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */function stringSize(string){if(!(string&&reHasComplexSymbol.test(string))){return string.length;}var result=reComplexSymbol.lastIndex=0;while(reComplexSymbol.test(string)){result++;}return result;} /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */function stringToArray(string){return string.match(reComplexSymbol);} /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */function unescapeHtmlChar(chr){return htmlUnescapes[chr];} /*--------------------------------------------------------------------------*/ /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Use `context` to mock `Date#getTime` use in `_.now`.
	   * var mock = _.runInContext({
	   *   'Date': function() {
	   *     return { 'getTime': getTimeMock };
	   *   }
	   * });
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */function runInContext(context){context=context?_.defaults({},context,_.pick(root,contextProps)):root; /** Built-in constructor references. */var Date=context.Date,Error=context.Error,Math=context.Math,RegExp=context.RegExp,TypeError=context.TypeError; /** Used for built-in method references. */var arrayProto=context.Array.prototype,objectProto=context.Object.prototype,stringProto=context.String.prototype; /** Used to resolve the decompiled source of functions. */var funcToString=context.Function.prototype.toString; /** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty; /** Used to generate unique IDs. */var idCounter=0; /** Used to infer the `Object` constructor. */var objectCtorString=funcToString.call(Object); /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */var objectToString=objectProto.toString; /** Used to restore the original `_` reference in `_.noConflict`. */var oldDash=root._; /** Used to detect if a method is native. */var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$'); /** Built-in value references. */var Buffer=moduleExports?context.Buffer:undefined,Reflect=context.Reflect,_Symbol=context.Symbol,Uint8Array=context.Uint8Array,clearTimeout=context.clearTimeout,enumerate=Reflect?Reflect.enumerate:undefined,getOwnPropertySymbols=Object.getOwnPropertySymbols,iteratorSymbol=_typeof(iteratorSymbol=_Symbol&&_Symbol.iterator)=='symbol'?iteratorSymbol:undefined,objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,setTimeout=context.setTimeout,splice=arrayProto.splice; /* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetPrototype=Object.getPrototypeOf,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=Object.keys,nativeMax=Math.max,nativeMin=Math.min,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReplace=stringProto.replace,nativeReverse=arrayProto.reverse,nativeSplit=stringProto.split; /* Built-in method references that are verified to be native. */var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create'); /** Used to store function metadata. */var metaMap=WeakMap&&new WeakMap(); /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */var nonEnumShadows=!propertyIsEnumerable.call({'valueOf':1},'valueOf'); /** Used to lookup unminified function names. */var realNames={}; /** Used to detect maps, sets, and weakmaps. */var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap); /** Used to convert symbols to primitives and strings. */var symbolProto=_Symbol?_Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined,symbolToString=symbolProto?symbolProto.toString:undefined; /*------------------------------------------------------------------------*/ /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array of at least `200` elements
	     * and any iteratees accept only one argument. The heuristic for whether a
	     * section qualifies for shortcut fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,
	     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,
	     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,
	     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,
	     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,
	     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,
	     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,
	     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,
	     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,
	     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,
	     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,
	     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,
	     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,
	     * `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`, `min`, `minBy`, `multiply`,
	     * `noConflict`, `noop`, `now`, `nth`, `pad`, `padEnd`, `padStart`, `parseInt`,
	     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,
	     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,
	     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,
	     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toFinite`,
	     * `toInteger`, `toJSON`, `toLength`, `toLower`, `toNumber`, `toSafeInteger`,
	     * `toString`, `toUpper`, `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`,
	     * `uniqueId`, `upperCase`, `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);} /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */function baseLodash(){} // No operation performed.
	/**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined;} /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */lodash.templateSettings={ /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'escape':reEscape, /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'evaluate':reEvaluate, /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */'interpolate':reInterpolate, /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */'variable':'', /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */'imports':{ /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */'_':lodash}}; // Ensure wrappers are instances of `baseLodash`.
	lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper; /*------------------------------------------------------------------------*/ /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];} /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;} /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else {result=this.clone();result.__dir__*=-1;}return result;} /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||arrLength<LARGE_ARRAY_SIZE||arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer: while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else {break outer;}}}result[resIndex++]=value;}return result;} // Ensure `LazyWrapper` is an instance of `baseLodash`.
	LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper; /*------------------------------------------------------------------------*/ /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function Hash(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}} /**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};} /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function hashDelete(key){return this.has(key)&&delete this.__data__[key];} /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined:result;}return hasOwnProperty.call(data,key)?data[key]:undefined;} /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined:hasOwnProperty.call(data,key);} /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */function hashSet(key,value){var data=this.__data__;data[key]=nativeCreate&&value===undefined?HASH_UNDEFINED:value;return this;} // Add methods to `Hash`.
	Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet; /*------------------------------------------------------------------------*/ /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function ListCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}} /**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */function listCacheClear(){this.__data__=[];} /**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else {splice.call(data,index,1);}return true;} /**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined:data[index][1];} /**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;} /**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){data.push([key,value]);}else {data[index][1]=value;}return this;} // Add methods to `ListCache`.
	ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet; /*------------------------------------------------------------------------*/ /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function MapCache(entries){var index=-1,length=entries?entries.length:0;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}} /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */function mapCacheClear(){this.__data__={'hash':new Hash(),'map':new (Map||ListCache)(),'string':new Hash()};} /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function mapCacheDelete(key){return getMapData(this,key)['delete'](key);} /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function mapCacheGet(key){return getMapData(this,key).get(key);} /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function mapCacheHas(key){return getMapData(this,key).has(key);} /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */function mapCacheSet(key,value){getMapData(this,key).set(key,value);return this;} // Add methods to `MapCache`.
	MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet; /*------------------------------------------------------------------------*/ /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */function SetCache(values){var index=-1,length=values?values.length:0;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}} /**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;} /**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */function setCacheHas(value){return this.__data__.has(value);} // Add methods to `SetCache`.
	SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas; /*------------------------------------------------------------------------*/ /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */function Stack(entries){this.__data__=new ListCache(entries);} /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */function stackClear(){this.__data__=new ListCache();} /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */function stackDelete(key){return this.__data__['delete'](key);} /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */function stackGet(key){return this.__data__.get(key);} /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */function stackHas(key){return this.__data__.has(key);} /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */function stackSet(key,value){var cache=this.__data__;if(cache instanceof ListCache&&cache.__data__.length==LARGE_ARRAY_SIZE){cache=this.__data__=new MapCache(cache.__data__);}cache.set(key,value);return this;} // Add methods to `Stack`.
	Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet; /*------------------------------------------------------------------------*/ /**
	     * Used by `_.defaults` to customize its `_.assignIn` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */function assignInDefaults(objValue,srcValue,key,object){if(objValue===undefined||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;} /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function assignMergeValue(object,key,value){if(value!==undefined&&!eq(object[key],value)||typeof key=='number'&&value===undefined&&!(key in object)){object[key]=value;}} /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined&&!(key in object)){object[key]=value;}} /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to search.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return -1;} /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;} /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */function baseAssign(object,source){return object&&copyObject(source,keys(source),object);} /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths of elements to pick.
	     * @returns {Array} Returns the picked elements.
	     */function baseAt(object,paths){var index=-1,isNil=object==null,length=paths.length,result=Array(length);while(++index<length){result[index]=isNil?undefined:get(object,paths[index]);}return result;} /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined){number=number<=upper?number:upper;}if(lower!==undefined){number=number>=lower?number:lower;}}return number;} /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {boolean} [isFull] Specify a clone including symbols.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */function baseClone(value,isDeep,isFull,customizer,key,object,stack){var result;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else {var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){if(isHostObject(value)){return object?value:{};}result=initCloneObject(isFunc?{}:value);if(!isDeep){return copySymbols(value,baseAssign(result,value));}}else {if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,baseClone,isDeep);}} // Check for circular references and return its corresponding clone.
	stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(!isArr){var props=isFull?getAllKeys(value):keys(value);} // Recursively populate clone (susceptible to call stack limits).
	arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}assignValue(result,key,baseClone(subValue,isDeep,isFull,customizer,key,value,stack));});return result;} /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */function baseConforms(source){var props=keys(source),length=props.length;return function(object){if(object==null){return !length;}var index=length;while(index--){var key=props[index],predicate=source[key],value=object[key];if(value===undefined&&!(key in Object(object))||!predicate(value)){return false;}}return true;};} /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} prototype The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */function baseCreate(proto){return isObject(proto)?objectCreate(proto):{};} /**
	     * The base implementation of `_.delay` and `_.defer` which accepts an array
	     * of `func` arguments.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Object} args The arguments to provide to `func`.
	     * @returns {number} Returns the timer id.
	     */function baseDelay(func,wait,args){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined,args);},wait);} /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer: while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;} /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */var baseEach=createBaseEach(baseForOwn); /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */var baseEachRight=createBaseEach(baseForOwnRight,true); /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;} /**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;} /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;} /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;} /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){ // Recursively flatten arrays (susceptible to call stack limits).
	baseFlatten(value,depth-1,predicate,isStrict,result);}else {arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;} /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */var baseFor=createBaseFor(); /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */var baseForRight=createBaseFor(true); /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);} /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);} /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});} /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */function baseGet(object,path){path=isKey(path,object)?[path]:castPath(path);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined;} /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));} /**
	     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */function baseGt(value,other){return value>other;} /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */function baseHas(object,key){ // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	// that are composed entirely of index properties, return `false` for
	// `hasOwnProperty` checks of them.
	return hasOwnProperty.call(object,key)||(typeof object==='undefined'?'undefined':_typeof(object))=='object'&&key in object&&getPrototype(object)===null;} /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */function baseHasIn(object,key){return key in Object(object);} /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);} /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined;}array=arrays[0];var index=-1,seen=caches[0];outer: while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;} /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;} /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */function baseInvoke(object,path,args){if(!isKey(path,object)){path=castPath(path);object=parent(object,path);path=last(path);}var func=object==null?object:object[toKey(path)];return func==null?undefined:apply(func,object,args);} /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {boolean} [bitmask] The bitmask of comparison flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - Unordered comparison
	     *     2 - Partial comparison
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */function baseIsEqual(value,other,customizer,bitmask,stack){if(value===other){return true;}if(value==null||other==null||!isObject(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,baseIsEqual,customizer,bitmask,stack);} /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function baseIsEqualDeep(object,other,equalFunc,customizer,bitmask,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=arrayTag,othTag=arrayTag;if(!objIsArr){objTag=getTag(object);objTag=objTag==argsTag?objectTag:objTag;}if(!othIsArr){othTag=getTag(other);othTag=othTag==argsTag?objectTag:othTag;}var objIsObj=objTag==objectTag&&!isHostObject(object),othIsObj=othTag==objectTag&&!isHostObject(other),isSameTag=objTag==othTag;if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,equalFunc,customizer,bitmask,stack):equalByTag(object,other,objTag,equalFunc,customizer,bitmask,stack);}if(!(bitmask&PARTIAL_COMPARE_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,customizer,bitmask,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,equalFunc,customizer,bitmask,stack);} /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return !length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0] in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined&&!(key in object)){return false;}}else {var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined?baseIsEqual(srcValue,objValue,customizer,UNORDERED_COMPARE_FLAG|PARTIAL_COMPARE_FLAG,stack):result)){return false;}}}return true;} /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */function baseIteratee(value){ // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	if(typeof value=='function'){return value;}if(value==null){return identity;}if((typeof value==='undefined'?'undefined':_typeof(value))=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);} /**
	     * The base implementation of `_.keys` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function baseKeys(object){return nativeKeys(Object(object));} /**
	     * The base implementation of `_.keysIn` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */function baseKeysIn(object){object=object==null?object:Object(object);var result=[];for(var key in object){result.push(key);}return result;} // Fallback for IE < 9 with es6-shim.
	if(enumerate&&!propertyIsEnumerable.call({'valueOf':1},'valueOf')){baseKeysIn=function baseKeysIn(object){return iteratorToArray(enumerate(object));};} /**
	     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */function baseLt(value,other){return value<other;} /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;} /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};} /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,undefined,UNORDERED_COMPARE_FLAG|PARTIAL_COMPARE_FLAG);};} /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}if(!(isArray(source)||isTypedArray(source))){var props=keysIn(source);}arrayEach(props||source,function(srcValue,key){if(props){key=srcValue;srcValue=source[key];}if(isObject(srcValue)){stack||(stack=new Stack());baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else {var newValue=customizer?customizer(object[key],srcValue,key+'',object,source,stack):undefined;if(newValue===undefined){newValue=srcValue;}assignMergeValue(object,key,newValue);}});} /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=object[key],srcValue=source[key],stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined;var isCommon=newValue===undefined;if(isCommon){newValue=srcValue;if(isArray(srcValue)||isTypedArray(srcValue)){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else {isCommon=false;newValue=baseClone(srcValue,true);}}else if(isPlainObject(srcValue)||isArguments(srcValue)){if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||srcIndex&&isFunction(objValue)){isCommon=false;newValue=baseClone(srcValue,true);}else {newValue=objValue;}}else {isCommon=false;}}stack.set(srcValue,newValue);if(isCommon){ // Recursively merge objects and arrays (susceptible to call stack limits).
	mergeFunc(newValue,srcValue,srcIndex,customizer,stack);}stack['delete'](srcValue);assignMergeValue(object,key,newValue);} /**
	     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined;} /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */function baseOrderBy(collection,iteratees,orders){var index=-1;iteratees=arrayMap(iteratees.length?iteratees:[identity],baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return {'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});} /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     */function basePick(object,props){object=Object(object);return arrayReduce(props,function(result,key){if(key in object){result[key]=object[key];}return result;},{});} /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */function basePickBy(object,predicate){var index=-1,props=getAllKeysIn(object),length=props.length,result={};while(++index<length){var key=props[index],value=object[key];if(predicate(value,key)){result[key]=value;}}return result;} /**
	     * The base implementation of `_.property` without support for deep paths.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */function baseProperty(key){return function(object){return object==null?undefined:object[key];};} /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */function basePropertyDeep(path){return function(object){return baseGet(object,path);};} /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;} /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else if(!isKey(index,array)){var path=castPath(index),object=parent(array,path);if(object!=null){delete object[toKey(last(path))];}}else {delete array[toKey(index)];}}}return array;} /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));} /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;} /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;} // Leverage the exponentiation by squaring algorithm for a faster repeat.
	// See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	do {if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;} /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */function baseSet(object,path,value,customizer){path=isKey(path,object)?[path]:castPath(path);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]);if(isObject(nested)){var newValue=value;if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined;if(newValue===undefined){newValue=objValue==null?isIndex(path[index+1])?[]:{}:objValue;}}assignValue(nested,key,newValue);}nested=nested[key];}return object;} /**
	     * The base implementation of `setData` without support for hot loop detection.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;}; /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;} /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return !result;});return !!result;} /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */function baseSortedIndex(array,value,retHighest){var low=0,high=array?array.length:low;if(typeof value=='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else {high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);} /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */function baseSortedIndexBy(array,value,iteratee,retHighest){value=iteratee(value);var low=0,high=array?array.length:0,valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else {setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else {high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);} /**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;} /**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */function baseToNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}return +value;} /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */function baseToString(value){ // Exit early for strings to avoid a performance hit in some environments.
	if(typeof value=='string'){return value;}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;} /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else {seen=iteratee?[]:result;}outer: while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;} /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */function baseUnset(object,path){path=isKey(path,object)?[path]:castPath(path);object=parent(object,path);var key=toKey(last(path));return !(object!=null&&baseHas(object,key))||delete object[key];} /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);} /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);} /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);} /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */function baseXor(arrays,iteratee,comparator){var index=-1,length=arrays.length;while(++index<length){var result=result?arrayPush(baseDifference(result,arrays[index],iteratee,comparator),baseDifference(arrays[index],result,iteratee,comparator)):arrays[index];}return result&&result.length?baseUniq(result,iteratee,comparator):[];} /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined;assignFunc(result,props[index],value);}return result;} /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];} /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */function castFunction(value){return typeof value=='function'?value:identity;} /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast property path array.
	     */function castPath(value){return isArray(value)?value:stringToPath(value);} /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */function castSlice(array,start,end){var length=array.length;end=end===undefined?length:end;return !start&&end>=length?array:baseSlice(array,start,end);} /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var result=new buffer.constructor(buffer.length);buffer.copy(result);return result;} /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;} /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);} /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */function cloneMap(map,isDeep,cloneFunc){var array=isDeep?cloneFunc(mapToArray(map),true):mapToArray(map);return arrayReduce(array,addMapEntry,new map.constructor());} /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;} /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */function cloneSet(set,isDeep,cloneFunc){var array=isDeep?cloneFunc(setToArray(set),true):setToArray(set);return arrayReduce(array,addSetEntry,new set.constructor());} /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};} /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);} /**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return -1;}}return 0;} /**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}} // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	// that causes it, under certain circumstances, to provide the same value for
	// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	// for more details.
	//
	// This also ensures a stable sort in V8 and other engines.
	// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	return object.index-other.index;} /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;} /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;} /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;} /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */function copyObject(source,props,object,customizer){object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):source[key];assignValue(object,key,newValue);}return object;} /**
	     * Copies own symbol properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */function copySymbols(source,object){return copyObject(source,getSymbols(source),object);} /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee),accumulator);};} /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */function createAssigner(assigner){return rest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined,guard=length>2?sources[2]:undefined;customizer=assigner.length>3&&typeof customizer=='function'?(length--,customizer):undefined;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});} /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};} /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};} /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createBaseWrapper(func,bitmask,thisArg){var isBind=bitmask&BIND_FLAG,Ctor=createCtorWrapper(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;} /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=reHasComplexSymbol.test(string)?stringToArray(string):undefined;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};} /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};} /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */function createCtorWrapper(Ctor){return function(){ // Use a `switch` statement to work with class constructors. See
	// http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	// for more details.
	var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args); // Mimic the constructor's `return` behavior.
	// See https://es5.github.io/#x13.2.2 for more details.
	return isObject(result)?result:thisBinding;};} /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createCurryWrapper(func,bitmask,arity){var Ctor=createCtorWrapper(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurryWrapper(func,bitmask,createHybridWrapper,wrapper.placeholder,undefined,args,holders,undefined,undefined,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;} /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */function createFlow(fromRight){return rest(function(funcs){funcs=baseFlatten(funcs,1);var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined;if(data&&isLaziable(data[0])&&data[1]==(ARY_FLAG|CURRY_FLAG|PARTIAL_FLAG|REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else {wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)&&value.length>=LARGE_ARRAY_SIZE){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});} /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createHybridWrapper(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&ARY_FLAG,isBind=bitmask&BIND_FLAG,isBindKey=bitmask&BIND_KEY_FLAG,isCurried=bitmask&(CURRY_FLAG|CURRY_RIGHT_FLAG),isFlip=bitmask&FLIP_FLAG,Ctor=isBindKey?undefined:createCtorWrapper(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurryWrapper(func,bitmask,createHybridWrapper,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtorWrapper(fn);}return fn.apply(thisBinding,args);}return wrapper;} /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};} /**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new mathematical operation function.
	     */function createMathOperation(operator){return function(value,other){var result;if(value===undefined&&other===undefined){return 0;}if(value!==undefined){result=value;}if(other!==undefined){if(result===undefined){return other;}if(typeof value=='string'||typeof other=='string'){value=baseToString(value);other=baseToString(other);}else {value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};} /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */function createOver(arrayFunc){return rest(function(iteratees){iteratees=iteratees.length==1&&isArray(iteratees[0])?arrayMap(iteratees[0],baseUnary(getIteratee())):arrayMap(baseFlatten(iteratees,1,isFlattenableIteratee),baseUnary(getIteratee()));return rest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});} /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */function createPadding(length,chars){chars=chars===undefined?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return reHasComplexSymbol.test(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);} /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */function createPartialWrapper(func,bitmask,thisArg,partials){var isBind=bitmask&BIND_FLAG,Ctor=createCtorWrapper(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;} /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */function createRange(fromRight){return function(start,end,step){if(step&&typeof step!='number'&&isIterateeCall(start,end,step)){end=step=undefined;} // Ensure the sign of `-0` is preserved.
	start=toNumber(start);start=start===start?start:0;if(end===undefined){end=start;start=0;}else {end=toNumber(end)||0;}step=step===undefined?start<end?1:-1:toNumber(step)||0;return baseRange(start,end,step,fromRight);};} /**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */function createRelationalOperation(operator){return function(value,other){if(!(typeof value=='string'&&typeof other=='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};} /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createRecurryWrapper(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&CURRY_FLAG,newHolders=isCurry?holders:undefined,newHoldersRight=isCurry?undefined:holders,newPartials=isCurry?partials:undefined,newPartialsRight=isCurry?undefined:partials;bitmask|=isCurry?PARTIAL_FLAG:PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?PARTIAL_RIGHT_FLAG:PARTIAL_FLAG);if(!(bitmask&CURRY_BOUND_FLAG)){bitmask&=~(BIND_FLAG|BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return result;} /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=toInteger(precision);if(precision){ // Shift with exponential notation to avoid floating-point issues.
	// See [MDN](https://mdn.io/round#Examples) for more details.
	var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+ (+pair[1]+precision));pair=(toString(value)+'e').split('e');return +(pair[0]+'e'+ (+pair[1]-precision));}return func(number);};} /**
	     * Creates a set of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);}; /**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};} /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - `_.bind`
	     *     2 - `_.bindKey`
	     *     4 - `_.curry` or `_.curryRight` of a bound function
	     *     8 - `_.curry`
	     *    16 - `_.curryRight`
	     *    32 - `_.partial`
	     *    64 - `_.partialRight`
	     *   128 - `_.rearg`
	     *   256 - `_.ary`
	     *   512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */function createWrapper(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&BIND_KEY_FLAG;if(!isBindKey&&typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(PARTIAL_FLAG|PARTIAL_RIGHT_FLAG);partials=holders=undefined;}ary=ary===undefined?ary:nativeMax(toInteger(ary),0);arity=arity===undefined?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined;}var data=isBindKey?undefined:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]==null?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(CURRY_FLAG|CURRY_RIGHT_FLAG)){bitmask&=~(CURRY_FLAG|CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==BIND_FLAG){var result=createBaseWrapper(func,bitmask,thisArg);}else if(bitmask==CURRY_FLAG||bitmask==CURRY_RIGHT_FLAG){result=createCurryWrapper(func,bitmask,arity);}else if((bitmask==PARTIAL_FLAG||bitmask==(BIND_FLAG|PARTIAL_FLAG))&&!holders.length){result=createPartialWrapper(func,bitmask,thisArg,partials);}else {result=createHybridWrapper.apply(undefined,newData);}var setter=data?baseSetData:setData;return setter(result,newData);} /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */function equalArrays(array,other,equalFunc,customizer,bitmask,stack){var isPartial=bitmask&PARTIAL_COMPARE_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;} // Assume cyclic values are equal.
	var stacked=stack.get(array);if(stacked){return stacked==other;}var index=-1,result=true,seen=bitmask&UNORDERED_COMPARE_FLAG?new SetCache():undefined;stack.set(array,other); // Ignore non-index properties.
	while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined){if(compared){continue;}result=false;break;} // Recursively compare arrays (susceptible to call stack limits).
	if(seen){if(!arraySome(other,function(othValue,othIndex){if(!seen.has(othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,customizer,bitmask,stack))){return seen.add(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,customizer,bitmask,stack))){result=false;break;}}stack['delete'](array);return result;} /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function equalByTag(object,other,tag,equalFunc,customizer,bitmask,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag: // Coerce dates and booleans to numbers, dates to milliseconds and
	// booleans to `1` or `0` treating invalid dates coerced to `NaN` as
	// not equal.
	return +object==+other;case errorTag:return object.name==other.name&&object.message==other.message;case numberTag: // Treat `NaN` vs. `NaN` as equal.
	return object!=+object?other!=+other:object==+other;case regexpTag:case stringTag: // Coerce regexes to strings and treat strings, primitives and objects,
	// as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	// for more details.
	return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&PARTIAL_COMPARE_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;} // Assume cyclic values are equal.
	var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=UNORDERED_COMPARE_FLAG;stack.set(object,other); // Recursively compare objects (susceptible to call stack limits).
	return equalArrays(convert(object),convert(other),equalFunc,customizer,bitmask,stack);case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;} /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */function equalObjects(object,other,equalFunc,customizer,bitmask,stack){var isPartial=bitmask&PARTIAL_COMPARE_FLAG,objProps=keys(object),objLength=objProps.length,othProps=keys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:baseHas(other,key))){return false;}} // Assume cyclic values are equal.
	var stacked=stack.get(object);if(stacked){return stacked==other;}var result=true;stack.set(object,other);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);} // Recursively compare objects (susceptible to call stack limits).
	if(!(compared===undefined?objValue===othValue||equalFunc(objValue,othValue,customizer,bitmask,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor; // Non `Object` object instances with different constructors are not equal.
	if(objCtor!=othCtor&&'constructor' in object&&'constructor' in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);return result;} /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);} /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);} /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */var getData=!metaMap?noop:function(func){return metaMap.get(func);}; /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;} /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;} /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;} /**
	     * Gets the "length" property value of `object`.
	     *
	     * **Note:** This function is used to avoid a
	     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	     * Safari on at least iOS 8.1-8.3 ARM64.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {*} Returns the "length" value.
	     */var getLength=baseProperty('length'); /**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;} /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */function getMatchData(object){var result=toPairs(object),length=result.length;while(length--){result[length][2]=isStrictComparable(result[length][1]);}return result;} /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */function getNative(object,key){var value=object[key];return isNative(value)?value:undefined;} /**
	     * Gets the `[[Prototype]]` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {null|Object} Returns the `[[Prototype]]`.
	     */function getPrototype(value){return nativeGetPrototype(Object(value));} /**
	     * Creates an array of the own enumerable symbol properties of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */function getSymbols(object){ // Coerce `object` to an object to avoid non-object errors in V8.
	// See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
	return getOwnPropertySymbols(Object(object));} // Fallback for IE < 11.
	if(!getOwnPropertySymbols){getSymbols=function getSymbols(){return [];};} /**
	     * Creates an array of the own and inherited enumerable symbol properties
	     * of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */var getSymbolsIn=!getOwnPropertySymbols?getSymbols:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;}; /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */function getTag(value){return objectToString.call(value);} // Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge, and promises in Node.js.
	if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function getTag(value){var result=objectToString.call(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):undefined;if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};} /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case 'drop':start+=size;break;case 'dropRight':end-=size;break;case 'take':end=nativeMin(end,start+size);break;case 'takeRight':start=nativeMax(start,end-size);break;}}return {'start':start,'end':end};} /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */function hasPath(object,path,hasFunc){path=isKey(path,object)?[path]:castPath(path);var result,index=-1,length=path.length;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result){return result;}var length=object?object.length:0;return !!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isString(object)||isArguments(object));} /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */function initCloneArray(array){var length=array.length,result=array.constructor(length); // Add properties assigned by `RegExp#exec`.
	if(length&&typeof array[0]=='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;} /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */function initCloneObject(object){return typeof object.constructor=='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};} /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */function initCloneByTag(object,tag,cloneFunc,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return cloneMap(object,isDeep,cloneFunc);case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return cloneSet(object,isDeep,cloneFunc);case symbolTag:return cloneSymbol(object);}} /**
	     * Creates an array of index keys for `object` values of arrays,
	     * `arguments` objects, and strings, otherwise `null` is returned.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array|null} Returns index keys, else `null`.
	     */function indexKeys(object){var length=object?object.length:undefined;if(isLength(length)&&(isArray(object)||isString(object)||isArguments(object))){return baseTimes(length,String);}return null;} /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */function isFlattenable(value){return isArray(value)||isArguments(value);} /**
	     * Checks if `value` is a flattenable array and not a `_.matchesProperty`
	     * iteratee shorthand.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */function isFlattenableIteratee(value){return isArray(value)&&!(value.length==2&&!isFunction(value[0]));} /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */function isIndex(value,length){length=length==null?MAX_SAFE_INTEGER:length;return !!length&&(typeof value=='number'||reIsUint.test(value))&&value>-1&&value%1==0&&value<length;} /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=typeof index==='undefined'?'undefined':_typeof(index);if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;} /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */function isKey(value,object){if(isArray(value)){return false;}var type=typeof value==='undefined'?'undefined':_typeof(value);if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);} /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */function isKeyable(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;} /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return !!data&&func===data[0];} /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;} /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */function isStrictComparable(value){return value===value&&!isObject(value);} /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined||key in Object(object));};} /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(BIND_FLAG|BIND_KEY_FLAG|ARY_FLAG);var isCombo=srcBitmask==ARY_FLAG&&bitmask==CURRY_FLAG||srcBitmask==ARY_FLAG&&bitmask==REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(ARY_FLAG|REARG_FLAG)&&source[7].length<=source[8]&&bitmask==CURRY_FLAG; // Exit early if metadata can't be merged.
	if(!(isCommon||isCombo)){return data;} // Use source `thisArg` if available.
	if(srcBitmask&BIND_FLAG){data[2]=source[2]; // Set when currying a bound function.
	newBitmask|=bitmask&BIND_FLAG?0:CURRY_BOUND_FLAG;} // Compose partial arguments.
	var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];} // Compose partial right arguments.
	value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];} // Use source `argPos` if available.
	value=source[7];if(value){data[7]=value;} // Use source `ary` if it's smaller.
	if(srcBitmask&ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);} // Use source `arity` if one is not provided.
	if(data[9]==null){data[9]=source[9];} // Use source `func` and merge bitmasks.
	data[0]=source[0];data[1]=newBitmask;return data;} /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */function mergeDefaults(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){baseMerge(objValue,srcValue,undefined,mergeDefaults,stack.set(srcValue,objValue));}return objValue;} /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */function parent(object,path){return path.length==1?object:baseGet(object,baseSlice(path,0,-1));} /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined;}return array;} /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */var setData=function(){var count=0,lastCalled=0;return function(key,value){var stamp=now(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return key;}}else {count=0;}return baseSetData(key,value);};}(); /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */var stringToPath=memoize(function(string){var result=[];toString(string).replace(rePropName,function(match,number,quote,string){result.push(quote?string.replace(reEscapeChar,'$1'):number||match);});return result;}); /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;} /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to process.
	     * @returns {string} Returns the source code.
	     */function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return '';} /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;} /*------------------------------------------------------------------------*/ /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined){size=1;}else {size=nativeMax(toInteger(size),0);}var length=array?array.length:0;if(!length||size<1){return [];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;} /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */function compact(array){var index=-1,length=array?array.length:0,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;} /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */function concat(){var length=arguments.length,args=Array(length?length-1:0),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return length?arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1)):[];} /**
	     * Creates an array of unique `array` values not included in the other given
	     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([3, 2, 1], [4, 2]);
	     * // => [3, 1]
	     */var difference=rest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];}); /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);
	     * // => [3.1, 1.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */var differenceBy=rest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee)):[];}); /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. Result values
	     * are chosen from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */var differenceWith=rest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined,comparator):[];}); /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */function drop(array,n,guard){var length=array?array.length:0;if(!length){return [];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,n<0?0:n,length);} /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */function dropRight(array,n,guard){var length=array?array.length:0;if(!length){return [];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);} /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];} /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];} /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */function fill(array,value,start,end){var length=array?array.length:0;if(!length){return [];}if(start&&typeof start!='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);} /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */function findIndex(array,predicate){return array&&array.length?baseFindIndex(array,getIteratee(predicate,3)):-1;} /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */function findLastIndex(array,predicate){return array&&array.length?baseFindIndex(array,getIteratee(predicate,3),true):-1;} /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */function flatten(array){var length=array?array.length:0;return length?baseFlatten(array,1):[];} /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */function flattenDeep(array){var length=array?array.length:0;return length?baseFlatten(array,INFINITY):[];} /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */function flattenDepth(array,depth){var length=array?array.length:0;if(!length){return [];}depth=depth===undefined?1:toInteger(depth);return baseFlatten(array,depth);} /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['fred', 30], ['barney', 40]]);
	     * // => { 'fred': 30, 'barney': 40 }
	     */function fromPairs(pairs){var index=-1,length=pairs?pairs.length:0,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;} /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */function head(array){return array&&array.length?array[0]:undefined;} /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */function indexOf(array,value,fromIndex){var length=array?array.length:0;if(!length){return -1;}fromIndex=toInteger(fromIndex);if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return baseIndexOf(array,value,fromIndex);} /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */function initial(array){return dropRight(array,1);} /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [4, 2], [1, 2]);
	     * // => [2]
	     */var intersection=rest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];}); /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */var intersectionBy=rest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined;}else {mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee)):[];}); /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. Result values are chosen
	     * from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */var intersectionWith=rest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(comparator===last(mapped)){comparator=undefined;}else {mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined,comparator):[];}); /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */function join(array,separator){return array?nativeJoin.call(array,separator):'';} /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */function last(array){var length=array?array.length:0;return length?array[length-1]:undefined;} /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */function lastIndexOf(array,value,fromIndex){var length=array?array.length:0;if(!length){return -1;}var index=length;if(fromIndex!==undefined){index=toInteger(fromIndex);index=(index<0?nativeMax(length+index,0):nativeMin(index,length-1))+1;}if(value!==value){return indexOfNaN(array,index,true);}while(index--){if(array[index]===value){return index;}}return -1;} /**
	     * Gets the element at `n` index of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined;} /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pull(array, 2, 3);
	     * console.log(array);
	     * // => [1, 1]
	     */var pull=rest(pullAll); /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pullAll(array, [2, 3]);
	     * console.log(array);
	     * // => [1, 1]
	     */function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;} /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee)):array;} /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined,comparator):array;} /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [5, 10, 15, 20];
	     * var evens = _.pullAt(array, 1, 3);
	     *
	     * console.log(array);
	     * // => [5, 15]
	     *
	     * console.log(evens);
	     * // => [10, 20]
	     */var pullAt=rest(function(array,indexes){indexes=baseFlatten(indexes,1);var length=array?array.length:0,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;}); /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;} /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */function reverse(array){return array?nativeReverse.call(array):array;} /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */function slice(array,start,end){var length=array?array.length:0;if(!length){return [];}if(end&&typeof end!='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else {start=start==null?0:toInteger(start);end=end===undefined?length:toInteger(end);}return baseSlice(array,start,end);} /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     *
	     * _.sortedIndex([4, 5], 4);
	     * // => 0
	     */function sortedIndex(array,value){return baseSortedIndex(array,value);} /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };
	     *
	     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 0
	     */function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee));} /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([1, 1, 2, 2], 2);
	     * // => 2
	     */function sortedIndexOf(array,value){var length=array?array.length:0;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return -1;} /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5], 4);
	     * // => 1
	     */function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);} /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 1
	     */function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee),true);} /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([1, 1, 2, 2], 2);
	     * // => 3
	     */function sortedLastIndexOf(array,value){var length=array?array.length:0;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return -1;} /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];} /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee)):[];} /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */function tail(array){return drop(array,1);} /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */function take(array,n,guard){if(!(array&&array.length)){return [];}n=guard||n===undefined?1:toInteger(n);return baseSlice(array,0,n<0?0:n);} /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */function takeRight(array,n,guard){var length=array?array.length:0;if(!length){return [];}n=guard||n===undefined?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);} /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];} /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];} /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2, 1], [4, 2], [1, 2]);
	     * // => [2, 1, 4]
	     */var union=rest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));}); /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1, 1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */var unionBy=rest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee));}); /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */var unionWith=rest(function(arrays){var comparator=last(arrays);if(isArrayLikeObject(comparator)){comparator=undefined;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined,comparator);}); /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each
	     * element is kept.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */function uniq(array){return array&&array.length?baseUniq(array):[];} /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee)):[];} /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */function uniqWith(array,comparator){return array&&array.length?baseUniq(array,undefined,comparator):[];} /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['fred', 'barney'], [30, 40], [true, false]]
	     */function unzip(array){if(!(array&&array.length)){return [];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});} /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */function unzipWith(array,iteratee){if(!(array&&array.length)){return [];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined,group);});} /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([1, 2, 1, 3], 1, 2);
	     * // => [3]
	     */var without=rest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];}); /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [4, 2]);
	     * // => [1, 4]
	     */var xor=rest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));}); /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */var xorBy=rest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee));}); /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */var xorWith=rest(function(arrays){var comparator=last(arrays);if(isArrayLikeObject(comparator)){comparator=undefined;}return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined,comparator);}); /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     */var zip=rest(unzip); /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);} /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);} /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */var zipWith=rest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined;iteratee=typeof iteratee=='function'?(arrays.pop(),iteratee):undefined;return unzipWith(arrays,iteratee);}); /*------------------------------------------------------------------------*/ /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */function chain(value){var result=lodash(value);result.__chain__=true;return result;} /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */function tap(value,interceptor){interceptor(value);return value;} /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */function thru(value,interceptor){return interceptor(value);} /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     *
	     * _(['a', 'b', 'c']).at(0, 2).value();
	     * // => ['a', 'c']
	     */var wrapperAt=rest(function(paths){paths=baseFlatten(paths,1);var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function interceptor(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined);}return array;});}); /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */function wrapperChain(){return chain(this);} /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);} /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */function wrapperNext(){if(this.__values__===undefined){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined:this.__values__[this.__index__++];return {'done':done,'value':value};} /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */function wrapperToIterator(){return this;} /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined;if(result){previous.__wrapped__=clone;}else {result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;} /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({'func':thru,'args':[reverse],'thisArg':undefined});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);} /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);} /*------------------------------------------------------------------------*/ /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */var countBy=createAggregator(function(result,value,key){hasOwnProperty.call(result,key)?++result[key]:result[key]=1;}); /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));} /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));} /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */function find(collection,predicate){predicate=getIteratee(predicate,3);if(isArray(collection)){var index=baseFindIndex(collection,predicate);return index>-1?collection[index]:undefined;}return baseFind(collection,predicate,baseEach);} /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */function findLast(collection,predicate){predicate=getIteratee(predicate,3);if(isArray(collection)){var index=baseFindIndex(collection,predicate,true);return index>-1?collection[index]:undefined;}return baseFind(collection,predicate,baseEachRight);} /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);} /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);} /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */function flatMapDepth(collection,iteratee,depth){depth=depth===undefined?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);} /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _([1, 2]).forEach(function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));} /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));} /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else {result[key]=[value];}}); /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
	     * // => true
	     *
	     * _.includes('pebbles', 'eb');
	     * // => true
	     */function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;} /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `methodName` is a function, it's
	     * invoked for and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */var invokeMap=rest(function(collection,path,args){var index=-1,isFunc=typeof path=='function',isProp=isKey(path),result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){var func=isFunc?path:isProp&&value!=null?value[path]:undefined;result[++index]=func?apply(func,value,args):baseInvoke(value,path,args);});return result;}); /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */var keyBy=createAggregator(function(result,value,key){result[key]=value;}); /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));} /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */function orderBy(collection,iteratees,orders,guard){if(collection==null){return [];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);} /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return [[],[]];}); /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);} /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);} /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;predicate=getIteratee(predicate,3);return func(collection,function(value,index,collection){return !predicate(value,index,collection);});} /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */function sample(collection){var array=isArrayLike(collection)?collection:values(collection),length=array.length;return length>0?array[baseRandom(0,length-1)]:undefined;} /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */function sampleSize(collection,n,guard){var index=-1,result=toArray(collection),length=result.length,lastIndex=length-1;if(guard?isIterateeCall(collection,n,guard):n===undefined){n=1;}else {n=baseClamp(toInteger(n),0,length);}while(++index<n){var rand=baseRandom(index,lastIndex),value=result[rand];result[rand]=result[index];result[index]=value;}result.length=n;return result;} /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */function shuffle(collection){return sampleSize(collection,MAX_ARRAY_LENGTH);} /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){var result=collection.length;return result&&isString(collection)?stringSize(collection):result;}if(isObjectLike(collection)){var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}}return keys(collection).length;} /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined;}return func(collection,getIteratee(predicate,3));} /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [iteratees=[_.identity]] The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, function(o) { return o.user; });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     *
	     * _.sortBy(users, 'user', function(o) {
	     *   return Math.floor(o.age / 10);
	     * });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */var sortBy=rest(function(collection,iteratees){if(collection==null){return [];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}iteratees=iteratees.length==1&&isArray(iteratees[0])?iteratees[0]:baseFlatten(iteratees,1,isFlattenableIteratee);return baseOrderBy(collection,iteratees,[]);}); /*------------------------------------------------------------------------*/ /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @type {Function}
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred function to be invoked.
	     */var now=Date.now; /*------------------------------------------------------------------------*/ /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */function after(n,func){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};} /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */function ary(func,n,guard){n=guard?undefined:n;n=func&&n==null?func.length:n;return createWrapper(func,ARY_FLAG,undefined,undefined,undefined,undefined,n);} /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => allows adding up to 4 contacts to the list
	     */function before(n,func){var result;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined;}return result;};} /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind` this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var greet = function(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * };
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */var bind=rest(function(func,thisArg,partials){var bitmask=BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=PARTIAL_FLAG;}return createWrapper(func,bitmask,thisArg,partials,holders);}); /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */var bindKey=rest(function(object,key,partials){var bitmask=BIND_FLAG|BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=PARTIAL_FLAG;}return createWrapper(key,bitmask,object,partials,holders);}); /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */function curry(func,arity,guard){arity=guard?undefined:arity;var result=createWrapper(func,CURRY_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curry.placeholder;return result;} /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */function curryRight(func,arity,guard){arity=guard?undefined:arity;var result=createWrapper(func,CURRY_RIGHT_FLAG,undefined,undefined,undefined,undefined,undefined,arity);result.placeholder=curryRight.placeholder;return result;} /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide an options object to indicate whether `func` should be invoked on
	     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent calls
	     * to the debounced function return the result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	     * on the trailing edge of the timeout only if the debounced function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime=0,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait' in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing' in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){ // Reset any `maxWait` timer.
	lastInvokeTime=time; // Start the timer for the trailing edge.
	timerId=setTimeout(timerExpired,wait); // Invoke the leading edge.
	return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,result=wait-timeSinceLastCall;return maxing?nativeMin(result,maxWait-timeSinceLastInvoke):result;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime; // Either this is the first call, activity has stopped and we're at the
	// trailing edge, the system time has gone backwards and we're treating
	// it as the trailing edge, or we've hit the `maxWait` limit.
	return !lastCallTime||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);} // Restart the timer.
	timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){clearTimeout(timerId);timerId=undefined; // Only invoke if we have `lastArgs` which means `func` has been
	// debounced at least once.
	if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined;return result;}function cancel(){if(timerId!==undefined){clearTimeout(timerId);}lastCallTime=lastInvokeTime=0;lastArgs=lastThis=timerId=undefined;}function flush(){return timerId===undefined?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined){return leadingEdge(lastCallTime);}if(maxing){ // Handle invocations in a tight loop.
	clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;} /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one or more milliseconds.
	     */var defer=rest(function(func,args){return baseDelay(func,1,args);}); /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */var delay=rest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);}); /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */function flip(func){return createWrapper(func,FLIP_FLAG);} /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */function memoize(func,resolver){if(typeof func!='function'||resolver&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result);return result;};memoized.cache=new (memoize.Cache||MapCache)();return memoized;} // Assign cache to `_.memoize`.
	memoize.Cache=MapCache; /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */function negate(predicate){if(typeof predicate!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){return !predicate.apply(this,arguments);};} /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // `initialize` invokes `createApplication` once
	     */function once(func){return before(2,func);} /**
	     * Creates a function that invokes `func` with arguments transformed by
	     * corresponding `transforms`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [transforms[_.identity]] The functions to transform.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, square, doubled);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */var overArgs=rest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1,isFlattenableIteratee),baseUnary(getIteratee()));var funcsLength=transforms.length;return rest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});}); /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */var partial=rest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrapper(func,PARTIAL_FLAG,undefined,partials,holders);}); /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */var partialRight=rest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrapper(func,PARTIAL_RIGHT_FLAG,undefined,partials,holders);}); /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, 2, 0, 1);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */var rearg=rest(function(func,indexes){return createWrapper(func,REARG_FLAG,undefined,undefined,undefined,baseFlatten(indexes,1));}); /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */function rest(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=nativeMax(start===undefined?func.length-1:toInteger(start),0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}switch(start){case 0:return func.call(this,array);case 1:return func.call(this,args[0],array);case 2:return func.call(this,args[0],args[1],array);}var otherArgs=Array(start+1);index=-1;while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=array;return apply(func,this,otherArgs);};} /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */function spread(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined?0:nativeMax(toInteger(start),0);return rest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});} /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide an options object to indicate whether
	     * `func` should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading' in options?!!options.leading:leading;trailing='trailing' in options?!!options.trailing:trailing;}return debounce(func,wait,{'leading':leading,'maxWait':wait,'trailing':trailing});} /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */function unary(func){return ary(func,1);} /**
	     * Creates a function that provides `value` to the wrapper function as its
	     * first argument. Any additional arguments provided to the function are
	     * appended to those provided to the wrapper function. The wrapper is invoked
	     * with the `this` binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */function wrap(value,wrapper){wrapper=wrapper==null?identity:wrapper;return partial(wrapper,value);} /*------------------------------------------------------------------------*/ /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */function castArray(){if(!arguments.length){return [];}var value=arguments[0];return isArray(value)?value:[value];} /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */function clone(value){return baseClone(value,false,true);} /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */function cloneWith(value,customizer){return baseClone(value,false,true,customizer);} /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */function cloneDeep(value){return baseClone(value,true,true);} /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */function cloneDeepWith(value,customizer){return baseClone(value,true,true,customizer);} /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */function eq(value,other){return value===other||value!==value&&other!==other;} /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */var gt=createRelationalOperation(baseGt); /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */var gte=createRelationalOperation(function(value,other){return value>=other;}); /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */function isArguments(value){ // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	return isArrayLikeObject(value)&&hasOwnProperty.call(value,'callee')&&(!propertyIsEnumerable.call(value,'callee')||objectToString.call(value)==argsTag);} /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @type {Function}
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */var isArray=Array.isArray; /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */function isArrayBuffer(value){return isObjectLike(value)&&objectToString.call(value)==arrayBufferTag;} /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */function isArrayLike(value){return value!=null&&isLength(getLength(value))&&!isFunction(value);} /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);} /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */function isBoolean(value){return value===true||value===false||isObjectLike(value)&&objectToString.call(value)==boolTag;} /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */var isBuffer=!Buffer?constant(false):function(value){return value instanceof Buffer;}; /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */function isDate(value){return isObjectLike(value)&&objectToString.call(value)==dateTag;} /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element,
	     *  else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */function isElement(value){return !!value&&value.nodeType===1&&isObjectLike(value)&&!isPlainObject(value);} /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */function isEmpty(value){if(isArrayLike(value)&&(isArray(value)||isString(value)||isFunction(value.splice)||isArguments(value)||isBuffer(value))){return !value.length;}if(isObjectLike(value)){var tag=getTag(value);if(tag==mapTag||tag==setTag){return !value.size;}}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return !(nonEnumShadows&&keys(value).length);} /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are **not** supported.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */function isEqual(value,other){return baseIsEqual(value,other);} /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */function isEqualWith(value,other,customizer){customizer=typeof customizer=='function'?customizer:undefined;var result=customizer?customizer(value,other):undefined;return result===undefined?baseIsEqual(value,other,customizer):!!result;} /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object,
	     *  else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */function isError(value){if(!isObjectLike(value)){return false;}return objectToString.call(value)==errorTag||typeof value.message=='string'&&typeof value.name=='string';} /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number,
	     *  else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */function isFinite(value){return typeof value=='number'&&nativeIsFinite(value);} /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */function isFunction(value){ // The use of `Object#toString` avoids issues with the `typeof` operator
	// in Safari 8 which returns 'object' for typed array and weak map constructors,
	// and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	var tag=isObject(value)?objectToString.call(value):'';return tag==funcTag||tag==genTag;} /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */function isInteger(value){return typeof value=='number'&&value==toInteger(value);} /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length,
	     *  else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;} /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */function isObject(value){var type=typeof value==='undefined'?'undefined':_typeof(value);return !!value&&(type=='object'||type=='function');} /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */function isObjectLike(value){return !!value&&(typeof value==='undefined'?'undefined':_typeof(value))=='object';} /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */function isMap(value){return isObjectLike(value)&&getTag(value)==mapTag;} /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values. This method is
	     * equivalent to a `_.matches` function when `source` is partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred', 'age': 40 };
	     *
	     * _.isMatch(object, { 'age': 40 });
	     * // => true
	     *
	     * _.isMatch(object, { 'age': 36 });
	     * // => false
	     */function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));} /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */function isMatchWith(object,source,customizer){customizer=typeof customizer=='function'?customizer:undefined;return baseIsMatch(object,source,getMatchData(source),customizer);} /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */function isNaN(value){ // An `NaN` primitive is the only value that is not equal to itself.
	// Perform the `toStringTag` check first to avoid errors with some
	// ActiveX objects in IE.
	return isNumber(value)&&value!=+value;} /**
	     * Checks if `value` is a native function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */function isNative(value){if(!isObject(value)){return false;}var pattern=isFunction(value)||isHostObject(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));} /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */function isNull(value){return value===null;} /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */function isNil(value){return value==null;} /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */function isNumber(value){return typeof value=='number'||isObjectLike(value)&&objectToString.call(value)==numberTag;} /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object,
	     *  else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */function isPlainObject(value){if(!isObjectLike(value)||objectToString.call(value)!=objectTag||isHostObject(value)){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;} /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */function isRegExp(value){return isObject(value)&&objectToString.call(value)==regexpTag;} /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer,
	     *  else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;} /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */function isSet(value){return isObjectLike(value)&&getTag(value)==setTag;} /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */function isString(value){return typeof value=='string'||!isArray(value)&&isObjectLike(value)&&objectToString.call(value)==stringTag;} /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */function isSymbol(value){return (typeof value==='undefined'?'undefined':_typeof(value))=='symbol'||isObjectLike(value)&&objectToString.call(value)==symbolTag;} /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */function isTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[objectToString.call(value)];} /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */function isUndefined(value){return value===undefined;} /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;} /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */function isWeakSet(value){return isObjectLike(value)&&objectToString.call(value)==weakSetTag;} /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */var lt=createRelationalOperation(baseLt); /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */var lte=createRelationalOperation(function(value,other){return value<=other;}); /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */function toArray(value){if(!value){return [];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(iteratorSymbol&&value[iteratorSymbol]){return iteratorToArray(value[iteratorSymbol]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);} /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;} /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;} /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;} /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */function toNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=isFunction(value.valueOf)?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=value.replace(reTrim,'');var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;} /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */function toPlainObject(value){return copyObject(value,keysIn(value));} /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */function toSafeInteger(value){return baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER);} /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */function toString(value){return value==null?'':baseToString(value);} /*------------------------------------------------------------------------*/ /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.c = 3;
	     * }
	     *
	     * function Bar() {
	     *   this.e = 5;
	     * }
	     *
	     * Foo.prototype.d = 4;
	     * Bar.prototype.f = 6;
	     *
	     * _.assign({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3, 'e': 5 }
	     */var assign=createAssigner(function(object,source){if(nonEnumShadows||isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}}); /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * function Bar() {
	     *   this.d = 4;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     * Bar.prototype.e = 5;
	     *
	     * _.assignIn({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }
	     */var assignIn=createAssigner(function(object,source){if(nonEnumShadows||isPrototype(source)||isArrayLike(source)){copyObject(source,keysIn(source),object);return;}for(var key in source){assignValue(object,key,source[key]);}}); /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);}); /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);}); /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     *
	     * _.at(['a', 'b', 'c'], 0, 2);
	     * // => ['a', 'c']
	     */var at=rest(function(object,paths){return baseAt(object,baseFlatten(paths,1));}); /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */function create(prototype,properties){var result=baseCreate(prototype);return properties?baseAssign(result,properties):result;} /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
	     * // => { 'user': 'barney', 'age': 36 }
	     */var defaults=rest(function(args){args.push(undefined,assignInDefaults);return apply(assignInWith,undefined,args);}); /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
	     * // => { 'user': { 'name': 'barney', 'age': 36 } }
	     *
	     */var defaultsDeep=rest(function(args){args.push(undefined,mergeDefaults);return apply(mergeWith,undefined,args);}); /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */function findKey(object,predicate){return baseFind(object,getIteratee(predicate,3),baseForOwn,true);} /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */function findLastKey(object,predicate){return baseFind(object,getIteratee(predicate,3),baseForOwnRight,true);} /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);} /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);} /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));} /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));} /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */function functions(object){return object==null?[]:baseFunctions(object,keys(object));} /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));} /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is used in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */function get(object,path,defaultValue){var result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result;} /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */function has(object,path){return object!=null&&hasPath(object,path,baseHas);} /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);} /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */var invert=createInverter(function(result,value,key){result[value]=key;},constant(identity)); /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */var invertBy=createInverter(function(result,value,key){if(hasOwnProperty.call(result,value)){result[value].push(key);}else {result[value]=[key];}},getIteratee); /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */var invoke=rest(baseInvoke); /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */function keys(object){var isProto=isPrototype(object);if(!(isProto||isArrayLike(object))){return baseKeys(object);}var indexes=indexKeys(object),skipIndexes=!!indexes,result=indexes||[],length=result.length;for(var key in object){if(baseHas(object,key)&&!(skipIndexes&&(key=='length'||isIndex(key,length)))&&!(isProto&&key=='constructor')){result.push(key);}}return result;} /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */function keysIn(object){var index=-1,isProto=isPrototype(object),props=baseKeysIn(object),propsLength=props.length,indexes=indexKeys(object),skipIndexes=!!indexes,result=indexes||[],length=result.length;while(++index<propsLength){var key=props[index];if(!(skipIndexes&&(key=='length'||isIndex(key,length)))&&!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;} /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){result[iteratee(value,key,object)]=value;});return result;} /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){result[key]=iteratee(value,key,object);});return result;} /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var users = {
	     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	     * };
	     *
	     * var ages = {
	     *   'data': [{ 'age': 36 }, { 'age': 40 }]
	     * };
	     *
	     * _.merge(users, ages);
	     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	     */var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);}); /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with seven arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = {
	     *   'fruits': ['apple'],
	     *   'vegetables': ['beet']
	     * };
	     *
	     * var other = {
	     *   'fruits': ['banana'],
	     *   'vegetables': ['carrot']
	     * };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
	     */var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);}); /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable string keyed properties of `object` that are
	     * not omitted.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */var omit=rest(function(object,props){if(object==null){return {};}props=arrayMap(baseFlatten(props,1),toKey);return basePick(object,baseDifference(getAllKeysIn(object),props));}); /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */function omitBy(object,predicate){predicate=getIteratee(predicate);return basePickBy(object,function(value,key){return !predicate(value,key);});} /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */var pick=rest(function(object,props){return object==null?{}:basePick(object,arrayMap(baseFlatten(props,1),toKey));}); /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */function pickBy(object,predicate){return object==null?{}:basePickBy(object,getIteratee(predicate));} /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */function result(object,path,defaultValue){path=isKey(path,object)?[path]:castPath(path);var index=-1,length=path.length; // Ensure the loop is entered when path is empty.
	if(!length){object=undefined;length=1;}while(++index<length){var value=object==null?undefined:object[toKey(path[index])];if(value===undefined){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;} /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */function set(object,path,value){return object==null?object:baseSet(object,path,value);} /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */function setWith(object,path,value,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseSet(object,path,value,customizer);} /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */var toPairs=createToPairs(keys); /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */var toPairsIn=createToPairs(keysIn); /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. The iteratee is invoked
	     * with four arguments: (accumulator, value, key, object). Iteratee functions
	     * may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Array|Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */function transform(object,iteratee,accumulator){var isArr=isArray(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){if(isArr||isObject(object)){var Ctor=object.constructor;if(isArr){accumulator=isArray(object)?new Ctor():[];}else {accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}}else {accumulator={};}}(isArr?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;} /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */function unset(object,path){return object==null?true:baseUnset(object,path);} /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));} /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */function updateWith(object,path,updater,customizer){customizer=typeof customizer=='function'?customizer:undefined;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);} /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */function values(object){return object?baseValues(object,keys(object)):[];} /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));} /*------------------------------------------------------------------------*/ /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */function clamp(number,lower,upper){if(upper===undefined){upper=lower;lower=undefined;}if(upper!==undefined){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);} /**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */function inRange(number,start,end){start=toNumber(start)||0;if(end===undefined){end=start;start=0;}else {end=toNumber(end)||0;}number=toNumber(number);return baseInRange(number,start,end);} /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */function random(lower,upper,floating){if(floating&&typeof floating!='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined;}if(floating===undefined){if(typeof upper=='boolean'){floating=upper;upper=undefined;}else if(typeof lower=='boolean'){floating=lower;lower=undefined;}}if(lower===undefined&&upper===undefined){lower=0;upper=1;}else {lower=toNumber(lower)||0;if(upper===undefined){upper=lower;lower=0;}else {upper=toNumber(upper)||0;}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);} /*------------------------------------------------------------------------*/ /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);}); /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */function capitalize(string){return upperFirst(toString(string).toLowerCase());} /**
	     * Deburrs `string` by converting
	     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * to basic latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */function deburr(string){string=toString(string);return string&&string.replace(reLatin1,deburrLetter).replace(reComboMark,'');} /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search from.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined?length:baseClamp(toInteger(position),0,length);position-=target.length;return position>=0&&string.indexOf(target,position)==position;} /**
	     * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
	     * their corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * Backticks are escaped because in IE < 9, they can break out of
	     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	     * [#133](https://html5sec.org/#133) of the
	     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;} /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;} /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();}); /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();}); /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */var lowerFirst=createCaseFirst('toLowerCase'); /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);} /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;} /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;} /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */function parseInt(string,radix,guard){ // Chrome fails to trim leading <BOM> whitespace characters.
	// See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.
	if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}string=toString(string).replace(reTrim,'');return nativeParseInt(string,radix||(reHasHexPrefix.test(string)?16:10));} /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined){n=1;}else {n=toInteger(n);}return baseRepeat(toString(string),n);} /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:nativeReplace.call(string,args[1],args[2]);} /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();}); /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */function split(string,separator,limit){if(limit&&typeof limit!='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined;}limit=limit===undefined?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return [];}string=toString(string);if(string&&(typeof separator=='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(separator==''&&reHasComplexSymbol.test(string)){return castSlice(stringToArray(string),0,limit);}}return nativeSplit.call(string,separator,limit);} /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);}); /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */function startsWith(string,target,position){string=toString(string);position=baseClamp(toInteger(position),0,string.length);return string.lastIndexOf(baseToString(target),position)==position;} /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES delimiter as an alternative to the default "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */function template(string,options,guard){ // Based on John Resig's `tmpl` implementation
	// (http://ejohn.org/blog/javascript-micro-templating/)
	// and Laura Doktorova's doT.js (https://github.com/olado/doT).
	var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined;}string=toString(string);options=assignInWith({},options,settings,assignInDefaults);var imports=assignInWith({},options.imports,settings.imports,assignInDefaults),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '"; // Compile the regexp to match each delimiter.
	var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g'); // Use a sourceURL for easier debugging.
	var sourceURL='//# sourceURL='+('sourceURL' in options?options.sourceURL:'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue); // Escape characters that can't be included in string literals.
	source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar); // Replace delimiters with snippets.
	if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length; // The JS engine embedded in Adobe products needs `match` returned in
	// order to produce the correct `offset` value.
	return match;});source+="';\n"; // If `variable` is not specified wrap a with-statement around the generated
	// code to add the data object to the top of the scope chain.
	var variable=options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';} // Cleanup code by stripping empty strings.
	source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;'); // Frame code as the function body.
	source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined,importsValues);}); // Provide the compiled function's source by its `toString` method or
	// the `source` property as a convenience for inlining compiled templates.
	result.source=source;if(isError(result)){throw result;}return result;} /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */function toLower(value){return toString(value).toLowerCase();} /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */function toUpper(value){return toString(value).toUpperCase();} /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrim,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');} /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrimEnd,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');} /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');} /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator' in options?options.separator:separator;length='length' in options?toInteger(options.length):length;omission='omission' in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(reHasComplexSymbol.test(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;} /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;} /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();}); /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */var upperFirst=createCaseFirst('toUpperCase'); /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */function words(string,pattern,guard){string=toString(string);pattern=guard?undefined:pattern;if(pattern===undefined){pattern=reHasComplexWord.test(string)?reComplexWord:reBasicWord;}return string.match(pattern)||[];} /*------------------------------------------------------------------------*/ /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */var attempt=rest(function(func,args){try{return apply(func,undefined,args);}catch(e){return isError(e)?e:new Error(e);}}); /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'onClick': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, 'onClick');
	     * jQuery(element).on('click', view.onClick);
	     * // => Logs 'clicked docs' when clicked.
	     */var bindAll=rest(function(object,methodNames){arrayEach(baseFlatten(methodNames,1),function(key){key=toKey(key);object[key]=bind(object[key],object);});return object;}); /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.constant(true),                _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */function cond(pairs){var length=pairs?pairs.length:0,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return [toIteratee(pair[0]),pair[1]];});return rest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});} /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     */function conforms(source){return baseConforms(baseClone(source,true));} /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var getter = _.constant(object);
	     *
	     * getter() === object;
	     * // => true
	     */function constant(value){return function(){return value;};} /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow(_.add, square);
	     * addSquare(1, 2);
	     * // => 9
	     */var flow=createFlow(); /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight(square, _.add);
	     * addSquare(1, 2);
	     * // => 9
	     */var flowRight=createFlow(true); /**
	     * This method returns the first argument given to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.identity(object) === object;
	     * // => true
	     */function identity(value){return value;} /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */function iteratee(func){return baseIteratee(typeof func=='function'?func:baseClone(func,true));} /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`. The created function is equivalent to
	     * `_.isMatch` with a `source` partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
	     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
	     */function matches(source){return baseMatches(baseClone(source,true));} /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * _.find(users, _.matchesProperty('user', 'fred'));
	     * // => { 'user': 'fred' }
	     */function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,true));} /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */var method=rest(function(path,args){return function(object){return baseInvoke(object,path,args);};}); /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */var methodOf=rest(function(object,args){return function(path){return baseInvoke(object,path,args);};}); /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain' in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({'func':func,'args':arguments,'thisArg':object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;} /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */function noConflict(){if(root._===this){root._=oldDash;}return this;} /**
	     * A no-operation function that returns `undefined` regardless of the
	     * arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.noop(object) === undefined;
	     * // => true
	     */function noop(){} // No operation performed.
	/**
	     * Creates a function that gets the argument at `n` index. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */function nthArg(n){n=toInteger(n);return rest(function(args){return baseNth(args,n);});} /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [iteratees=[_.identity]] The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over(Math.max, Math.min);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */var over=createOver(arrayMap); /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [predicates=[_.identity]] The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */var overEvery=createOver(arrayEvery); /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [predicates=[_.identity]] The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */var overSome=createOver(arraySome); /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);} /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */function propertyOf(object){return function(path){return object==null?undefined:baseGet(object,path);};} /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */var range=createRange(); /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */var rangeRight=createRange(true); /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(true));
	     * // => [true, true, true, true]
	     */function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return [];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;} /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     *
	     * var path = ['a', 'b', 'c'],
	     *     newPath = _.toPath(path);
	     *
	     * console.log(newPath);
	     * // => ['a', 'b', 'c']
	     *
	     * console.log(path === newPath);
	     * // => false
	     */function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(value));} /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;} /*------------------------------------------------------------------------*/ /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */var add=createMathOperation(function(augend,addend){return augend+addend;}); /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */var ceil=createRound('ceil'); /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;}); /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */var floor=createRound('floor'); /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined;} /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee),baseGt):undefined;} /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */function mean(array){return baseMean(array,identity);} /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee));} /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined;} /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee),baseLt):undefined;} /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;}); /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */var round=createRound('round'); /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;}); /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */function sum(array){return array&&array.length?baseSum(array,identity):0;} /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee)):0;} /*------------------------------------------------------------------------*/ // Add methods that return wrapped values in chain sequences.
	lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith; // Add aliases.
	lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith; // Add methods to `lodash.prototype`.
	mixin(lodash,lodash); /*------------------------------------------------------------------------*/ // Add methods that return unwrapped values in chain sequences.
	lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.deburr=deburr;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst; // Add aliases.
	lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{'chain':false}); /*------------------------------------------------------------------------*/ /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */lodash.VERSION=VERSION; // Assign default placeholders.
	arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;}); // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){var filtered=this.__filtered__;if(filtered&&!index){return new LazyWrapper(this);}n=n===undefined?1:nativeMax(toInteger(n),0);var result=this.clone();if(filtered){result.__takeCount__=nativeMin(n,result.__takeCount__);}else {result.__views__.push({'size':nativeMin(n,MAX_ARRAY_LENGTH),'type':methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};}); // Add `LazyWrapper` methods that accept an `iteratee` value.
	arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({'iteratee':getIteratee(iteratee,3),'type':type});result.__filtered__=result.__filtered__||isFilter;return result;};}); // Add `LazyWrapper` methods for `_.head` and `_.last`.
	arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};}); // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=rest(function(path,args){if(typeof path=='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){predicate=getIteratee(predicate,3);return this.filter(function(value){return !predicate(value);});};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);}; // Add `LazyWrapper` methods to `lodash.prototype`.
	baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function interceptor(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee=='function'&&iteratee.length!=1){ // Avoid lazy use if the iteratee has a "length" value other than `1`.
	isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};}); // Add `Array` methods to `lodash.prototype`.
	arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};}); // Map minified method names to their real names.
	baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'',names=realNames[key]||(realNames[key]=[]);names.push({'name':methodName,'func':lodashFunc});}});realNames[createHybridWrapper(undefined,BIND_KEY_FLAG).name]=[{'name':'wrapper','func':undefined}]; // Add methods to `LazyWrapper`.
	LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue; // Add chain sequence methods to the `lodash` wrapper.
	lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;if(iteratorSymbol){lodash.prototype[iteratorSymbol]=wrapperToIterator;}return lodash;} /*--------------------------------------------------------------------------*/ // Export lodash.
	var _=runInContext(); // Expose Lodash on the free variable `window` or `self` when available so it's
	// globally accessible, even when bundled with Browserify, Webpack, etc. This
	// also prevents errors in cases where Lodash is loaded by a script tag in the
	// presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch
	// for more details. Use `_.noConflict` to remove Lodash from the global object.
	(freeWindow||freeSelf||{})._=_; // Some AMD build optimizers like r.js check for condition patterns like the following:
	if("function"=='function'&&_typeof(__webpack_require__(/*! !webpack amd options */ 4))=='object'&&__webpack_require__(/*! !webpack amd options */ 4)){ // Define as an anonymous module so, through path mapping, it can be
	// referenced as the "underscore" module.
	!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){return _;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
	else if(freeExports&&freeModule){ // Export for Node.js.
	if(moduleExports){(freeModule.exports=_)._=_;} // Export for CommonJS support.
	freeExports._=_;}else { // Export to the global object.
	root._=_;}}).call(undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ 3)(module), (function() { return this; }())))

/***/ },
/* 3 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/***/ function(module, exports) {

	"use strict";
	
	module.exports = function (module) {
		if (!module.webpackPolyfill) {
			module.deprecate = function () {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	};

/***/ },
/* 4 */
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;
	
	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 5 */
/*!********************************************!*\
  !*** ./~/browser-data/db/wikipediaDb.json ***!
  \********************************************/
/***/ function(module, exports) {

	module.exports = {
		"all": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "27.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"display": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.9",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"display-inside": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"display-outside": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"display-list": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"box-suppress": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"margin": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"margin-top": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"margin-right": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"margin-bottom": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"margin-left": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"padding": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"padding-top": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"padding-right": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"padding-bottom": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"padding-left": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"width": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.0",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"height": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.0",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"float": {
			"Trident": "5.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"clear": {
			"Trident": "5.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"min-width": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "Partial",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"max-width": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "Partial",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"min-height": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.7",
			"WebKit": "Partial",
			"KHTML": "3.3.2",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"max-height": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.7",
			"WebKit": "Partial",
			"KHTML": "3.3.2",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"visibility": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "Partial",
			"KHTML": "Partial",
			"Presto": "2.5",
			"Prince": "Partial",
			"Martha": "Yes"
		},
		"overflow": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "3.2",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"overflow-x": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "525",
			"KHTML": "3.5.6",
			"Presto": "2.1",
			"Prince": "5.0",
			"Martha": "No"
		},
		"overflow-y": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "525",
			"KHTML": "3.5.6",
			"Presto": "2.1",
			"Prince": "5.0",
			"Martha": "No"
		},
		"max-lines": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-color": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-style": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-width": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-top": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-top-width": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-top-style": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-top-color": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-right": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-right-width": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-right-style": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-right-color": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-bottom": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-bottom-width": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-bottom-style": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-bottom-color": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-left": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-left-width": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-left-style": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-left-color": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.0",
			"Martha": "Yes"
		},
		"border-radius": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "533",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"border-top-left-radius": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "533",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"border-top-right-radius": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "533",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"border-bottom-left-radius": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "533",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"border-bottom-right-radius": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "533",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"border-image": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "15.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.5",
			"Prince": "No",
			"Martha": "No"
		},
		"border-image-source": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "15.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-image-slice": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "15.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-image-width": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "15.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-image-outset": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "15.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-image-repeat": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "15.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"box-shadow": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0\n[g 19]",
			"WebKit": "Yes",
			"KHTML": "No",
			"Presto": "2.5",
			"Prince": "No",
			"Martha": "No"
		},
		"box-decoration-break": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "32.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.7",
			"Prince": "Incorrect",
			"Martha": "No"
		},
		"line-height": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"vertical-align": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"position": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"top": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"right": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"bottom": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"left": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"z-index": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.9",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"align-content": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "28.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"align-items": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "20.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"align-self": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "20.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"justify-content": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "20.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"justify-items": {
			"Trident": "No",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"justify-self": {
			"Trident": "No",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"quotes": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "Yes",
			"WebKit": "412",
			"KHTML": "3.4",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"content": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9",
			"WebKit": "Partial",
			"KHTML": "Yes",
			"Presto": "2.7",
			"Prince": "Partial",
			"Martha": "Partial"
		},
		"counter-increment": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "525",
			"KHTML": "3.4",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"counter-reset": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "525",
			"KHTML": "3.4",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"list-style": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"list-style-image": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"list-style-position": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"list-style-type": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "3.4",
			"Presto": "1.0",
			"Prince": "Partial",
			"Martha": "Yes"
		},
		"color": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.5",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"opacity": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.7",
			"WebKit": "125",
			"KHTML": "4.0",
			"Presto": "2.0",
			"Prince": "6.0",
			"Martha": "No"
		},
		"background": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"background-attachment": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"background-color": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.1",
			"Martha": "Yes"
		},
		"background-image": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"background-position": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.1",
			"Martha": "Yes"
		},
		"background-repeat": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.1",
			"Martha": "Yes"
		},
		"background-repeat-x": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.1",
			"Martha": "Yes"
		},
		"background-repeat-y": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.1",
			"Martha": "Yes"
		},
		"background (multiple)": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.2",
			"WebKit": "312",
			"KHTML": "3.5",
			"Presto": "2.5",
			"Prince": "9.0",
			"Martha": "No"
		},
		"background-clip": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "Yes",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "9.0",
			"Martha": "Yes"
		},
		"background-origin": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "Yes",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "9.0",
			"Martha": "Yes"
		},
		"background-size": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "2.0",
			"WebKit": "Yes",
			"KHTML": "Experimental",
			"Presto": "2.5",
			"Prince": "9.0",
			"Martha": "Yes"
		},
		"background-position-x": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"background-position-y": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "Incorrect",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"font-family": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"font-size": {
			"Trident": "3.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.1",
			"Martha": "Yes"
		},
		"font-style": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"font-variant": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"font-weight": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "Partial",
			"WebKit": "Partial",
			"KHTML": "Yes",
			"Presto": "Incorrect",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"font-size-adjust": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "1.9",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-stretch": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "9.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "6.0",
			"Martha": "No"
		},
		"font-feature-settings": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-kerning": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-language-override": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-synthesis": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-variant-alternates": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-variant-caps": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-variant-east-asian": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-variant-ligatures": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-variant-numeric": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"font-variant-position": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0 [g 23]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"unicode-range": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "38.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "Yes",
			"Martha": "No"
		},
		"text-align": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"text-decoration": {
			"Trident": "Yes",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "3.1",
			"Martha": "Partial"
		},
		"text-indent": {
			"Trident": "3.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"text-transform": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"letter-spacing": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"word-spacing": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "No"
		},
		"white-space": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "522",
			"KHTML": "Yes",
			"Presto": "2.1",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"word-break": {
			"Trident": "Partial",
			"EdgeHTML": "Partial",
			"Gecko": "15.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "10.0",
			"Martha": "No"
		},
		"line-break": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"hyphens": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "6.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"word-wrap": {
			"Trident": "5.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "85",
			"KHTML": "4.3",
			"Presto": "2.5",
			"Prince": "10.0",
			"Martha": "Yes"
		},
		"overflow-wrap": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "10.0",
			"Martha": "Yes"
		},
		"text-align-last": {
			"Trident": "Partial",
			"EdgeHTML": "Partial",
			"Gecko": "12.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "Partial",
			"Martha": "Experimental"
		},
		"text-justify": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "6.0",
			"Martha": "No"
		},
		"text-emphasis": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"hanging-punctuation": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"hyphenate-character": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "Yes"
		},
		"hyphenate-limit-zone": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"hyphenate-limit-chars": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"hyphenate-limit-lines": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"hyphenate-limit-last": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-space-collapse": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-spacing": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-wrap": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-shadow": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "Yes",
			"KHTML": "3.4",
			"Presto": "2.1",
			"Prince": "No",
			"Martha": "No"
		},
		"text-decoration-style": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0[g 31]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-decoration-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0[g 31]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-decoration-line": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0[g 31]",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-decoration-skip": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-underline-position": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-emphasis-style": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-emphasis-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-emphasis-position": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"direction": {
			"Trident": "5.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "7.0",
			"Martha": "Yes"
		},
		"unicode-bidi": {
			"Trident": "5.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "525",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "7.0",
			"Martha": "Yes"
		},
		"writing-mode": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Nightly Build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "9.0",
			"Martha": "No"
		},
		"text-combine-horizontal": {
			"Trident": "11.0",
			"EdgeHTML": "12.0",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"text-orientation": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-collapse": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.1",
			"Martha": "Yes"
		},
		"border-spacing": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"caption-side": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.4",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"empty-cells": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"table-layout": {
			"Trident": "5.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"cursor": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "Partial",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"outline": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "Yes"
		},
		"outline-color": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "Yes"
		},
		"outline-style": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "Yes"
		},
		"outline-width": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.8",
			"WebKit": "125",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "Yes"
		},
		"outline-offset": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "1.8",
			"WebKit": "125",
			"KHTML": "3.5",
			"Presto": "2.1",
			"Prince": "No",
			"Martha": "No"
		},
		"box-sizing": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "29.0",
			"WebKit": "Yes",
			"KHTML": "3.3.2",
			"Presto": "1.0",
			"Prince": "7.0",
			"Martha": "No"
		},
		"resize": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "2.0",
			"WebKit": "525",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"appearance": {
			"Trident": "No",
			"EdgeHTML": "12",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"icon": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"nav-index": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.1",
			"Prince": "No",
			"Martha": "No"
		},
		"nav-up": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.1",
			"Prince": "No",
			"Martha": "No"
		},
		"nav-right": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.1",
			"Prince": "No",
			"Martha": "No"
		},
		"nav-down": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.1",
			"Prince": "No",
			"Martha": "No"
		},
		"nav-left": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.1",
			"Prince": "No",
			"Martha": "No"
		},
		"text-overflow": {
			"Trident": "Partial",
			"EdgeHTML": "Partial",
			"Gecko": "7.0",
			"WebKit": "Partial",
			"KHTML": "3.5.6",
			"Presto": "Experimental (Nightly)",
			"Prince": "9.0",
			"Martha": "No"
		},
		"page-break-before": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "Partial",
			"WebKit": "Partial",
			"KHTML": "3.5",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"page-break-after": {
			"Trident": "4.0",
			"EdgeHTML": "12",
			"Gecko": "Partial",
			"WebKit": "Partial",
			"KHTML": "3.5",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"page-break-inside": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "19.0",
			"WebKit": "312",
			"KHTML": "3.5",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"orphans": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "312",
			"KHTML": "3.5",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"widows": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "312",
			"KHTML": "3.5",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"page": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"image-orientation": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "26.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"object-fit": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.7",
			"Prince": "No",
			"Martha": "No"
		},
		"object-position": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.7",
			"Prince": "No",
			"Martha": "No"
		},
		"cue": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"cue-after": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"cue-before": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"pause": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"pause-after": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"pause-before": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"speak": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-family": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-balance": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-duration": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-pitch": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-pitch-range": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-rate": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-stress": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"voice-volume": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"interpret-as": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"phonemes": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"rest": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"rest-after": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"rest-before": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mark": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mark-after": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mark-before": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"device-width": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.0",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"device-height": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.0",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"device-aspect-ratio": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.0",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"color-index": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.5",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"monochrome": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.1",
			"Presto": "2.5",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"resolution": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "No",
			"KHTML": "4.1",
			"Presto": "2.5",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"orientation": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "No",
			"KHTML": "4.2.1",
			"Presto": "No",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"aspect-ratio": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "No",
			"KHTML": "4.2.1",
			"Presto": "2.1",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"grid": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"scan": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "Yes",
			"WebKit": "No",
			"KHTML": "4.1",
			"Presto": "2.5",
			"Prince": "Nightly build",
			"Martha": "No"
		},
		"ruby-position": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "38.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"ruby-align": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "38.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"ruby-merge": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"column-count": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.8",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"column-width": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.8",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"column-gap": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.8",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"column-rule": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.8",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"columns": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "9.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.8",
			"Prince": "Yes",
			"Martha": "Yes"
		},
		"break-before": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "Yes"
		},
		"break-after": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "Yes"
		},
		"break-inside": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "Yes"
		},
		"column-fill": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "14.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.8",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"column-span": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.8",
			"Prince": "8.0",
			"Martha": "Yes"
		},
		"grid-template": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-template-columns": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-template-rows": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-template-areas": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-auto-columns": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-auto-rows": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-auto-flow": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-auto-position": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-columns": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-columns-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-columns-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-row": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-row-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-row-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"grid-area": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Experimental",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"animation": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-delay": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-direction": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-duration": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-iteration-count": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-name": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-play-state": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-timing-function": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"animation-fill-mode": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"transform": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "Yes"
		},
		"transform-origin": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "Yes"
		},
		"transform-style": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"perspective": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"perspective-origin": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"backface-visibility": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"transition-property": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"transition-duration": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"transition-timing-function": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"transition-delay": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"transition": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "Experimental",
			"Prince": "No",
			"Martha": "No"
		},
		"flex": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "22.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"flex-basis": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "22.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"flex-direction": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "22.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"flex-flow": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "28.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"flex-grow": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "22.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"flex-shrink": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "22.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"flex-wrap": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "28.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"order": {
			"Trident": "11.0",
			"EdgeHTML": "12",
			"Gecko": "22.0",
			"WebKit": "29.0",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"flow-into": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "Experimental"
		},
		"flow-from": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "Experimental"
		},
		"region-fragment": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"wrap-flow": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"wrap-through": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"shape-margin": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Nightly build",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"shape-outside": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"shape-image-threshold": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"clip": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"clip-path": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "1.9.1",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"clip-rule": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "Partial",
			"WebKit": "Partial",
			"KHTML": "Partial",
			"Presto": "Partial",
			"Prince": "Partial",
			"Martha": "No"
		},
		"mask-box-image": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-box-image-outset": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-box-image-repeat": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-box-image-slice": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-box-image-source": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-box-image-width": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-clip": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-image": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-origin": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-position": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-repeat": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mask-type": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "20.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"mix-blend-mode": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "32.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"isolation": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"background-blend-mode": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "30.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"filter": {
			"Trident": "No",
			"EdgeHTML": "13",
			"Gecko": "35.0",
			"WebKit": "18.0",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"flood-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"flood-opacity": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"color-interpolation-filters": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"lighting-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"pointer-events": {
			"Trident": "11.0",
			"EdgeHTML": "12.0",
			"Gecko": "1.9.2",
			"WebKit": "530",
			"KHTML": "No",
			"Presto": "2.0",
			"Prince": "No",
			"Martha": "No"
		},
		"touch-action": {
			"Trident": "11.0",
			"EdgeHTML": "12.0",
			"Gecko": "29.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"box-snap": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"line-grid": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"line-slack": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"line-snap": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"block-size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"inline-size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"min-block-size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"min-inline-size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"max-block-size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"max-inline-size": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"margin-block-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"margin-block-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"margin-inline-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"margin-inline-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"offset-block-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"offset-block-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"offset-inline-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"offset-inline-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"padding-block-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"padding-block-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"padding-inline-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"padding-inline-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-start-width": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-end-width": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-start-width": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-end-width": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-start-style": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-end-style": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-start-style": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-end-style": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-start-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-end-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-start-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-end-color": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-block-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-start": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-inline-end": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "41.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"background-image-transform": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"border-image-transform": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"will-change": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"scroll-behavior": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "36.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"scroll-snap-type": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "39.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"scroll-snap-points-x": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "39.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"scroll-snap-points-y": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "39.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"scroll-snap-destination": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "39.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"scroll-snap-coordinate": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "39.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"!important": {
			"Trident": "7.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "?"
		},
		"/*Comment*/": {
			"Trident": "3.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "85",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "?"
		},
		"@import": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "Yes",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "2.1",
			"Martha": "Yes"
		},
		"@charset": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "Yes",
			"KHTML": "4.2.3",
			"Presto": "1.0",
			"Prince": "Yes",
			"Martha": "Incorrect"
		},
		"@media": {
			"Trident": "5.5",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "Yes",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.1",
			"Martha": "Yes"
		},
		"@namespace": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.0",
			"WebKit": "Yes",
			"KHTML": "Yes",
			"Presto": "1.0",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@document": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "6.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@keyframes": {
			"Trident": "10.0",
			"EdgeHTML": "12",
			"Gecko": "16.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"@supports": {
			"Trident": "No",
			"EdgeHTML": "12",
			"Gecko": "22.0",
			"WebKit": "28.0",
			"KHTML": "No",
			"Presto": "2.12",
			"Prince": "No",
			"Martha": "No"
		},
		"@counter-style": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "33.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@viewport": {
			"Trident": "10.0",
			"EdgeHTML": "12.0",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "2.7.62",
			"Prince": "No",
			"Martha": "No"
		},
		"@filter": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "35.0",
			"WebKit": "Experimental",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@page": {
			"Trident": "8.0",
			"EdgeHTML": "12",
			"Gecko": "19.0",
			"WebKit": "Nightly Build",
			"KHTML": "No",
			"Presto": "1.0",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"@top-left-corner": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@top-left": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@top-center": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@top-right": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@top-right-corner": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@bottom-left-corner": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@bottom-left": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@bottom-center": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@bottom-right": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@bottom-right-corner": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@left-top": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@left-middle": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@left-bottom": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@right-top": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@right-middle": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@right-bottom": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "No",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "5.0",
			"Martha": "Yes"
		},
		"@font-face": {
			"Trident": "9.0",
			"EdgeHTML": "12",
			"Gecko": "1.9.1",
			"WebKit": "525",
			"KHTML": "4.3",
			"Presto": "2.2",
			"Prince": "6.0",
			"Martha": "Yes"
		},
		"@font-feature-values": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@annotation": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@styleset": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@swash": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@ornaments": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@stylistic": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		},
		"@character-variant": {
			"Trident": "No",
			"EdgeHTML": "No",
			"Gecko": "34.0",
			"WebKit": "No",
			"KHTML": "No",
			"Presto": "No",
			"Prince": "No",
			"Martha": "No"
		}
	};

/***/ },
/* 6 */
/*!*******************************************!*\
  !*** ./~/browser-data/db/browsersDb.json ***!
  \*******************************************/
/***/ function(module, exports) {

	module.exports = {
		"Firefox": {
			"2": {
				"name": "Gecko",
				"version": "1.8.1"
			},
			"3": {
				"name": "Gecko",
				"version": "1.9"
			},
			"4": {
				"name": "Gecko",
				"version": "2"
			},
			"5": {
				"name": "Gecko",
				"version": "5"
			},
			"6": {
				"name": "Gecko",
				"version": "6"
			},
			"7": {
				"name": "Gecko",
				"version": "7"
			},
			"8": {
				"name": "Gecko",
				"version": "8"
			},
			"9": {
				"name": "Gecko",
				"version": "9"
			},
			"10": {
				"name": "Gecko",
				"version": "10"
			},
			"11": {
				"name": "Gecko",
				"version": "11"
			},
			"12": {
				"name": "Gecko",
				"version": "12"
			},
			"13": {
				"name": "Gecko",
				"version": "13"
			},
			"14": {
				"name": "Gecko",
				"version": "14"
			},
			"15": {
				"name": "Gecko",
				"version": "15"
			},
			"16": {
				"name": "Gecko",
				"version": "16"
			},
			"17": {
				"name": "Gecko",
				"version": "17"
			},
			"18": {
				"name": "Gecko",
				"version": "18"
			},
			"19": {
				"name": "Gecko",
				"version": "19"
			},
			"20": {
				"name": "Gecko",
				"version": "20"
			},
			"21": {
				"name": "Gecko",
				"version": "21"
			},
			"22": {
				"name": "Gecko",
				"version": "22"
			},
			"23": {
				"name": "Gecko",
				"version": "23"
			},
			"24": {
				"name": "Gecko",
				"version": "24"
			},
			"3.6": {
				"name": "Gecko",
				"version": "1.9.2"
			},
			"3.5": {
				"name": "Gecko",
				"version": "1.9.1"
			},
			"1.5": {
				"name": "Gecko",
				"version": "1.8"
			},
			"1.0": {
				"name": "Gecko",
				"version": "1.7"
			}
		},
		"Chrome": {
			"0.2": {
				"name": "WebKit",
				"version": "525.13"
			},
			"0.3": {
				"name": "WebKit",
				"version": "525.19"
			},
			"1.0": {
				"name": "WebKit",
				"version": "525.19"
			},
			"2.0": {
				"name": "WebKit",
				"version": "528.8"
			},
			"2.0.172": {
				"name": "WebKit",
				"version": "530.5"
			},
			"3.0": {
				"name": "WebKit",
				"version": "531.0"
			},
			"3.0.195": {
				"name": "WebKit",
				"version": "532.0"
			},
			"4.0": {
				"name": "WebKit",
				"version": "532.0"
			},
			"4.0.213": {
				"name": "WebKit",
				"version": "532.1"
			},
			"4.1": {
				"name": "WebKit",
				"version": "532.5"
			},
			"5.0": {
				"name": "WebKit",
				"version": "532.9"
			},
			"5.0.342": {
				"name": "WebKit",
				"version": "533.22"
			},
			"6.0": {
				"name": "WebKit",
				"version": "533.8"
			},
			"7.0": {
				"name": "WebKit",
				"version": "534.6"
			},
			"8.0": {
				"name": "WebKit",
				"version": "534.10"
			},
			"9.0": {
				"name": "WebKit",
				"version": "534.12"
			},
			"10.0": {
				"name": "WebKit",
				"version": "534.14"
			},
			"11.0": {
				"name": "WebKit",
				"version": "534.17"
			},
			"12.0": {
				"name": "WebKit",
				"version": "534.24"
			},
			"13.0": {
				"name": "WebKit",
				"version": "534.31"
			},
			"14.0": {
				"name": "WebKit",
				"version": "535.1"
			},
			"15.0": {
				"name": "WebKit",
				"version": "535.2"
			},
			"16.0": {
				"name": "WebKit",
				"version": "535.7"
			},
			"17.0": {
				"name": "WebKit",
				"version": "535.11"
			},
			"18.0": {
				"name": "WebKit",
				"version": "535.19"
			},
			"19.0": {
				"name": "WebKit",
				"version": "535.21"
			},
			"20.0": {
				"name": "WebKit",
				"version": "536.6"
			},
			"22.0": {
				"name": "WebKit",
				"version": "537.1"
			},
			"23.0": {
				"name": "WebKit",
				"version": "537.11"
			},
			"24.0": {
				"name": "WebKit",
				"version": "537.13"
			},
			"27.0": {
				"name": "WebKit",
				"version": "537.36"
			},
			"28.0": {
				"name": "WebKit",
				"version": "537.36"
			},
			"29.0": {
				"name": "WebKit",
				"version": "537.36"
			},
			"30.0": {
				"name": "WebKit",
				"version": "537.36"
			},
			"40.0": {
				"name": "WebKit",
				"version": "537.36"
			},
			"49.0": {
				"name": "WebKit",
				"version": "537.36"
			}
		},
		"Safari": {
			"1.0": {
				"name": "WebKit",
				"version": "85"
			},
			"1.0.3": {
				"name": "WebKit",
				"version": "85.8.5"
			},
			"1.1": {
				"name": "WebKit",
				"version": "100"
			},
			"1.2": {
				"name": "WebKit",
				"version": "125"
			},
			"1.3": {
				"name": "WebKit",
				"version": "312"
			},
			"1.3.1": {
				"name": "WebKit",
				"version": "312.3"
			},
			"1.3.2": {
				"name": "WebKit",
				"version": "312.6"
			},
			"2.0": {
				"name": "WebKit",
				"version": "412"
			},
			"2.0.2": {
				"name": "WebKit",
				"version": "416.11"
			},
			"2.0.4": {
				"name": "WebKit",
				"version": "419.3"
			},
			"3.0": {
				"name": "WebKit",
				"version": "522.11"
			},
			"3.0.2": {
				"name": "WebKit",
				"version": "522.12"
			},
			"3.0.3": {
				"name": "WebKit",
				"version": "522.12.1"
			},
			"3.0.4": {
				"name": "WebKit",
				"version": "523.10"
			},
			"3.1": {
				"name": "WebKit",
				"version": "525.13"
			},
			"3.1.1": {
				"name": "WebKit",
				"version": "525.17"
			},
			"3.1.2": {
				"name": "WebKit",
				"version": "525.21"
			},
			"3.2": {
				"name": "WebKit",
				"version": "525.26"
			},
			"3.2.1": {
				"name": "WebKit",
				"version": "525.27"
			},
			"3.2.3": {
				"name": "WebKit",
				"version": "525.28"
			},
			"4.0": {
				"name": "WebKit",
				"version": "530.17"
			},
			"4.0.1": {
				"name": "WebKit",
				"version": "530.18"
			},
			"4.0.2": {
				"name": "WebKit",
				"version": "530.19"
			},
			"4.0.3": {
				"name": "WebKit",
				"version": "531.9"
			},
			"4.0.4": {
				"name": "WebKit",
				"version": "531.21.10"
			},
			"4.0.5": {
				"name": "WebKit",
				"version": "531.22.7"
			},
			"4.1": {
				"name": "WebKit",
				"version": "533.16"
			},
			"4.1.1": {
				"name": "WebKit",
				"version": "533.17.8"
			},
			"4.1.2": {
				"name": "WebKit",
				"version": "533.18.5"
			},
			"4.1.3": {
				"name": "WebKit",
				"version": "533.19.4"
			},
			"5.0": {
				"name": "WebKit",
				"version": "533.16"
			},
			"5.0.1": {
				"name": "WebKit",
				"version": "533.17.8"
			},
			"5.0.2": {
				"name": "WebKit",
				"version": "533.18.5"
			},
			"5.0.3": {
				"name": "WebKit",
				"version": "533.19.4"
			},
			"5.0.4": {
				"name": "WebKit",
				"version": "533.20.27"
			},
			"5.0.5": {
				"name": "WebKit",
				"version": "533.21.1"
			},
			"5.0.6": {
				"name": "WebKit",
				"version": "533.22.3"
			},
			"5.1": {
				"name": "WebKit",
				"version": "534.48.3"
			},
			"5.1.1": {
				"name": "WebKit",
				"version": "534.51.22"
			},
			"5.1.2": {
				"name": "WebKit",
				"version": "534.52.7"
			},
			"5.1.3": {
				"name": "WebKit",
				"version": "534.53.10"
			},
			"5.1.4": {
				"name": "WebKit",
				"version": "534.54.16"
			},
			"5.1.5": {
				"name": "WebKit",
				"version": "534.55.3"
			},
			"5.1.6": {
				"name": "WebKit",
				"version": "534.56.5"
			},
			"5.1.7": {
				"name": "WebKit",
				"version": "534.57.2"
			},
			"5.1.8": {
				"name": "WebKit",
				"version": "534.58.2"
			},
			"5.1.9": {
				"name": "WebKit",
				"version": "534.59.8"
			},
			"5.1.10": {
				"name": "WebKit",
				"version": "534.59.10"
			},
			"6.0": {
				"name": "WebKit",
				"version": "536.25"
			},
			"6.0.1": {
				"name": "WebKit",
				"version": "536.26"
			},
			"6.0.2": {
				"name": "WebKit",
				"version": "536.26.17"
			},
			"6.0.3": {
				"name": "WebKit",
				"version": "536.28.10"
			},
			"6.0.4": {
				"name": "WebKit",
				"version": "536.29.13"
			},
			"6.0.5": {
				"name": "WebKit",
				"version": "536.30.1"
			},
			"6.1": {
				"name": "WebKit",
				"version": "537.43.58"
			},
			"6.1.1": {
				"name": "WebKit",
				"version": "537.73.11"
			},
			"6.1.6": {
				"name": "WebKit",
				"version": "537.78.2"
			},
			"6.2.8": {
				"name": "WebKit",
				"version": "537.85.17"
			},
			"7.0": {
				"name": "WebKit",
				"version": "537.71"
			},
			"7.0.1": {
				"name": "WebKit",
				"version": "537.73.11"
			},
			"7.0.3": {
				"name": "WebKit",
				"version": "537.75.14"
			},
			"7.0.4": {
				"name": "WebKit",
				"version": "537.76.4"
			},
			"7.0.5": {
				"name": "WebKit",
				"version": "537.77.4"
			},
			"7.0.6": {
				"name": "WebKit",
				"version": "537.78.2"
			},
			"7.1.8": {
				"name": "WebKit",
				"version": "537.85.17"
			},
			"8.0": {
				"name": "WebKit",
				"version": "538.35.8"
			},
			"8.0.6": {
				"name": "WebKit",
				"version": "600.6.3"
			},
			"8.0.7": {
				"name": "WebKit",
				"version": "600.7.12"
			},
			"9.0.1": {
				"name": "WebKit",
				"version": "601.2.7"
			},
			"9.0.2": {
				"name": "WebKit",
				"version": "601.3.9"
			},
			"9.0.3": {
				"name": "WebKit",
				"version": "601.4.4"
			},
			"9.1": {
				"name": "WebKit",
				"version": "601.5.17"
			}
		},
		"Android": {
			"1.5": {
				"name": "WebKit",
				"version": "528.5",
				"api": "3"
			},
			"1.6": {
				"name": "WebKit",
				"version": "528.5",
				"api": "4"
			},
			"2.0": {
				"name": "WebKit",
				"version": "530.17",
				"api": "5"
			},
			"2.0.1": {
				"name": "WebKit",
				"version": "530.17",
				"api": "6"
			},
			"2.1": {
				"name": "WebKit",
				"version": "530.17",
				"api": "7"
			},
			"2.2": {
				"name": "WebKit",
				"version": "533.1",
				"api": "8"
			},
			"2.3": {
				"name": "WebKit",
				"version": "533.1",
				"api": "9"
			},
			"2.3.3": {
				"name": "WebKit",
				"version": "533.1",
				"api": "10"
			},
			"3.0": {
				"name": "WebKit",
				"version": "534.13",
				"api": "11"
			},
			"3.1": {
				"name": "WebKit",
				"version": "534.13",
				"api": "12"
			},
			"3.2": {
				"name": "WebKit",
				"version": "534.13",
				"api": "13"
			},
			"4.0": {
				"name": "WebKit",
				"version": "534.30",
				"api": "14"
			},
			"4.0.3": {
				"name": "WebKit",
				"version": "534.30",
				"api": "15"
			},
			"4.1": {
				"name": "WebKit",
				"version": "534.30",
				"api": "16"
			},
			"4.2": {
				"name": "WebKit",
				"version": "534.30",
				"api": "17"
			},
			"4.3": {
				"name": "WebKit",
				"version": "534.30",
				"api": "18"
			},
			"4.4": {
				"name": "WebKit",
				"version": "537.36",
				"api": "19"
			},
			"5.0": {
				"name": "WebKit",
				"version": "537.36"
			}
		},
		"Opera": {
			"15": {
				"name": "WebKit",
				"version": "537.36"
			},
			"12.15": {
				"name": "Presto",
				"version": "2.12"
			},
			"12.10": {
				"name": "Presto",
				"version": "2.12"
			},
			"12.00": {
				"name": "Presto",
				"version": "2.10"
			},
			"11.60": {
				"name": "Presto",
				"version": "2.10"
			},
			"11.50": {
				"name": "Presto",
				"version": "2.9"
			},
			"11.10": {
				"name": "Presto",
				"version": "2.8"
			},
			"11.00": {
				"name": "Presto",
				"version": "2.7"
			},
			"10.60": {
				"name": "Presto",
				"version": "2.6"
			},
			"10.50": {
				"name": "Presto",
				"version": "2.5"
			},
			"10.00": {
				"name": "Presto",
				"version": "2.2"
			},
			"9.60": {
				"name": "Presto",
				"version": "2.1.1"
			},
			"9.50": {
				"name": "Presto",
				"version": "2.1"
			},
			"9.00": {
				"name": "Presto",
				"version": "2.0"
			},
			"8.00": {
				"name": "Presto",
				"version": "1.0"
			},
			"7.00": {
				"name": "Presto",
				"version": "1.0"
			},
			"6.00": {
				"name": "Elektra",
				"version": "0"
			},
			"3.50": {
				"name": "Elektra",
				"version": "0"
			}
		},
		"IEMobile": {
			"6": {
				"name": "MSHTML",
				"version": "6.0"
			},
			"7": {
				"name": "Trident",
				"version": "3.1"
			},
			"9": {
				"name": "Trident",
				"version": "5.0"
			},
			"10": {
				"name": "Trident",
				"version": "6.0"
			},
			"11": {
				"name": "Trident",
				"version": "7.0"
			}
		},
		"IE": {
			"4": {
				"name": "MSHTML",
				"version": "4"
			},
			"5": {
				"name": "MSHTML",
				"version": "5"
			},
			"6": {
				"name": "MSHTML",
				"version": "6.0"
			},
			"7": {
				"name": "MSHTML",
				"version": "7.0"
			},
			"8": {
				"name": "Trident",
				"version": "4.0"
			},
			"9": {
				"name": "Trident",
				"version": "5.0"
			},
			"10": {
				"name": "Trident",
				"version": "6.0"
			},
			"11": {
				"name": "Trident",
				"version": "7.0"
			},
			"5.5": {
				"name": "MSHTML",
				"version": "5.5"
			}
		}
	};

/***/ },
/* 7 */
/*!**************************************!*\
  !*** ./~/browser-data/db/mdnDb.json ***!
  \**************************************/
/***/ function(module, exports) {

	module.exports = {
		":active": {
			"n": ":active",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"Support on non-<a> elements": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"additive-symbols": {
			"n": "additive-symbols",
			"t": [
				"@counter-style",
				"CSS Counter Styles",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		":after": {
			"n": ":after",
			"t": [
				"CSS Pseudo-element",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"::after": {
			"n": "::after",
			"t": [
				"CSS Pseudo-element",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"align-content": {
			"n": "align-content",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"align-items": {
			"n": "align-items",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "20.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "20.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					]
				}
			}
		},
		"align-self": {
			"n": "align-self",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "20.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"all": {
			"n": "all",
			"t": [
				"CSS Cascade",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "37"
						}
					],
					"f": [
						{
							"p": "",
							"v": "27"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "24"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "27.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"revert": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9.3"
						}
					]
				}
			}
		},
		"<angle>": {
			"n": "<angle>",
			"t": [
				"CSS Data Type",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"turn unit": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-bottom-right-radius": {
			"n": "border-bottom-right-radius",
			"t": [
				"CSS Borders",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Percentages": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Elliptical corners": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-bottom-left-radius": {
			"n": "border-bottom-left-radius",
			"t": [
				"CSS Borders",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Percentages": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Elliptical corners": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-bottom-color": {
			"n": "border-bottom-color",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.5"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"border-bottom": {
			"n": "border-bottom",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-block-start-width": {
			"n": "border-block-start-width",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-block-start-style": {
			"n": "border-block-start-style",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-block-start-color": {
			"n": "border-block-start-color",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-block-start": {
			"n": "border-block-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-block-end-width": {
			"n": "border-block-end-width",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-block-end-style": {
			"n": "border-block-end-style",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-block-end-color": {
			"n": "border-block-end-color",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-block-end": {
			"n": "border-block-end",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border": {
			"n": "border",
			"t": [
				"CSS Borders",
				"CSS Property",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"block-size": {
			"n": "block-size",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"filter": {
			"n": "filter",
			"t": [
				"CSS Property",
				"SVG",
				"SVG Filter"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "18.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "35"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.4"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "35"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "22.0"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "6.0"
						}
					]
				},
				"On SVG Elements": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "35"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "35"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"<blend-mode>": {
			"n": "<blend-mode>",
			"t": [
				"Blend modes",
				"Compositing",
				"CSS Compositing",
				"CSS Data Type",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "35"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":before": {
			"n": ":before",
			"t": [
				"CSS Pseudo-element",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"::before": {
			"n": "::before",
			"t": [
				"CSS Pseudo-element",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.1"
						}
					]
				}
			}
		},
		"<basic-shape>": {
			"n": "<basic-shape>",
			"t": [
				"CSS Data Type",
				"CSS Shapes",
				"NeedsExample",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"\\xx": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"background-size": {
			"n": "background-size",
			"t": [
				"CSS Background",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "3.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.6"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						},
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "9.5"
						},
						{
							"p": "",
							"v": "-"
						},
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "-"
						},
						{
							"p": "",
							"v": "4.1"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "2.3"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.1"
						}
					]
				},
				"Support for\n    contain and cover": {
					"c": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.1"
						},
						{
							"p": "",
							"v": "4.1"
						},
						{
							"p": "",
							"v": "4.1"
						}
					]
				},
				"Support for SVG backgrounds": {
					"c": [
						{
							"p": "",
							"v": "44.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						},
						{
							"p": "",
							"v": "?"
						},
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"background-repeat": {
			"n": "background-repeat",
			"t": [
				"CSS Background",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Multiple backgrounds": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Different values for X & Y directions (two-value syntax)": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"round and space keywords": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"background-position": {
			"n": "background-position",
			"t": [
				"CSS Background",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Multiple backgrounds": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Four-value syntax (support for offsets from any edge)": {
					"c": [
						{
							"p": "",
							"v": "25"
						}
					],
					"f": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					]
				}
			}
		},
		"background-origin": {
			"n": "background-origin",
			"t": [
				"CSS Background",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"content-box": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"background-image": {
			"n": "background-image",
			"t": [
				"CSS Background",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Multiple backgrounds": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Gradients": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"SVG images": {
					"c": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"element": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-moz",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"image-rect": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-moz",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Any <image> value.": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"background-color": {
			"n": "background-color",
			"t": [
				"CSS Background",
				"CSS Property",
				"Graphics",
				"Layout"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"background-clip": {
			"n": "background-clip",
			"t": [
				"CSS Background",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.1"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"content-box": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.1"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"text ": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"background-blend-mode": {
			"n": "background-blend-mode",
			"t": [
				"CSS Compositing",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "35"
						}
					],
					"f": [
						{
							"p": "",
							"v": "30.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "22"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "30.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "22"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "8"
						}
					]
				}
			}
		},
		"background-attachment": {
			"n": "background-attachment",
			"t": [
				"CSS Background",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				},
				"Multiple backgrounds": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				},
				"local": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "25"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "25.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"background": {
			"n": "background",
			"t": [
				"CSS Background",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				},
				"Multiple backgrounds": {
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				},
				"SVG image as background": {
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "4.2"
						}
					]
				},
				"Support for background-size": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "4.0"
						}
					]
				},
				"Support for background-origin and background-clip": {
					"f": [
						{
							"p": "",
							"v": "22.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "22.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "4.0"
						}
					]
				}
			}
		},
		"backface-visibility": {
			"n": "backface-visibility",
			"t": [
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "12"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8.1"
						},
						{
							"p": "-webkit",
							"v": "11"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				}
			}
		},
		"attr": {
			"n": "attr",
			"t": [
				"CSS Function",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				},
				"Usage in other properties than content and with non-string values   ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"::backdrop": {
			"n": "::backdrop",
			"t": [
				"CSS Pseudo-element",
				"Full-screen",
				"Layout",
				"NeedsContent",
				"Pseudo-element"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "webkit",
							"v": "32.0"
						},
						{
							"p": "",
							"v": "37.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "47"
						}
					],
					"ie": [
						{
							"p": "ms",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "47.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"on <dialog>": {
					"c": [
						{
							"p": "webkit",
							"v": "32.0"
						},
						{
							"p": "",
							"v": "37.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"on fullscreen": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "47"
						}
					],
					"ie": [
						{
							"p": "ms",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "47.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"font-variant-alternates": {
			"n": "font-variant-alternates",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"animation-timing-function": {
			"n": "animation-timing-function",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "12"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"animation-play-state": {
			"n": "animation-play-state",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"animation-name": {
			"n": "animation-name",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"animation-iteration-count": {
			"n": "animation-iteration-count",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "43.0"
						},
						{
							"p": "",
							"v": "-"
						}
					]
				}
			}
		},
		"@font-feature-values": {
			"n": "@font-feature-values",
			"t": [
				"At-rule",
				"Fonts"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"animation-fill-mode": {
			"n": "animation-fill-mode",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"animation-duration": {
			"n": "animation-duration",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "4.2"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "43.0"
						}
					]
				}
			}
		},
		"animation-direction": {
			"n": "animation-direction",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.50"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"reverse": {
					"c": [
						{
							"p": "",
							"v": "19"
						}
					],
					"f": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"alternate-reverse": {
					"c": [
						{
							"p": "",
							"v": "19"
						}
					],
					"f": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "43.0"
						}
					]
				}
			}
		},
		"animation-delay": {
			"n": "animation-delay",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "12"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"animation": {
			"n": "animation",
			"t": [
				"CSS Animations",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"Supported w/ prefix": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					]
				},
				"Unprefixed support": {
					"c": [
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.50"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.50"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "-"
						}
					]
				}
			}
		},
		":checked": {
			"n": ":checked",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		"clear": {
			"n": "clear",
			"t": [
				"CSS Positioning",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"inline-start, inline-end": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "45"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "45.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "2.5"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"clip": {
			"n": "clip",
			"t": [
				"CSS Property",
				"Deprecated",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"clip-path": {
			"n": "clip-path",
			"t": [
				"CSS Property",
				"Experimental",
				"Layout",
				"NeedsBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"HTML elements": {
					"c": [
						{
							"p": "-webkit",
							"v": "24"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"<length>": {
			"n": "<length>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"ch": {
					"c": [
						{
							"p": "",
							"v": "27"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "20.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.8"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.1.1"
						}
					]
				},
				"ex": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"rem": {
					"c": [
						{
							"p": "",
							"v": "4"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.6"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "4.0"
						}
					]
				},
				"vh, vw": {
					"c": [
						{
							"p": "",
							"v": "20"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "20.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6.0"
						}
					]
				},
				"vmin": {
					"c": [
						{
							"p": "",
							"v": "20"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "20.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6.0"
						}
					]
				},
				"vmax": {
					"c": [
						{
							"p": "",
							"v": "26"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "20.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "19.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "4.0"
						}
					]
				},
				"Viewport-percentage lengths invalid in @page": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "21"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"mozmm  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"1in always is 96dpi": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"color": {
			"n": "color",
			"t": [
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"<color>": {
			"n": "<color>",
			"t": [
				"CSS Data Type",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"keywords colors": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"#RRGGBB, #RGB": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"rgb()": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"hsl()": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				},
				"rgba()": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"hsla()": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				},
				"currentColor": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					]
				},
				"transparent": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				},
				"rebeccapurple": {
					"c": [
						{
							"p": "",
							"v": "38.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "25.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "8"
						}
					]
				},
				"#RRGGBBAA, #RGBA": {
					"c": [
						{
							"p": "",
							"v": "-"
						}
					],
					"f": [
						{
							"p": "",
							"v": "49"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "49.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"::first-line (:first-line)": {
			"n": "::first-line (:first-line)",
			"t": [
				"CSS Pseudo-element",
				"Layout",
				"NeedsMobileBrowserCompatibility",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Old one-colon syntax (:first-line)": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"::first-letter (:first-letter)": {
			"n": "::first-letter (:first-letter)",
			"t": [
				"CSS Pseudo-element",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Old one-colon syntax (:first-letter)": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Support for the Dutch digraph IJ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":first-child": {
			"n": ":first-child",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "7"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		":first": {
			"n": ":first",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsLiveSample",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"fallback": {
			"n": "fallback",
			"t": [
				"@counter-style",
				"CSS Counter Styles",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		":enabled": {
			"n": ":enabled",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		"empty-cells": {
			"n": "empty-cells",
			"t": [
				"CSS Property",
				"CSS Tables",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		":empty": {
			"n": ":empty",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		"element": {
			"n": "element",
			"t": [
				"CSS Function",
				"CSS4-images",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"<resolution>": {
			"n": "<resolution>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"dppx": {
					"c": [
						{
							"p": "",
							"v": "29"
						}
					],
					"f": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"display": {
			"n": "display",
			"t": [
				"CSS Positioning",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"none, inline and block": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"inline-block": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"list-item": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"inline-list-item": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"run-in  ": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						},
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						},
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						},
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "5.0"
						}
					]
				},
				"inline-table": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"table, table-cell, table-column, table-column-group, table-header-group, table-row-group, table-footer-group, table-row, and table-caption": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"flex": {
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "20.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.50"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						}
					]
				},
				"inline-flex": {
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "20.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.50"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						}
					]
				},
				"grid  ": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"inline-grid  ": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"ruby, ruby-base, ruby-text, ruby-base-container, ruby-text-container  ": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"contents  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "37"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						},
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "-webkit",
							"v": "6.1"
						}
					]
				}
			}
		},
		":disabled": {
			"n": ":disabled",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		"direction": {
			"n": "direction",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6"
						}
					],
					"om": [
						{
							"p": "",
							"v": "8"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		":dir()": {
			"n": ":dir()",
			"t": [
				"CSS Pseudo-class",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "17"
						},
						{
							"p": "",
							"v": "49"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "17.0"
						},
						{
							"p": "",
							"v": "49.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		":default": {
			"n": ":default",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				}
			}
		},
		"<custom-ident>": {
			"n": "<custom-ident>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {}
		},
		"cursor": {
			"n": "cursor",
			"t": [
				"CSS Property",
				"Cursor",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"auto, crosshair, default, move, text, wait, help,\n    n-resize, e-resize, s-resize, w-resize,\n    ne-resize, nw-resize, se-resize, sw-resize": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"pointer, progress": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"url()": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Positioning syntax for url() values  ": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"not-allowed, no-drop, vertical-text, all-scroll,\n    col-resize, row-resize": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.6"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"alias, cell, copy,\n    ew-resize, ns-resize, nesw-resize, nwse-resize": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.6"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"context-menu": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.6"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"none": {
					"c": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"inherit": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"zoom-in, zoom-out": {
					"c": [
						{
							"p": "-webkit-",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "37"
						}
					],
					"f": [
						{
							"p": "-moz-",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "24.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.6"
						},
						{
							"p": "-webkit-",
							"v": "15-23"
						},
						{
							"p": "",
							"v": "24"
						}
					],
					"s": [
						{
							"p": "-webkit-",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "9"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"grab, grabbing": {
					"c": [
						{
							"p": "-webkit-",
							"v": "1.0"
						},
						{
							"p": "-webkit-",
							"v": "22.0"
						}
					],
					"f": [
						{
							"p": "-moz-",
							"v": "1.5"
						},
						{
							"p": "",
							"v": "27.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit-",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "-webkit-",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "-moz-",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						},
						{
							"p": "-webkit-",
							"v": "15-23"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						},
						{
							"p": "-webkit-",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"<timing-function>": {
			"n": "<timing-function>",
			"t": [
				"CSS Data Type",
				"CSS Reference",
				"Layout"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "2.0"
						}
					]
				},
				"cubic-bezier() w/ ordinate ∉ [0,1]": {
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.1"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"steps()": {
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.1"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				}
			}
		},
		"@counter-style": {
			"n": "@counter-style",
			"t": [
				"At-rule",
				"counter",
				"Styles"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"counter-reset": {
			"n": "counter-reset",
			"t": [
				"CSS List",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "25.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		"counter-increment": {
			"n": "counter-increment",
			"t": [
				"CSS List",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"Using CSS counters": {
			"n": "Using CSS counters",
			"t": [
				"Advanced",
				"CSS List",
				"CSS Value",
				"Guide",
				"Layout"
			],
			"c": {}
		},
		"content": {
			"n": "content",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"url() support": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"columns": {
			"n": "columns",
			"t": [
				"CSS Multi-columns",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "9"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "22.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "11.5"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"on display: table-caption": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "37"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "37.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		"column-width": {
			"n": "column-width",
			"t": [
				"CSS Multi-columns",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Intrinsic sizes": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"on display: table-on, display: table-caption": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "37"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "37.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					]
				}
			}
		},
		"column-span": {
			"n": "column-span",
			"t": [
				"CSS Multi-columns",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		"column-rule-width": {
			"n": "column-rule-width",
			"t": [
				"CSS Multi-columns",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		"column-rule-style": {
			"n": "column-rule-style",
			"t": [
				"CSS Multi-columns",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		"column-rule-color": {
			"n": "column-rule-color",
			"t": [
				"CSS Multi-columns",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		"column-gap": {
			"n": "column-gap",
			"t": [
				"CSS Multi-columns",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		"column-rule": {
			"n": "column-rule",
			"t": [
				"CSS Multi-columns",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		"column-fill": {
			"n": "column-fill",
			"t": [
				"CSS Multi-columns",
				"CSS Property",
				"NeedsBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "13.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "13.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"column-count": {
			"n": "column-count",
			"t": [
				"CSS Multi-columns",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"on display: table-caption": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "37"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "37.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unprefixed": {
					"c": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "50.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "-"
						}
					],
					"om": [
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "50.0"
						}
					]
				}
			}
		},
		":first-of-type": {
			"n": ":first-of-type",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		"flex": {
			"n": "flex",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "20.0"
						},
						{
							"p": "",
							"v": "28.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						},
						{
							"p": "",
							"v": "29.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						},
						{
							"p": "",
							"v": "9.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "11"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "7.1"
						}
					]
				}
			}
		},
		"flex-basis": {
			"n": "flex-basis",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "22.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"e": [
						{
							"p": "",
							"v": "12"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"auto": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"e": [
						{
							"p": "",
							"v": "12"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					]
				},
				"content": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "12"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"flex-direction": {
			"n": "flex-direction",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "20.0"
						},
						{
							"p": "",
							"v": "28.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10"
						},
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"flex-flow": {
			"n": "flex-flow",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						},
						{
							"p": "",
							"v": "29.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "11"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "7.1"
						}
					]
				}
			}
		},
		"flex-shrink": {
			"n": "flex-shrink",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "32.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "8.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "32.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"flex-grow": {
			"n": "flex-grow",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"< 0 animate": {
					"f": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "49.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"flex-wrap": {
			"n": "flex-wrap",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					]
				}
			}
		},
		"grid-auto-rows": {
			"n": "grid-auto-rows",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-column-start": {
			"n": "grid-column-start",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-auto-flow": {
			"n": "grid-auto-flow",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-column-gap": {
			"n": "grid-column-gap",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-auto-columns": {
			"n": "grid-auto-columns",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-area": {
			"n": "grid-area",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-column-end": {
			"n": "grid-column-end",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-column": {
			"n": "grid-column",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid": {
			"n": "grid",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"<gradient>": {
			"n": "<gradient>",
			"t": [
				"CSS Data Type",
				"Graphics",
				"Layout"
			],
			"c": {}
		},
		":fullscreen": {
			"n": ":fullscreen",
			"t": [
				"CSS Pseudo-class",
				"Experimental",
				"Full-screen",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "15.0"
						}
					],
					"e": [
						{
							"p": "",
							"v": "12"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Select all elements in the fullscreen stack": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"e": [
						{
							"p": "",
							"v": "12"
						}
					],
					"f": [
						{
							"p": "",
							"v": "43"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "43.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"<frequency>": {
			"n": "<frequency>",
			"t": [
				"CSS Data Types",
				"CSS Unit",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"font-weight": {
			"n": "font-weight",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		"font-variant-position": {
			"n": "font-variant-position",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"font-variant-numeric": {
			"n": "font-variant-numeric",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "",
							"v": "52"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"font-variant-ligatures": {
			"n": "font-variant-ligatures",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"CSS Reference",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "31"
						},
						{
							"p": "",
							"v": "34"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "19.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.4"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					]
				}
			}
		},
		"font-variant-east-asian": {
			"n": "font-variant-east-asian",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"font-variant-caps": {
			"n": "font-variant-caps",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"Not Found": {
			"n": "Not Found",
			"t": [],
			"c": {}
		},
		"font-variant": {
			"n": "font-variant",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"ß → SS": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"i → İ and ı → I": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "14"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Greek accented letters": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"CSS Font L3 version (shorthand)": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9.3"
						}
					]
				}
			}
		},
		"font-synthesis": {
			"n": "font-synthesis",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"font-style": {
			"n": "font-style",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"font"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"font-stretch": {
			"n": "font-stretch",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "35.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"font-size-adjust": {
			"n": "font-size-adjust",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "44.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "42.0"
						}
					]
				}
			}
		},
		"font-size": {
			"n": "font-size",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"Rem values": {
					"c": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						},
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.1"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "42"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"font-language-override": {
			"n": "font-language-override",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "34"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"font-kerning": {
			"n": "font-kerning",
			"t": [
				"CSS Property",
				"Fonts",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "32"
						}
					],
					"f": [
						{
							"p": "",
							"v": "34"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7"
						}
					]
				}
			}
		},
		"font-feature-settings": {
			"n": "font-feature-settings",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "16.0"
						},
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "-moz",
							"v": "29.0"
						},
						{
							"p": "",
							"v": "34.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "-moz",
							"v": "29.0"
						},
						{
							"p": "",
							"v": "34.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "24"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"font-family": {
			"n": "font-family",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"@font-face": {
			"n": "@font-face",
			"t": [
				"At-rule",
				"Fonts"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"WOFF": {
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"c": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				},
				"WOFF2": {
					"f": [
						{
							"p": "",
							"v": "39"
						}
					],
					"c": [
						{
							"p": "",
							"v": "38"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "24"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"SVG Fonts[2]": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"unicode-range": {
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "36.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"font": {
			"n": "font",
			"t": [
				"CSS Fonts",
				"CSS Property"
			],
			"c": {
				"Shorthand": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"System fonts": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"Support of font-stretch values": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "43"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "43"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "43"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":focus": {
			"n": ":focus",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"float": {
			"n": "float",
			"t": [
				"CSS Positioning",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"inline-start, inline-end": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "45"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "45.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "2.5"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-gap": {
			"n": "grid-gap",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-row": {
			"n": "grid-row",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-row-end": {
			"n": "grid-row-end",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-row-gap": {
			"n": "grid-row-gap",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-row-start": {
			"n": "grid-row-start",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-template": {
			"n": "grid-template",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-template-areas": {
			"n": "grid-template-areas",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"grid-template-columns": {
			"n": "grid-template-columns",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"list-style": {
			"n": "list-style",
			"t": [
				"CSS List",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		":link": {
			"n": ":link",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		"linear-gradient()": {
			"n": "linear-gradient()",
			"t": [
				"CSS Function",
				"CSS Image",
				"Graphics",
				"Layout",
				"NeedsNewCompatTable"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "16"
						},
						{
							"p": "",
							"v": "26"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"On border-radius": {
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"On any other property that accepts <image>": {
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Legacy webkit syntax ": {
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Legacy 'from' syntax (without to) ": {
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Standard syntax (using the to keyword)": {
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Interpolation hints (a percent without a color)": {
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Unitless 0 for <angle>": {
					"f": [
						{
							"p": "-moz",
							"v": "46"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"line-height": {
			"n": "line-height",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"line-break": {
			"n": "line-break",
			"t": [
				"CSS Property",
				"CSS Text",
				"NeedsExample",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"letter-spacing": {
			"n": "letter-spacing",
			"t": [
				"CSS Property",
				"CSS Text",
				"NeedsMobileBrowserCompatibility",
				"SVG"
			],
			"c": {
				"HTML support": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"SVG support": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":left": {
			"n": ":left",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"left": {
			"n": "left",
			"t": [
				"CSS Positioning",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		":last-of-type": {
			"n": ":last-of-type",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		":last-child": {
			"n": ":last-child",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		":lang": {
			"n": ":lang",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		"@keyframes": {
			"n": "@keyframes",
			"t": [
				"animations",
				"Animations",
				"At-rule",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"ignore !important declarations": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "19.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"justify-content": {
			"n": "justify-content",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "20.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"isolation": {
			"n": "isolation",
			"t": [
				"CSS Compositing",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "30"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "36.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "36"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "8.0"
						}
					]
				}
			}
		},
		":invalid": {
			"n": ":invalid",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				},
				"Apply it to <form>": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "13"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"<integer>": {
			"n": "<integer>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {
				"basic": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"inline-size": {
			"n": "inline-size",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"initial": {
			"n": "initial",
			"t": [
				"CSS Cascade",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						},
						{
							"p": "",
							"v": "19.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "19.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"inherit": {
			"n": "inherit",
			"t": [
				"CSS Cascade",
				"Layout",
				"NeedsMobileBrowserCompatibility",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		":indeterminate": {
			"n": ":indeterminate",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"type=\"checkbox\"": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.60"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"<progress>": {
					"c": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.60"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":in-range": {
			"n": ":in-range",
			"t": [
				"CSS Pseudo-class"
			],
			"c": {
				"Support on <input>": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.3"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.3"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"@import": {
			"n": "@import",
			"t": [
				"At-rule"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"ime-mode": {
			"n": "ime-mode",
			"t": [
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"image-rendering": {
			"n": "image-rendering",
			"t": [
				"CSS Image",
				"CSS Property",
				"Experimental",
				"NeedsMobileBrowserCompatibility",
				"SVG"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.60"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"crisp-edges": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.60"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"pixelated": {
					"c": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"optimizeQuality, optimizeSpeed ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.60"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"image-orientation": {
			"n": "image-orientation",
			"t": [
				"CSS Image",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "26"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"from-image": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "26"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"flip": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "26"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"<image>": {
			"n": "<image>",
			"t": [
				"CSS Data Type",
				"CSS Image",
				"Graphics",
				"Layout"
			],
			"c": {
				"<uri>": {
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"<gradient>": {
					"f": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"element()": {
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"bs": {
					"f": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-ms",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-o",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"hyphens": {
			"n": "hyphens",
			"t": [
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "13"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "43.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "43.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "4.2"
						}
					]
				},
				"Hyphenation dictionary for Afrikaans (af, af-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Bulgarian (bg, bg-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Catalan (ca, ca-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Croatian (hr, hr-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Czech (cs, cs-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Danish (da, da-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Dutch (nl, nl-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for English (en, en-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Esperanto (eo, eo-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Estonian (et, et-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Finnish (fi, fi-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for French (fr, fr-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Galician (gl, gl-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for German, Traditional Orthography of 1901 (de-1901, de-AT-1901, de-DE-1901)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for German, Reformed Orthography of 1996 (de, de-1996, de-DE, de-AT, de-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for German, Swiss Orthography (de-CH, de-CH-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Hungarian (hu, hu-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Icelandic (is, is-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Interlingua (ia, ia-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Italian (it, it-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Kurmanji (kmr, kmr-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Latin (la, la-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Lithuanian (lt, lt-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Mongolian (mn, mn-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Norwegian (Bokmål) (no, no-*, nb, nb-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Norwegian (Nynorsk) (nn, nn-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Polish (pl, pl-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Portuguese (pt, pt-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Brazilian Portuguese (pt-BR)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": []
				},
				"Hyphenation dictionary for Russian (ru, ru-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Serbian, Bosnian, Serbo-Croatian (sh, sh-*, sr, sr-*, bs, bs-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Slovenian (sl, sl-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Spanish (es, es-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Swedish (sv, sv-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Turkish (tr, tr-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Ukrainian (uk, uk-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Upper Sorbian (hsb, hsb-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for Welsh (cy, cy-*)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Hyphenation dictionary for other languages": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":hover": {
			"n": ":hover",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility",
				"Référence"
			],
			"c": {
				"for <a> elements": {
					"c": [
						{
							"p": "",
							"v": "0.2"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "2.0.4"
						},
						{
							"p": "",
							"v": "-"
						}
					]
				},
				"for all elements": {
					"c": [
						{
							"p": "",
							"v": "0.2"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "2.0.4"
						},
						{
							"p": "",
							"v": "-"
						}
					]
				},
				"for pseudo-element": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "28"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "0.2"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					]
				}
			}
		},
		"height": {
			"n": "height",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"grid-template-rows": {
			"n": "grid-template-rows",
			"t": [
				"CSS Grid",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "-ms",
							"v": "20"
						}
					],
					"o": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"list-style-image": {
			"n": "list-style-image",
			"t": [
				"CSS List",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"list-style-position": {
			"n": "list-style-position",
			"t": [
				"CSS List",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"list-style-type": {
			"n": "list-style-type",
			"t": [
				"CSS List",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"lower-latin, upper-latin, lower-greek, armenian, georgian": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"decimal-leading-zero": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"hebrew, cjk-ideographic, hiragana, hiragana-iroha, katakana, katakana-iroha  ": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						},
						{
							"p": "",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0-1.2"
						}
					]
				},
				"japanese-formal, japanese-informal, simp-chinese-formal, trad-chinese-formal, simp-chinese-informal, trad-chinese-informal  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "28.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"korean-hangul-formal, korean-hanja-informal, korean-hanja-formal, cjk-decimal  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"ethiopic-numeric, persian, arabic-indic, devanagari, bengali, gurmukhi, gujarati, oriya, tamil, telugu, kannada, malayalam, thai, lao, myanmar, khmer, cjk-heavenly-stem, cjk-earthly-branch  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "33.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"disclosure-open, disclosure-closed, mongolian  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"<string>": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"margin": {
			"n": "margin",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"auto value": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"margin-block-end": {
			"n": "margin-block-end",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"margin-block-start": {
			"n": "margin-block-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"margin-bottom": {
			"n": "margin-bottom",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"auto value": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"margin-inline-end": {
			"n": "margin-inline-end",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		":nth-of-type": {
			"n": ":nth-of-type",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		":nth-last-of-type": {
			"n": ":nth-last-of-type",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		":nth-last-child": {
			"n": ":nth-last-child",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		":nth-child": {
			"n": ":nth-child",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		":not()": {
			"n": ":not()",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				},
				"Extended arguments": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"negative": {
			"n": "negative",
			"t": [
				"@counter-style",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"@namespace": {
			"n": "@namespace",
			"t": [
				"At-rule",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Namespace selector (|)": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				}
			}
		},
		"<time>": {
			"n": "<time>",
			"t": [
				"CSS Data Type",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"mix-blend-mode": {
			"n": "mix-blend-mode",
			"t": [
				"CSS Compositing",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "8.0"
						}
					]
				},
				"SVG": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"min-zoom": {
			"n": "min-zoom",
			"t": [
				"CSS Descriptor",
				"NeedsBrowserCompatibility",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"min-width": {
			"n": "min-width",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "2.0.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"applies to <table> [1]": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"max-content, min-content, fit-content, and fill-available  ": {
					"c": [
						{
							"p": "-webkit",
							"v": "24.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"auto": {
					"c": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "16.0"
						},
						{
							"p": "",
							"v": "-"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"auto as initial value ": {
					"c": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"min-inline-size": {
			"n": "min-inline-size",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"min-height": {
			"n": "min-height",
			"t": [
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "2.0.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9"
						}
					]
				},
				"applies to <table> [1]": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"max-content, min-content, fit-content, and fill-available  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9"
						}
					]
				},
				"autoObsolete since Gecko 22": {
					"c": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"auto as initial valueObsolete since Gecko 22": {
					"c": [
						{
							"p": "",
							"v": "21.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"min-block-size": {
			"n": "min-block-size",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"@media": {
			"n": "@media",
			"t": [
				"At-rule"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				},
				"speech": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Media features": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				},
				"display-mode media feature": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "47"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"max-zoom": {
			"n": "max-zoom",
			"t": [
				"CSS Descriptor",
				"NeedsBrowserCompatibility",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"max-width": {
			"n": "max-width",
			"t": [
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "2.0.2"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"applies to <table> [1]": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"max-content, min-content, fit-content, and fill-available  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"max-inline-size": {
			"n": "max-inline-size",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"max-height": {
			"n": "max-height",
			"t": [
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"applies to <table> [1]": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"max-content, min-content, and fit-content  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9"
						}
					]
				},
				"fill-available  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"max-block-size": {
			"n": "max-block-size",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"<transform-function>": {
			"n": "<transform-function>",
			"t": [
				"CSS Data Type",
				"CSS Reference",
				"CSS Transforms",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				},
				"3D Support": {
					"c": [
						{
							"p": "",
							"v": "12.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "22"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		"mask-type": {
			"n": "mask-type",
			"t": [
				"CSS Masks",
				"CSS Property",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility",
				"SVG"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "24.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "35.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "35.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Applies to HTML elements": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "35.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"mask-size": {
			"n": "mask-size",
			"t": [
				"CSS Masks",
				"CSS Property",
				"Experimental",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"mask-repeat": {
			"n": "mask-repeat",
			"t": [
				"CSS Masks",
				"CSS Property",
				"Experimental",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				}
			}
		},
		"mask-position": {
			"n": "mask-position",
			"t": [
				"CSS Masks",
				"CSS Property",
				"Experimental",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"mask-origin": {
			"n": "mask-origin",
			"t": [
				"CSS Masks",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"e": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"fill-box, stroke-box, view-box": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"e": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"content, padding, border ": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				}
			}
		},
		"mask-mode": {
			"n": "mask-mode",
			"t": [
				"CSS Masks",
				"CSS Property",
				"Non-standard"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"mask-image": {
			"n": "mask-image",
			"t": [
				"CSS Masks",
				"CSS Property",
				"Experimental",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				},
				"Multiple mask images": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"SVG masks": {
					"c": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"e": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				}
			}
		},
		"mask-composite": {
			"n": "mask-composite",
			"t": [
				"CSS Masks",
				"CSS Property",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility",
				"Non-standard"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"mask-clip": {
			"n": "mask-clip",
			"t": [
				"CSS Masks",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"border, padding, content, text ": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				}
			}
		},
		"mask": {
			"n": "mask",
			"t": [
				"CSS Masks",
				"CSS Property",
				"Layout",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility",
				"SVG"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				},
				"Applies to HTML Elements": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Shorthand for mask-* properties": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"margin-top": {
			"n": "margin-top",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"auto value": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"margin-right": {
			"n": "margin-right",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"auto value": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"margin-inline-start": {
			"n": "margin-inline-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"margin-left": {
			"n": "margin-left",
			"t": [
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"auto value": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"<number>": {
			"n": "<number>",
			"t": [
				"CSS Data Type",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Scientific notation": {
					"c": [
						{
							"p": "",
							"v": "43.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "29"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"object-fit": {
			"n": "object-fit",
			"t": [
				"CSS Image",
				"CSS Property",
				"polyfill"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.60"
						},
						{
							"p": "",
							"v": "19.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4.4"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "36"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "11.5"
						},
						{
							"p": "",
							"v": "24"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"object-position": {
			"n": "object-position",
			"t": [
				"CSS Image",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "31.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.60"
						},
						{
							"p": "",
							"v": "19.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4.4"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "36"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "11.5"
						},
						{
							"p": "",
							"v": "24"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"offset-block-end": {
			"n": "offset-block-end",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"offset-block-start": {
			"n": "offset-block-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"offset-inline-end": {
			"n": "offset-inline-end",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"offset-inline-start": {
			"n": "offset-inline-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		":only-child": {
			"n": ":only-child",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		"<position>": {
			"n": "<position>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Combination of a keyword and a <length> or <percentage>": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Four-value syntax (support for offset from any edge)  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"position": {
			"n": "position",
			"t": [
				"CSS Property",
				"Positioning",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit-",
							"v": "7.0"
						}
					]
				},
				"fixed value": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"sticky value": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "32"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit-",
							"v": "6.1"
						}
					]
				}
			}
		},
		"pointer-events": {
			"n": "pointer-events",
			"t": [
				"CSS Property",
				"NeedsExample",
				"NeedsMobileBrowserCompatibility",
				"SVG"
			],
			"c": {
				"SVG support": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				},
				"HTML/XML content": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				}
			}
		},
		"perspective-origin": {
			"n": "perspective-origin",
			"t": [
				"CSS Property",
				"CSS Transforms",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "12"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8.1"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				}
			}
		},
		"perspective": {
			"n": "perspective",
			"t": [
				"CSS Property",
				"CSS Transforms",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1210"
						},
						{
							"p": "",
							"v": "45"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8.1"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				}
			}
		},
		"<percentage>": {
			"n": "<percentage>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"page-break-inside": {
			"n": "page-break-inside",
			"t": [
				"CSS Property",
				"Page Breaks"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "19.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"page-break-before": {
			"n": "page-break-before",
			"t": [
				"CSS Property",
				"Page Breaks"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"avoid, left, right": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"page-break-after": {
			"n": "page-break-after",
			"t": [
				"CSS Property",
				"Page Breaks"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"avoid, left, right": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"@page": {
			"n": "@page",
			"t": [
				"At-rule",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "19.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"padding-top": {
			"n": "padding-top",
			"t": [
				"CSS Padding",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"padding-right": {
			"n": "padding-right",
			"t": [
				"CSS Padding",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"padding-left": {
			"n": "padding-left",
			"t": [
				"CSS Padding",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"padding-inline-start": {
			"n": "padding-inline-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"padding-inline-end": {
			"n": "padding-inline-end",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"padding-bottom": {
			"n": "padding-bottom",
			"t": [
				"CSS Padding",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"padding-block-start": {
			"n": "padding-block-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"padding-block-end": {
			"n": "padding-block-end",
			"t": [
				"CSS Logical Property",
				"CSS Padding",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"padding": {
			"n": "padding",
			"t": [
				"CSS Padding",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"pad": {
			"n": "pad",
			"t": [
				"@counter-style",
				"CSS Counter Styles",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"overflow-y": {
			"n": "overflow-y",
			"t": [
				"CSS Box Model",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"overflow-x": {
			"n": "overflow-x",
			"t": [
				"CSS Box Model",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"word-wrap": {
			"n": "word-wrap",
			"t": [
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"overflow": {
			"n": "overflow",
			"t": [
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"outline-width": {
			"n": "outline-width",
			"t": [
				"CSS Outline",
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"outline-style": {
			"n": "outline-style",
			"t": [
				"CSS Outline",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"auto": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"outline-offset": {
			"n": "outline-offset",
			"t": [
				"CSS Outline",
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"outline-color": {
			"n": "outline-color",
			"t": [
				"CSS Outline",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"invert value": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"outline": {
			"n": "outline",
			"t": [
				"CSS Outline",
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					]
				}
			}
		},
		":out-of-range": {
			"n": ":out-of-range",
			"t": [
				"CSS Pseudo-class",
				"CSS Reference",
				"Layout"
			],
			"c": {
				"Support on <input>": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.3"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.3"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"orphans": {
			"n": "orphans",
			"t": [
				"CSS Fragmentation",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "25.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "25.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"orientation": {
			"n": "orientation",
			"t": [
				"CSS Descriptor",
				"NeedsBrowserCompatibility",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "8"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"order": {
			"n": "order",
			"t": [
				"CSS Flexible Boxes",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "21.0"
						},
						{
							"p": "",
							"v": "29"
						}
					],
					"f": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "20.0"
						},
						{
							"p": "",
							"v": "28"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7"
						},
						{
							"p": "",
							"v": "9"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "18.0"
						},
						{
							"p": "",
							"v": "20.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "7"
						},
						{
							"p": "",
							"v": "9"
						}
					]
				}
			}
		},
		":optional": {
			"n": ":optional",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				}
			}
		},
		"opacity": {
			"n": "opacity",
			"t": [
				"CSS Property",
				"CSS3",
				"css3-color",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						},
						{
							"p": "",
							"v": "8.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						},
						{
							"p": "",
							"v": "8.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		":only-of-type": {
			"n": ":only-of-type",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.2"
						}
					]
				}
			}
		},
		"prefix": {
			"n": "prefix",
			"t": [
				"@counter-style",
				"CSS Counter Styles",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"quotes": {
			"n": "quotes",
			"t": [
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "11"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"radial-gradient()": {
			"n": "radial-gradient()",
			"t": [
				"CSS Function",
				"CSS Image",
				"Graphics",
				"Layout",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "3.6"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "10.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.60"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"On border-image": {
					"f": [
						{
							"p": "",
							"v": "29"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"On any other property that accept <image>": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Legacy webkit syntax  ": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "3"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"at syntax (final standard syntax)": {
					"f": [
						{
							"p": "-moz",
							"v": "10"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"c": [
						{
							"p": "",
							"v": "26"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.60"
						},
						{
							"p": "",
							"v": "2.12"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "10"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Interpolation hints (a percent without a color)": {
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"c": [
						{
							"p": "",
							"v": "40"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "27"
						}
					],
					"s": [
						{
							"p": "",
							"v": "-"
						}
					]
				}
			}
		},
		"range": {
			"n": "range",
			"t": [
				"@counter-style",
				"CSS Descriptor",
				"CSS Lists"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"<ratio>": {
			"n": "<ratio>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"shape-outside": {
			"n": "shape-outside",
			"t": [
				"CSS Property",
				"CSS Shapes",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "37"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "24"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "8.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "8.0"
						}
					]
				}
			}
		},
		"shape-margin": {
			"n": "shape-margin",
			"t": [
				"CSS Property",
				"CSS Shapes",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"<shape>": {
			"n": "<shape>",
			"t": [
				"CSS Data Type",
				"Layout",
				"NeedsMobileBrowserCompatibility",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"::selection": {
			"n": "::selection",
			"t": [
				"CSS Pseudo-element",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"scroll-snap-type": {
			"n": "scroll-snap-type",
			"t": [
				"CSS Property",
				"CSS Scroll Snap Points",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"ie": [
						{
							"p": "-ms-",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit-",
							"v": "9"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit-",
							"v": "9"
						}
					]
				}
			}
		},
		"shape-image-threshold": {
			"n": "shape-image-threshold",
			"t": [
				"CSS Property",
				"CSS Shapes",
				"Experimental",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"scroll-snap-destination": {
			"n": "scroll-snap-destination",
			"t": [
				"CSS Property",
				"CSS Scroll Snap Points",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"scroll-snap-coordinate": {
			"n": "scroll-snap-coordinate",
			"t": [
				"CSS Property",
				"CSS Scroll Snap Points",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"fo": [
						{
							"p": "",
							"v": "39.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"scroll-behavior": {
			"n": "scroll-behavior",
			"t": [
				"CSS Property",
				"CSSOM View",
				"NeedsBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "36"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":scope": {
			"n": ":scope",
			"t": [
				"CSS Pseudo-class",
				"Experimental",
				"Expérimental",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "20"
						}
					],
					"f": [
						{
							"p": "",
							"v": "21"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "25"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.0"
						}
					]
				},
				"In .querySelector/.querySelectorAll": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "32"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "32"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.0"
						}
					]
				}
			}
		},
		"ruby-position": {
			"n": "ruby-position",
			"t": [
				"CSS Ruby",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "38"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "38.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"inter-character": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"ruby-align": {
			"n": "ruby-align",
			"t": [
				"CSS Reference",
				"CSS Ruby",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "38"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "38.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		":root": {
			"n": ":root",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"right": {
			"n": "right",
			"t": [
				"CSS Positioning",
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		":right": {
			"n": ":right",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"revert": {
			"n": "revert",
			"t": [
				"CSS Cascade",
				"Layout",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9.3"
						}
					]
				}
			}
		},
		"resize": {
			"n": "resize",
			"t": [
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.1"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"On any block-level and replaced element, table cell, and inline block element (unless overflow is visible)": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":required": {
			"n": ":required",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				}
			}
		},
		"repeating-radial-gradient()": {
			"n": "repeating-radial-gradient()",
			"t": [
				"CSS Function",
				"CSS Image",
				"Graphics",
				"Layout",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "10"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.6"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "12"
						},
						{
							"p": "",
							"v": "12.5"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"On border-image": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "29"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"On any other property that accept <image>": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Interpolation hints (a percent without a color)": {
					"c": [
						{
							"p": "",
							"v": "40"
						}
					],
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"repeating-linear-gradient()": {
			"n": "repeating-linear-gradient()",
			"t": [
				"CSS Function",
				"CSS Image",
				"css3-images",
				"Graphics",
				"Layout"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "16"
						},
						{
							"p": "",
							"v": "26"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"On border-radius": {
					"f": [
						{
							"p": "",
							"v": "29"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"On any other property that accept <image>": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Legacy webkit syntax ": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "3"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					]
				},
				"Legacy from syntax (without to) ": {
					"f": [
						{
							"p": "-moz",
							"v": "3.6"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "10.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "5.1"
						}
					]
				},
				"to syntax": {
					"f": [
						{
							"p": "-moz",
							"v": "10"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"c": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.60"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Interpolation hint (a percent without a color)": {
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"c": [
						{
							"p": "",
							"v": "40"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "27"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		":read-write": {
			"n": ":read-write",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Editable element (except to text input fields)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		":read-only": {
			"n": ":read-only",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Editable element (except to text input fields)": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "-"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"speak-as": {
			"n": "speak-as",
			"t": [
				"@counter-style",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"<string>": {
			"n": "<string>",
			"t": [
				"CSS Data Type",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"\\xx": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"transition-duration": {
			"n": "transition-duration",
			"t": [
				"CSS Property",
				"CSS Transitions",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.6"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				}
			}
		},
		"transition-delay": {
			"n": "transition-delay",
			"t": [
				"CSS Property",
				"CSS Transitions",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.6"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				}
			}
		},
		"transition": {
			"n": "transition",
			"t": [
				"CSS Property",
				"CSS Transitions",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "26.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "10.1"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "6.1"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				}
			}
		},
		"transform-style": {
			"n": "transform-style",
			"t": [
				"CSS Property",
				"CSS Transforms",
				"CSS3",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "12"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				}
			}
		},
		"transform-box": {
			"n": "transform-box",
			"t": [
				"CSS Property",
				"CSS Transforms",
				"Experimental",
				"NeedsBrowserCompatibility",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"transform-origin": {
			"n": "transform-origin",
			"t": [
				"CSS Property",
				"CSS Transforms",
				"Experimental",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "9.0"
						},
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "10.5"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "-webkit",
							"v": "8.1"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Three-value syntax": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						},
						{
							"p": "-ms",
							"v": "9.0"
						},
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Support in SVG": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41"
						},
						{
							"p": "",
							"v": "43"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "41"
						},
						{
							"p": "",
							"v": "43"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"text-underline-position": {
			"n": "text-underline-position",
			"t": [
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "33.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"under": {
					"c": [
						{
							"p": "",
							"v": "33.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"left, right": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"above, below ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"auto-pos ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"transform": {
			"n": "transform",
			"t": [
				"CSS Property",
				"Experimental",
				"NeedsBrowserCompatibility",
				"Property",
				"Transforms"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "36"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "9.0"
						},
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "10.5"
						},
						{
							"p": "",
							"v": "12.10"
						},
						{
							"p": "-webkit",
							"v": "15.0"
						},
						{
							"p": "",
							"v": "23"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "-webkit",
							"v": "11.0"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "11.5"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				},
				"3D Support": {
					"c": [
						{
							"p": "-webkit",
							"v": "12.0"
						},
						{
							"p": "",
							"v": "36"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15.0"
						},
						{
							"p": "",
							"v": "23"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "22"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					]
				}
			}
		},
		"touch-action": {
			"n": "touch-action",
			"t": [
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "36.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10.0"
						},
						{
							"p": "",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "37.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "-"
						}
					]
				}
			}
		},
		"top": {
			"n": "top",
			"t": [
				"CSS Positioning",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"text-transform": {
			"n": "text-transform",
			"t": [
				"CSS Property",
				"Layout",
				"NeedsLiveSample",
				"Property",
				"Text"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"capitalize (CSS3 version)": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "14"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"full-size-kana": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"full-width": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "19.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"ß → SS": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"i → İ and ı → I": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "14"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Dutch IJ digraph": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "14"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Greek accented letters": {
					"c": [
						{
							"p": "",
							"v": "30"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"Σ → σ or word-final ς": {
					"c": [
						{
							"p": "",
							"v": "30"
						}
					],
					"f": [
						{
							"p": "",
							"v": "14"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"text-shadow": {
			"n": "text-shadow",
			"t": [
				"CSS Property",
				"CSS Text",
				"NeedsMobileBrowserCompatibility",
				"Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"text-rendering": {
			"n": "text-rendering",
			"t": [
				"CSS Property",
				"CSS Text",
				"NeedsLiveSample",
				"NeedsMobileBrowserCompatibility",
				"SVG"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						},
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						},
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						},
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"auto": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"geometricPrecision": {
					"c": [
						{
							"p": "",
							"v": "13"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"text-overflow": {
			"n": "text-overflow",
			"t": [
				"CSS Property",
				"NeedsLiveSample",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "9"
						},
						{
							"p": "",
							"v": "11.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Two-value syntax  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"String value ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"text-orientation": {
			"n": "text-orientation",
			"t": [
				"CSS Property",
				"CSS Writing Modes",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"sideways": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "44"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "44.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"text-indent": {
			"n": "text-indent",
			"t": [
				"CSS Property",
				"CSS Text",
				"Layout"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"hanging": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"each-line": {
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"text-emphasis-style": {
			"n": "text-emphasis-style",
			"t": [
				"CSS Text Decoration",
				"Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "46"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "25.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						},
						{
							"p": "",
							"v": "7.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "46"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.4"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "33"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.1"
						}
					]
				}
			}
		},
		"text-emphasis-position": {
			"n": "text-emphasis-position",
			"t": [
				"CSS Text Decoration",
				"Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "46"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "25.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						},
						{
							"p": "",
							"v": "7.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "46"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.4"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "33"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.1"
						}
					]
				},
				"left and right": {
					"f": [
						{
							"p": "",
							"v": "46"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.1"
						}
					]
				}
			}
		},
		"text-emphasis-color": {
			"n": "text-emphasis-color",
			"t": [
				"CSS Text Decoration",
				"Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "46"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "25.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						},
						{
							"p": "",
							"v": "7.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "46"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.4"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "33"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.1"
						}
					]
				}
			}
		},
		"text-emphasis": {
			"n": "text-emphasis",
			"t": [
				"CSS Text Decoration",
				"Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "46"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "25.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						},
						{
							"p": "",
							"v": "7.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "46"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.4"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "-webkit",
							"v": "33"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.1"
						}
					]
				}
			}
		},
		"text-decoration-style": {
			"n": "text-decoration-style",
			"t": [
				"CSS Property",
				"CSS Text",
				"Layout"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"wavy": {
					"f": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"text-decoration-line": {
			"n": "text-decoration-line",
			"t": [
				"CSS Property",
				"CSS Text"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.1"
						}
					]
				},
				"blink": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "26.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"text-decoration-color": {
			"n": "text-decoration-color",
			"t": [
				"CSS Property",
				"CSS Text"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "7.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "8"
						}
					]
				}
			}
		},
		"text-decoration": {
			"n": "text-decoration",
			"t": [
				"CSS Property",
				"CSS Text",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"blink value": {
					"f": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "23.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "23.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Shorthand property": {
					"f": [
						{
							"p": "",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "6.0"
						},
						{
							"p": "",
							"v": "36.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "8"
						}
					]
				}
			}
		},
		"text-combine-upright": {
			"n": "text-combine-upright",
			"t": [
				"CSS Property",
				"CSS Writing Modes",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"digits": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "11.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"text-align-last": {
			"n": "text-align-last",
			"t": [
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "35"
						},
						{
							"p": "",
							"v": "47"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "12.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "12.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"text-align": {
			"n": "text-align",
			"t": [
				"CSS Property",
				"CSS Text"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Block alignment values  ": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-khtml",
							"v": "1.0"
						},
						{
							"p": "-webkit",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"start  ": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"end  ": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.6"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"match-parent ": {
					"c": [
						{
							"p": "",
							"v": "16"
						}
					],
					"f": [
						{
							"p": "",
							"v": "40"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "40.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		":target": {
			"n": ":target",
			"t": [
				"CSS Pseudo-class",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "2.0"
						}
					]
				}
			}
		},
		"table-layout": {
			"n": "table-layout",
			"t": [
				"CSS Property",
				"CSS Tables",
				"NeedsLiveSample",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"tab-size": {
			"n": "tab-size",
			"t": [
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "21"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "10.60"
						},
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6.1"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "7.1"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "11.5"
						},
						{
							"p": "",
							"v": "24"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4"
						}
					]
				},
				"<length>": {
					"c": [
						{
							"p": "",
							"v": "42"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"system": {
			"n": "system",
			"t": [
				"@counter-style",
				"CSS Counter Styles",
				"CSS Descriptor",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"symbols()": {
			"n": "symbols()",
			"t": [
				"CSS Counter Styles",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "35"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "35.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"symbols": {
			"n": "symbols",
			"t": [
				"@counter-style",
				"CSS Counter Styles",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"@supports": {
			"n": "@supports",
			"t": [
				"At-rule",
				"CSS3",
				"CSS3-conditionals",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "28.0"
						}
					],
					"e": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "22"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.1"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "22.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "12.1"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "28.0"
						}
					]
				}
			}
		},
		"suffix": {
			"n": "suffix",
			"t": [
				"@counter-style",
				"CSS Counter Styles",
				"CSS Descriptor"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "33"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "33"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"transition-property": {
			"n": "transition-property",
			"t": [
				"CSS Property",
				"CSS Transitions",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.6"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"IDENT value": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"transition-timing-function": {
			"n": "transition-timing-function",
			"t": [
				"CSS Property",
				"CSS Transitions",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "11.6"
						},
						{
							"p": "",
							"v": "12.10"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				}
			}
		},
		"Custom properties (--*)": {
			"n": "Custom properties (--*)",
			"t": [
				"CSS Variables",
				"Property"
			],
			"c": {}
		},
		"zoom": {
			"n": "zoom",
			"t": [
				"CSS Descriptor",
				"Graphics",
				"Layout",
				"NeedsBrowserCompatibility",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"z-index": {
			"n": "z-index",
			"t": [
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Negative values (CSS2.1 behavior, not allowed in the obsolete CSS2 spec)": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"writing-mode": {
			"n": "writing-mode",
			"t": [
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "8"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "3"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "-webkit",
							"v": "47"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "5.1"
						}
					]
				},
				"SVG 1.1 values lr, lr-tb, rl, tb, tb-rl": {
					"c": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "43"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "43.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"sideways-rl,sideways-lr": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "43"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"word-spacing": {
			"n": "word-spacing",
			"t": [
				"CSS Property",
				"CSS Text",
				"NeedsLiveSample",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Percentages": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "45.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "45.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"word-break": {
			"n": "word-break",
			"t": [
				"CSS Property",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"keep-all": {
					"c": [
						{
							"p": "",
							"v": "44"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "31"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9"
						}
					]
				}
			}
		},
		"will-change": {
			"n": "will-change",
			"t": [
				"CSS Property",
				"CSS Will-change"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "36"
						}
					],
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "24"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "37"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "36.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9.3"
						}
					]
				}
			}
		},
		"width": {
			"n": "width",
			"t": [
				"CSS Property",
				"NeedsBrowserCompatibility",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"Animatability ": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"max-content ": {
					"c": [
						{
							"p": "-webkit",
							"v": "22.0"
						},
						{
							"p": "",
							"v": "46.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "2.0"
						},
						{
							"p": "-webkit",
							"v": "6.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "46.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "46.0"
						}
					]
				},
				"min-content ": {
					"c": [
						{
							"p": "-webkit",
							"v": "22.0"
						},
						{
							"p": "",
							"v": "46.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "2.0"
						},
						{
							"p": "-webkit",
							"v": "6.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "46.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "46.0"
						}
					]
				},
				"available ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"fill-available ": {
					"c": [
						{
							"p": "-webkit",
							"v": "22.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "46.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "46.0"
						}
					]
				},
				"fit-content ": {
					"c": [
						{
							"p": "-webkit",
							"v": "22.0"
						},
						{
							"p": "",
							"v": "46.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-webkit",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6.1"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "46.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "46.0"
						}
					]
				},
				"border-box and content-box ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"widows": {
			"n": "widows",
			"t": [
				"CSS Fragmentation",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "25"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"white-space": {
			"n": "white-space",
			"t": [
				"CSS Property",
				"CSS Text",
				"NeedsLiveSample",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"pre": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				},
				"pre-wrap": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "3.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				},
				"pre-line": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				},
				"Support on <textarea>": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "36"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		":visited": {
			"n": ":visited",
			"t": [
				"CSS Pseudo-class",
				"CSS3",
				"Layout",
				"NeedsMobileBrowserCompatibility",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Restrictions in CSS properties allowed in a statement using :visited": {
					"c": [
						{
							"p": "",
							"v": "6"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				}
			}
		},
		"visibility": {
			"n": "visibility",
			"t": [
				"CSS Positioning",
				"CSS Property",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"@viewport": {
			"n": "@viewport",
			"t": [
				"Adaptation",
				"At-rule",
				"Device",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "29"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "-ms",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						},
						{
							"p": "",
							"v": "-"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.4"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "29"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "-ms",
							"v": "10"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11.10"
						},
						{
							"p": "",
							"v": "-"
						},
						{
							"p": "",
							"v": "-"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"vertical-align": {
			"n": "vertical-align",
			"t": [
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"var()": {
			"n": "var()",
			"t": [],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "48"
						},
						{
							"p": "",
							"v": "49"
						}
					],
					"f": [
						{
							"p": "",
							"v": "29"
						},
						{
							"p": "",
							"v": "31"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "29"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9.3"
						}
					]
				}
			}
		},
		":valid": {
			"n": ":valid",
			"t": [
				"CSS Pseudo-class",
				"Layout",
				"NeedsMobileBrowserCompatibility",
				"Pseudo-class"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						}
					]
				}
			}
		},
		"user-zoom": {
			"n": "user-zoom",
			"t": [
				"CSS Descriptor",
				"Graphics",
				"Layout",
				"NeedsBrowserCompatibility",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"<url>": {
			"n": "<url>",
			"t": [
				"data",
				"Layout",
				"Référence",
				"Type",
				"URI",
				"URL",
				"urn"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"unset": {
			"n": "unset",
			"t": [
				"CSS Cascade",
				"Keyword",
				"Layout",
				"NeedsLiveSample",
				"Référence"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "41"
						}
					],
					"f": [
						{
							"p": "",
							"v": "27"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "-"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "27.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"unicode-range": {
			"n": "unicode-range",
			"t": [
				"CSS Fonts",
				"CSS Property",
				"Experimental",
				"Layout"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "",
							"v": "44"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "44.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"unicode-bidi": {
			"n": "unicode-bidi",
			"t": [
				"CSS Property",
				"NeedsLiveSample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.3"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6"
						}
					],
					"om": [
						{
							"p": "",
							"v": "8"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.1"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					]
				},
				"isolate ": {
					"c": [
						{
							"p": "-webkit",
							"v": "16"
						},
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "-"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "10.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "48.0"
						}
					]
				},
				"plaintext ": {
					"c": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "10"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "10.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "48.0"
						}
					]
				},
				"isolate-override ": {
					"c": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "17"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"aw": [
						{
							"p": "",
							"v": "48.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "17.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "48.0"
						}
					]
				}
			}
		},
		"border-bottom-style": {
			"n": "border-bottom-style",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-bottom-width": {
			"n": "border-bottom-width",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-collapse": {
			"n": "border-collapse",
			"t": [
				"CSS Borders",
				"CSS Property",
				"CSS Tables"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.2"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.3"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				}
			}
		},
		"border-color": {
			"n": "border-color",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"border-image": {
			"n": "border-image",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "3.5"
						},
						{
							"p": "",
							"v": "15"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "7.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "10.5"
						},
						{
							"p": "",
							"v": "15.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "6.0"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "3.5"
						},
						{
							"p": "",
							"v": "15"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						},
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "-o",
							"v": "11.0"
						}
					]
				},
				"optional <border-image-slice>": {
					"f": [
						{
							"p": "",
							"v": "15"
						}
					],
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"fill keyword": {
					"f": [
						{
							"p": "",
							"v": "15"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6"
						}
					],
					"a": [
						{
							"p": "",
							"v": "18.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "6"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"<gradient>": {
					"f": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "29.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-image-outset": {
			"n": "border-image-outset",
			"t": [
				"CSS Borders",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-image-repeat": {
			"n": "border-image-repeat",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "9.3"
						}
					]
				},
				"space": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.1"
						}
					]
				},
				"round": {
					"c": [
						{
							"p": "",
							"v": "30"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "9.1"
						}
					]
				}
			}
		},
		"border-image-slice": {
			"n": "border-image-slice",
			"t": [
				"CSS Borders",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "4.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"@charset": {
			"n": "@charset",
			"t": [
				"At-rule",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9"
						}
					],
					"s": [
						{
							"p": "",
							"v": "4"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.1"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"om": [
						{
							"p": "",
							"v": "10.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "4"
						}
					]
				}
			}
		},
		"caption-side": {
			"n": "caption-side",
			"t": [
				"CSS Property",
				"CSS Tables"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"left, right, top-outside and bottom-outside  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"top and bottom are relative to the writing-mode value  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "42"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "42.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"calc()": {
			"n": "calc()",
			"t": [
				"CSS Function",
				"Layout"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "19"
						},
						{
							"p": "",
							"v": "26"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6"
						},
						{
							"p": "",
							"v": "7"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "4.0"
						},
						{
							"p": "",
							"v": "16.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "6"
						},
						{
							"p": "",
							"v": "7"
						}
					]
				},
				"On gradients' color stops": {
					"c": [
						{
							"p": "-webkit",
							"v": "19"
						},
						{
							"p": "",
							"v": "26"
						}
					],
					"f": [
						{
							"p": "",
							"v": "19"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "6"
						},
						{
							"p": "",
							"v": "7"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "19.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"nested calc()": {
					"c": [
						{
							"p": "",
							"v": "51"
						}
					],
					"f": [
						{
							"p": "",
							"v": "48"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "51"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "48"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Support for <number> values": {
					"c": [
						{
							"p": "",
							"v": "?"
						}
					],
					"f": [
						{
							"p": "",
							"v": "48"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "48"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"break-inside": {
			"n": "break-inside",
			"t": [
				"CSS Fragmentation",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"column, avoid-column": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"recto, verso  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"region, avoid-region  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"break-before": {
			"n": "break-before",
			"t": [
				"CSS Fragmentation",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"column, avoid-column": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"recto, verso  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"region, avoid-region  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"break-after": {
			"n": "break-after",
			"t": [
				"CSS Fragmentation",
				"CSS Property",
				"NeedsExample"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"column, avoid-column": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "10"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.10"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"recto, verso  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"region, avoid-region  ": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "no"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"box-sizing": {
			"n": "box-sizing",
			"t": [
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "10.0"
						}
					],
					"e": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "29.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "5.1"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"fm": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "29.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"box-shadow": {
			"n": "box-shadow",
			"t": [
				"CSS Background",
				"CSS Property",
				"CSS3",
				"css3-background"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						},
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						},
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						},
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						},
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					]
				},
				"Multiple shadows": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						},
						{
							"p": "-webkit",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						},
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						},
						{
							"p": "-webkit",
							"v": "3.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						},
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"inset keyword": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						},
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						},
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						},
						{
							"p": "-webkit",
							"v": "5.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						},
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Spread radius": {
					"c": [
						{
							"p": "",
							"v": "10.0"
						},
						{
							"p": "-webkit",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "4.0"
						},
						{
							"p": "-moz",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						},
						{
							"p": "-webkit",
							"v": "5.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "5.0"
						},
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"box-decoration-break": {
			"n": "box-decoration-break",
			"t": [
				"CSS Fragmentation",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"Support on inline elements": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						}
					],
					"f": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Support on non-inline element": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				},
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "yes"
						},
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "?"
						}
					],
					"o": [
						{
							"p": "-o",
							"v": "yes"
						},
						{
							"p": "",
							"v": "?"
						}
					],
					"s": [
						{
							"p": "",
							"v": "?"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "32.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"bottom": {
			"n": "bottom",
			"t": [
				"CSS Positioning",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "6"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-width": {
			"n": "border-width",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				}
			}
		},
		"border-top-width": {
			"n": "border-top-width",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-top-right-radius": {
			"n": "border-top-right-radius",
			"t": [
				"CSS Borders",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Percentages": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Elliptical corners": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-top-style": {
			"n": "border-top-style",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-top-left-radius": {
			"n": "border-top-left-radius",
			"t": [
				"CSS Borders",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Percentages": {
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Elliptical corners": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "3.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-top-color": {
			"n": "border-top-color",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.5"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"border-top": {
			"n": "border-top",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-style": {
			"n": "border-style",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.6"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "3.0"
						}
					]
				}
			}
		},
		"border-spacing": {
			"n": "border-spacing",
			"t": [
				"CSS Property",
				"CSS Tables"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "8.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-right-width": {
			"n": "border-right-width",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.3"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"border-right-style": {
			"n": "border-right-style",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-right-color": {
			"n": "border-right-color",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.5"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"border-right": {
			"n": "border-right",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-left-width": {
			"n": "border-left-width",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-left-style": {
			"n": "border-left-style",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "5.5"
						}
					],
					"o": [
						{
							"p": "",
							"v": "9.2"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "2.3"
						}
					],
					"ca": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "14"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "7.0"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-radius": {
			"n": "border-radius",
			"t": [
				"CSS Borders",
				"CSS Property",
				"NeedsMobileBrowserCompatibility"
			],
			"c": {
				"bs": {
					"f": [
						{
							"p": "-moz",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "-webkit",
							"v": "1.0"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "9.0"
						}
					],
					"o": [
						{
							"p": "",
							"v": "10.5"
						}
					],
					"s": [
						{
							"p": "-webkit",
							"v": "3.0"
						},
						{
							"p": "",
							"v": "5.0"
						}
					],
					"sm": [
						{
							"p": "-webkit",
							"v": "3.2"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "-webkit",
							"v": "2.1"
						}
					]
				},
				"Elliptical borders": {
					"f": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"4 values for 4 corners": {
					"f": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"c": [
						{
							"p": "",
							"v": "4.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.0"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					]
				},
				"Percentages": {
					"f": [
						{
							"p": "",
							"v": "yes"
						},
						{
							"p": "",
							"v": "4.0"
						}
					],
					"c": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"o": [
						{
							"p": "",
							"v": "11.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "5.1"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-left-color": {
			"n": "border-left-color",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "6.5"
						}
					],
					"om": [
						{
							"p": "",
							"v": "11"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "1.0"
						}
					]
				}
			}
		},
		"border-left": {
			"n": "border-left",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "4"
						}
					],
					"o": [
						{
							"p": "",
							"v": "3.5"
						}
					],
					"s": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"a": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "1.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"om": [
						{
							"p": "",
							"v": "yes"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "yes"
						}
					]
				}
			}
		},
		"border-inline-start-width": {
			"n": "border-inline-start-width",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-inline-start-style": {
			"n": "border-inline-start-style",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-inline-start-color": {
			"n": "border-inline-start-color",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-inline-start": {
			"n": "border-inline-start",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-inline-end-width": {
			"n": "border-inline-end-width",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-inline-end-style": {
			"n": "border-inline-end-style",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-inline-end-color": {
			"n": "border-inline-end-color",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental",
				"NeedsContent"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-inline-end": {
			"n": "border-inline-end",
			"t": [
				"CSS Logical Property",
				"CSS Property",
				"Experimental"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "no"
						}
					],
					"f": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "no"
						}
					],
					"o": [
						{
							"p": "",
							"v": "no"
						}
					],
					"s": [
						{
							"p": "",
							"v": "no"
						}
					],
					"a": [
						{
							"p": "",
							"v": "no"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "41.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "no"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "no"
						}
					]
				}
			}
		},
		"border-image-width": {
			"n": "border-image-width",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "13.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		},
		"border-image-source": {
			"n": "border-image-source",
			"t": [
				"CSS Borders",
				"CSS Property"
			],
			"c": {
				"bs": {
					"c": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"f": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"ie": [
						{
							"p": "",
							"v": "11"
						}
					],
					"o": [
						{
							"p": "",
							"v": "15"
						}
					],
					"s": [
						{
							"p": "",
							"v": "6"
						}
					],
					"a": [
						{
							"p": "",
							"v": "?"
						}
					],
					"fm": [
						{
							"p": "",
							"v": "15.0"
						}
					],
					"iem": [
						{
							"p": "",
							"v": "no"
						}
					],
					"om": [
						{
							"p": "",
							"v": "?"
						}
					],
					"sm": [
						{
							"p": "",
							"v": "?"
						}
					]
				}
			}
		}
	};

/***/ },
/* 8 */
/*!************************************************!*\
  !*** ./~/browser-data/db/enginesPrefixes.json ***!
  \************************************************/
/***/ function(module, exports) {

	module.exports = {
		"Gecko": [
			"-moz-",
			"-webkit-"
		],
		"WebKit": [
			"-webkit-",
			"-apple-",
			"-khtml-",
			"-epub-"
		],
		"Presto": [
			"-o-",
			"-xv-",
			"-wap-",
			"-webkit-"
		],
		"Elektra": [
			"-o-"
		],
		"Trident": [
			"-ms-"
		],
		"MSHTML": [
			"-ms-"
		]
	};

/***/ },
/* 9 */
/*!*******************************************!*\
  !*** ./~/browser-data/versionsHelpers.js ***!
  \*******************************************/
/***/ function(module, exports) {

	'use strict';
	
	function findLastVersion(versions, version) {
	  if (versions.indexOf(version) > -1) {
	    return version;
	  } else {
	    // Return the previous version
	    versions.push(version);
	    versions.sort(compareVersions);
	    var idx = versions.indexOf(version);
	    if (idx === 0) {
	      return undefined;
	    }
	    return versions[idx - 1];
	  }
	  return undefined;
	}
	
	function compareVersions(a, b) {
	  if (a === b) {
	    return 0;
	  }
	  var a_components = a.split('.').map(function (s) {
	    return parseInt(s, 10);
	  });
	  var b_components = b.split('.').map(function (s) {
	    return parseInt(s, 10);
	  });
	  var len = Math.min(a_components.length, b_components.length);
	  for (var i = 0; i < len; i++) {
	    if (a_components[i] !== b_components[i]) {
	      return a_components[i] - b_components[i];
	    }
	  }
	  return a_components.length - b_components.length;
	}
	
	module.exports = { findLastVersion: findLastVersion, compareVersions: compareVersions };

/***/ },
/* 10 */
/*!************************!*\
  !*** ./~/lodash/fp.js ***!
  \************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _ = __webpack_require__(/*! ./lodash.min */ 11).runInContext();
	module.exports = __webpack_require__(/*! ./fp/_baseConvert */ 12)(_, _);

/***/ },
/* 11 */
/*!********************************!*\
  !*** ./~/lodash/lodash.min.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	/**
	 * @license
	 * lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE
	 */
	;(function () {
	  function t(t, n) {
	    return t.set(n[0], n[1]), t;
	  }function n(t, n) {
	    return t.add(n), t;
	  }function r(t, n, r) {
	    switch (r.length) {case 0:
	        return t.call(n);case 1:
	        return t.call(n, r[0]);case 2:
	        return t.call(n, r[0], r[1]);case 3:
	        return t.call(n, r[0], r[1], r[2]);}return t.apply(n, r);
	  }function e(t, n, r, e) {
	    for (var u = -1, o = t ? t.length : 0; ++u < o;) {
	      var i = t[u];n(e, i, r(i), t);
	    }return e;
	  }function u(t, n) {
	    for (var r = -1, e = t ? t.length : 0; ++r < e && false !== n(t[r], r, t);) {}return t;
	  }function o(t, n) {
	    for (var r = t ? t.length : 0; r-- && false !== n(t[r], r, t);) {}
	    return t;
	  }function i(t, n) {
	    for (var r = -1, e = t ? t.length : 0; ++r < e;) {
	      if (!n(t[r], r, t)) return false;
	    }return true;
	  }function f(t, n) {
	    for (var r = -1, e = t ? t.length : 0, u = 0, o = []; ++r < e;) {
	      var i = t[r];n(i, r, t) && (o[u++] = i);
	    }return o;
	  }function c(t, n) {
	    return !(!t || !t.length) && -1 < d(t, n, 0);
	  }function a(t, n, r) {
	    for (var e = -1, u = t ? t.length : 0; ++e < u;) {
	      if (r(n, t[e])) return true;
	    }return false;
	  }function l(t, n) {
	    for (var r = -1, e = t ? t.length : 0, u = Array(e); ++r < e;) {
	      u[r] = n(t[r], r, t);
	    }return u;
	  }function s(t, n) {
	    for (var r = -1, e = n.length, u = t.length; ++r < e;) {
	      t[u + r] = n[r];
	    }return t;
	  }function h(t, n, r, e) {
	    var u = -1,
	        o = t ? t.length : 0;for (e && o && (r = t[++u]); ++u < o;) {
	      r = n(r, t[u], u, t);
	    }return r;
	  }function p(t, n, r, e) {
	    var u = t ? t.length : 0;for (e && u && (r = t[--u]); u--;) {
	      r = n(r, t[u], u, t);
	    }return r;
	  }function _(t, n) {
	    for (var r = -1, e = t ? t.length : 0; ++r < e;) {
	      if (n(t[r], r, t)) return true;
	    }return false;
	  }function v(t, n, r) {
	    var e;return r(t, function (t, r, u) {
	      return n(t, r, u) ? (e = r, false) : void 0;
	    }), e;
	  }function g(t, n, r, e) {
	    var u = t.length;for (r += e ? 1 : -1; e ? r-- : ++r < u;) {
	      if (n(t[r], r, t)) return r;
	    }return -1;
	  }function d(t, n, r) {
	    if (n !== n) return M(t, r);--r;for (var e = t.length; ++r < e;) {
	      if (t[r] === n) return r;
	    }return -1;
	  }function y(t, n, r, e) {
	    --r;for (var u = t.length; ++r < u;) {
	      if (e(t[r], n)) return r;
	    }return -1;
	  }function b(t, n) {
	    var r = t ? t.length : 0;return r ? w(t, n) / r : V;
	  }function x(t, n, r, e, u) {
	    return u(t, function (t, u, o) {
	      r = e ? (e = false, t) : n(r, t, u, o);
	    }), r;
	  }function j(t, n) {
	    var r = t.length;for (t.sort(n); r--;) {
	      t[r] = t[r].c;
	    }return t;
	  }function w(t, n) {
	    for (var r, e = -1, u = t.length; ++e < u;) {
	      var o = n(t[e]);o !== T && (r = r === T ? o : r + o);
	    }return r;
	  }function m(t, n) {
	    for (var r = -1, e = Array(t); ++r < t;) {
	      e[r] = n(r);
	    }return e;
	  }function A(t, n) {
	    return l(n, function (n) {
	      return [n, t[n]];
	    });
	  }function O(t) {
	    return function (n) {
	      return t(n);
	    };
	  }function k(t, n) {
	    return l(n, function (n) {
	      return t[n];
	    });
	  }function E(t, n) {
	    return t.has(n);
	  }function S(t, n) {
	    for (var r = -1, e = t.length; ++r < e && -1 < d(n, t[r], 0);) {}return r;
	  }function I(t, n) {
	    for (var r = t.length; r-- && -1 < d(n, t[r], 0);) {}return r;
	  }function R(t) {
	    return t && t.Object === Object ? t : null;
	  }function W(t) {
	    return zt[t];
	  }function B(t) {
	    return Ut[t];
	  }function L(t) {
	    return "\\" + Dt[t];
	  }function M(t, n, r) {
	    var e = t.length;for (n += r ? 1 : -1; r ? n-- : ++n < e;) {
	      var u = t[n];if (u !== u) return n;
	    }return -1;
	  }function C(t) {
	    var n = false;if (null != t && typeof t.toString != "function") try {
	      n = !!(t + "");
	    } catch (r) {}return n;
	  }function z(t) {
	    for (var n, r = []; !(n = t.next()).done;) {
	      r.push(n.value);
	    }return r;
	  }function U(t) {
	    var n = -1,
	        r = Array(t.size);return t.forEach(function (t, e) {
	      r[++n] = [e, t];
	    }), r;
	  }function $(t, n) {
	    for (var r = -1, e = t.length, u = 0, o = []; ++r < e;) {
	      var i = t[r];i !== n && "__lodash_placeholder__" !== i || (t[r] = "__lodash_placeholder__", o[u++] = r);
	    }return o;
	  }function D(t) {
	    var n = -1,
	        r = Array(t.size);return t.forEach(function (t) {
	      r[++n] = t;
	    }), r;
	  }function F(t) {
	    var n = -1,
	        r = Array(t.size);return t.forEach(function (t) {
	      r[++n] = [t, t];
	    }), r;
	  }function N(t) {
	    if (!t || !Wt.test(t)) return t.length;for (var n = It.lastIndex = 0; It.test(t);) {
	      n++;
	    }return n;
	  }function P(t) {
	    return $t[t];
	  }function Z(R) {
	    function At(t, n) {
	      return R.setTimeout.call(Kt, t, n);
	    }function Ot(t) {
	      if (Te(t) && !yi(t) && !(t instanceof Ut)) {
	        if (t instanceof zt) return t;if (Wu.call(t, "__wrapped__")) return ae(t);
	      }return new zt(t);
	    }function kt() {}function zt(t, n) {
	      this.__wrapped__ = t, this.__actions__ = [], this.__chain__ = !!n, this.__index__ = 0, this.__values__ = T;
	    }function Ut(t) {
	      this.__wrapped__ = t, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = 4294967295, this.__views__ = [];
	    }function $t(t) {
	      var n = -1,
	          r = t ? t.length : 0;for (this.clear(); ++n < r;) {
	        var e = t[n];this.set(e[0], e[1]);
	      }
	    }function Dt(t) {
	      var n = -1,
	          r = t ? t.length : 0;for (this.clear(); ++n < r;) {
	        var e = t[n];this.set(e[0], e[1]);
	      }
	    }function Pt(t) {
	      var n = -1,
	          r = t ? t.length : 0;for (this.clear(); ++n < r;) {
	        var e = t[n];this.set(e[0], e[1]);
	      }
	    }function Zt(t) {
	      var n = -1,
	          r = t ? t.length : 0;
	      for (this.__data__ = new Pt(); ++n < r;) {
	        this.add(t[n]);
	      }
	    }function qt(t) {
	      this.__data__ = new Dt(t);
	    }function Vt(t, n, r, e) {
	      return t === T || Ce(t, ku[r]) && !Wu.call(e, r) ? n : t;
	    }function Jt(t, n, r) {
	      (r === T || Ce(t[n], r)) && (typeof n != "number" || r !== T || n in t) || (t[n] = r);
	    }function Yt(t, n, r) {
	      var e = t[n];Wu.call(t, n) && Ce(e, r) && (r !== T || n in t) || (t[n] = r);
	    }function Ht(t, n) {
	      for (var r = t.length; r--;) {
	        if (Ce(t[r][0], n)) return r;
	      }return -1;
	    }function Qt(t, n, r, e) {
	      return Ao(t, function (t, u, o) {
	        n(e, t, r(t), o);
	      }), e;
	    }function Xt(t, n) {
	      return t && sr(n, iu(n), t);
	    }
	    function tn(t, n) {
	      for (var r = -1, e = null == t, u = n.length, o = Array(u); ++r < u;) {
	        o[r] = e ? T : uu(t, n[r]);
	      }return o;
	    }function nn(t, n, r) {
	      return t === t && (r !== T && (t = r >= t ? t : r), n !== T && (t = t >= n ? t : n)), t;
	    }function rn(t, n, r, e, o, i, f) {
	      var c;if (e && (c = i ? e(t, o, i, f) : e(t)), c !== T) return c;if (!Ze(t)) return t;if (o = yi(t)) {
	        if (c = Kr(t), !n) return lr(t, c);
	      } else {
	        var a = qr(t),
	            l = "[object Function]" == a || "[object GeneratorFunction]" == a;if (bi(t)) return or(t, n);if ("[object Object]" == a || "[object Arguments]" == a || l && !i) {
	          if (C(t)) return i ? t : {};if (c = Gr(l ? {} : t), !n) return hr(t, Xt(c, t));
	        } else {
	          if (!Ct[a]) return i ? t : {};c = Jr(t, a, rn, n);
	        }
	      }if (f || (f = new qt()), i = f.get(t)) return i;if (f.set(t, c), !o) var s = r ? gn(t, iu, Tr) : iu(t);return u(s || t, function (u, o) {
	        s && (o = u, u = t[o]), Yt(c, o, rn(u, n, r, e, o, t, f));
	      }), c;
	    }function en(t) {
	      var n = iu(t),
	          r = n.length;return function (e) {
	        if (null == e) return !r;for (var u = r; u--;) {
	          var o = n[u],
	              i = t[o],
	              f = e[o];if (f === T && !(o in Object(e)) || !i(f)) return false;
	        }return true;
	      };
	    }function un(t) {
	      return Ze(t) ? Tu(t) : {};
	    }function on(t, n, r) {
	      if (typeof t != "function") throw new Au("Expected a function");
	      return At(function () {
	        t.apply(T, r);
	      }, n);
	    }function fn(t, n, r, e) {
	      var u = -1,
	          o = c,
	          i = true,
	          f = t.length,
	          s = [],
	          h = n.length;if (!f) return s;r && (n = l(n, O(r))), e ? (o = a, i = false) : n.length >= 200 && (o = E, i = false, n = new Zt(n));t: for (; ++u < f;) {
	        var p = t[u],
	            _ = r ? r(p) : p,
	            p = e || 0 !== p ? p : 0;if (i && _ === _) {
	          for (var v = h; v--;) {
	            if (n[v] === _) continue t;
	          }s.push(p);
	        } else o(n, _, e) || s.push(p);
	      }return s;
	    }function cn(t, n) {
	      var r = true;return Ao(t, function (t, e, u) {
	        return r = !!n(t, e, u);
	      }), r;
	    }function an(t, n, r) {
	      for (var e = -1, u = t.length; ++e < u;) {
	        var o = t[e],
	            i = n(o);if (null != i && (f === T ? i === i && !Je(i) : r(i, f))) var f = i,
	            c = o;
	      }return c;
	    }function ln(t, n) {
	      var r = [];return Ao(t, function (t, e, u) {
	        n(t, e, u) && r.push(t);
	      }), r;
	    }function sn(t, n, r, e, u) {
	      var o = -1,
	          i = t.length;for (r || (r = Hr), u || (u = []); ++o < i;) {
	        var f = t[o];n > 0 && r(f) ? n > 1 ? sn(f, n - 1, r, e, u) : s(u, f) : e || (u[u.length] = f);
	      }return u;
	    }function hn(t, n) {
	      return t && ko(t, n, iu);
	    }function pn(t, n) {
	      return t && Eo(t, n, iu);
	    }function _n(t, n) {
	      return f(n, function (n) {
	        return Fe(t[n]);
	      });
	    }function vn(t, n) {
	      n = ne(n, t) ? [n] : er(n);for (var r = 0, e = n.length; null != t && e > r;) {
	        t = t[fe(n[r++])];
	      }return r && r == e ? t : T;
	    }function gn(t, n, r) {
	      return n = n(t), yi(t) ? n : s(n, r(t));
	    }function dn(t, n) {
	      return t > n;
	    }function yn(t, n) {
	      return null != t && (Wu.call(t, n) || (typeof t === "undefined" ? "undefined" : _typeof(t)) == "object" && n in t && null === Ju(Object(t)));
	    }function bn(t, n) {
	      return null != t && n in Object(t);
	    }function xn(t, n, r) {
	      for (var e = r ? a : c, u = t[0].length, o = t.length, i = o, f = Array(o), s = 1 / 0, h = []; i--;) {
	        var p = t[i];i && n && (p = l(p, O(n))), s = to(p.length, s), f[i] = !r && (n || u >= 120 && p.length >= 120) ? new Zt(i && p) : T;
	      }var p = t[0],
	          _ = -1,
	          v = f[0];t: for (; ++_ < u && s > h.length;) {
	        var g = p[_],
	            d = n ? n(g) : g,
	            g = r || 0 !== g ? g : 0;if (v ? !E(v, d) : !e(h, d, r)) {
	          for (i = o; --i;) {
	            var y = f[i];if (y ? !E(y, d) : !e(t[i], d, r)) continue t;
	          }v && v.push(d), h.push(g);
	        }
	      }return h;
	    }function jn(t, n, r) {
	      var e = {};return hn(t, function (t, u, o) {
	        n(e, r(t), u, o);
	      }), e;
	    }function wn(t, n, e) {
	      return ne(n, t) || (n = er(n), t = ie(t, n), n = ve(n)), n = null == t ? t : t[fe(n)], null == n ? T : r(n, t, e);
	    }function mn(t, n, r, e, u) {
	      if (t === n) n = true;else if (null == t || null == n || !Ze(t) && !Te(n)) n = t !== t && n !== n;else t: {
	        var o = yi(t),
	            i = yi(n),
	            f = "[object Array]",
	            c = "[object Array]";o || (f = qr(t), f = "[object Arguments]" == f ? "[object Object]" : f), i || (c = qr(n), c = "[object Arguments]" == c ? "[object Object]" : c);var a = "[object Object]" == f && !C(t),
	            i = "[object Object]" == c && !C(n);if ((c = f == c) && !a) u || (u = new qt()), n = o || Ye(t) ? zr(t, n, mn, r, e, u) : Ur(t, n, f, mn, r, e, u);else {
	          if (!(2 & e) && (o = a && Wu.call(t, "__wrapped__"), f = i && Wu.call(n, "__wrapped__"), o || f)) {
	            t = o ? t.value() : t, n = f ? n.value() : n, u || (u = new qt()), n = mn(t, n, r, e, u);break t;
	          }if (c) {
	            n: if (u || (u = new qt()), o = 2 & e, f = iu(t), i = f.length, c = iu(n).length, i == c || o) {
	              for (a = i; a--;) {
	                var l = f[a];if (!(o ? l in n : yn(n, l))) {
	                  n = false;break n;
	                }
	              }if (c = u.get(t)) n = c == n;else {
	                c = true, u.set(t, n);for (var s = o; ++a < i;) {
	                  var l = f[a],
	                      h = t[l],
	                      p = n[l];if (r) var _ = o ? r(p, h, l, n, t, u) : r(h, p, l, t, n, u);if (_ === T ? h !== p && !mn(h, p, r, e, u) : !_) {
	                    c = false;break;
	                  }s || (s = "constructor" == l);
	                }c && !s && (r = t.constructor, e = n.constructor, r != e && "constructor" in t && "constructor" in n && !(typeof r == "function" && r instanceof r && typeof e == "function" && e instanceof e) && (c = false)), u["delete"](t), n = c;
	              }
	            } else n = false;
	          } else n = false;
	        }
	      }return n;
	    }function An(t, n, r, e) {
	      var u = r.length,
	          o = u,
	          i = !e;if (null == t) return !o;for (t = Object(t); u--;) {
	        var f = r[u];if (i && f[2] ? f[1] !== t[f[0]] : !(f[0] in t)) return false;
	      }for (; ++u < o;) {
	        var f = r[u],
	            c = f[0],
	            a = t[c],
	            l = f[1];if (i && f[2]) {
	          if (a === T && !(c in t)) return false;
	        } else {
	          if (f = new qt(), e) var s = e(a, l, c, t, n, f);if (s === T ? !mn(l, a, e, 3, f) : !s) return false;
	        }
	      }return true;
	    }function On(t) {
	      return !Ze(t) || Iu && Iu in t ? false : (Fe(t) || C(t) ? zu : yt).test(ce(t));
	    }function kn(t) {
	      return typeof t == "function" ? t : null == t ? pu : (typeof t === "undefined" ? "undefined" : _typeof(t)) == "object" ? yi(t) ? Wn(t[0], t[1]) : Rn(t) : du(t);
	    }function En(t) {
	      t = null == t ? t : Object(t);var n,
	          r = [];for (n in t) {
	        r.push(n);
	      }return r;
	    }function Sn(t, n) {
	      return n > t;
	    }function In(t, n) {
	      var r = -1,
	          e = Ue(t) ? Array(t.length) : [];
	      return Ao(t, function (t, u, o) {
	        e[++r] = n(t, u, o);
	      }), e;
	    }function Rn(t) {
	      var n = Pr(t);return 1 == n.length && n[0][2] ? ue(n[0][0], n[0][1]) : function (r) {
	        return r === t || An(r, t, n);
	      };
	    }function Wn(t, n) {
	      return ne(t) && n === n && !Ze(n) ? ue(fe(t), n) : function (r) {
	        var e = uu(r, t);return e === T && e === n ? ou(r, t) : mn(n, e, T, 3);
	      };
	    }function Bn(t, n, r, e, o) {
	      if (t !== n) {
	        if (!yi(n) && !Ye(n)) var i = fu(n);u(i || n, function (u, f) {
	          if (i && (f = u, u = n[f]), Ze(u)) {
	            o || (o = new qt());var c = f,
	                a = o,
	                l = t[c],
	                s = n[c],
	                h = a.get(s);if (h) Jt(t, c, h);else {
	              var h = e ? e(l, s, c + "", t, n, a) : T,
	                  p = h === T;p && (h = s, yi(s) || Ye(s) ? yi(l) ? h = l : $e(l) ? h = lr(l) : (p = false, h = rn(s, true)) : Ve(s) || ze(s) ? ze(l) ? h = ru(l) : !Ze(l) || r && Fe(l) ? (p = false, h = rn(s, true)) : h = l : p = false), a.set(s, h), p && Bn(h, s, r, e, a), a["delete"](s), Jt(t, c, h);
	            }
	          } else c = e ? e(t[f], u, f + "", t, n, o) : T, c === T && (c = u), Jt(t, f, c);
	        });
	      }
	    }function Ln(t, n) {
	      var r = t.length;return r ? (n += 0 > n ? r : 0, Xr(n, r) ? t[n] : T) : void 0;
	    }function Mn(t, n, r) {
	      var e = -1;return n = l(n.length ? n : [pu], O(Fr())), t = In(t, function (t) {
	        return { a: l(n, function (n) {
	            return n(t);
	          }), b: ++e, c: t };
	      }), j(t, function (t, n) {
	        var e;t: {
	          e = -1;for (var u = t.a, o = n.a, i = u.length, f = r.length; ++e < i;) {
	            var c = fr(u[e], o[e]);if (c) {
	              e = e >= f ? c : c * ("desc" == r[e] ? -1 : 1);break t;
	            }
	          }e = t.b - n.b;
	        }return e;
	      });
	    }function Cn(t, n) {
	      return t = Object(t), h(n, function (n, r) {
	        return r in t && (n[r] = t[r]), n;
	      }, {});
	    }function zn(t, n) {
	      for (var r = -1, e = gn(t, fu, Bo), u = e.length, o = {}; ++r < u;) {
	        var i = e[r],
	            f = t[i];n(f, i) && (o[i] = f);
	      }return o;
	    }function Un(t) {
	      return function (n) {
	        return null == n ? T : n[t];
	      };
	    }function $n(t) {
	      return function (n) {
	        return vn(n, t);
	      };
	    }function Dn(t, n, r, e) {
	      var u = e ? y : d,
	          o = -1,
	          i = n.length,
	          f = t;for (t === n && (n = lr(n)), r && (f = l(t, O(r))); ++o < i;) {
	        for (var c = 0, a = n[o], a = r ? r(a) : a; -1 < (c = u(f, a, c, e));) {
	          f !== t && Vu.call(f, c, 1), Vu.call(t, c, 1);
	        }
	      }return t;
	    }function Fn(t, n) {
	      for (var r = t ? n.length : 0, e = r - 1; r--;) {
	        var u = n[r];if (r == e || u !== o) {
	          var o = u;if (Xr(u)) Vu.call(t, u, 1);else if (ne(u, t)) delete t[fe(u)];else {
	            var u = er(u),
	                i = ie(t, u);null != i && delete i[fe(ve(u))];
	          }
	        }
	      }
	    }function Nn(t, n) {
	      return t + Gu(ro() * (n - t + 1));
	    }function Pn(t, n) {
	      var r = "";if (!t || 1 > n || n > 9007199254740991) return r;do {
	        n % 2 && (r += t), (n = Gu(n / 2)) && (t += t);
	      } while (n);return r;
	    }function Zn(t, n, r, e) {
	      n = ne(n, t) ? [n] : er(n);for (var u = -1, o = n.length, i = o - 1, f = t; null != f && ++u < o;) {
	        var c = fe(n[u]);if (Ze(f)) {
	          var a = r;if (u != i) {
	            var l = f[c],
	                a = e ? e(l, c, f) : T;a === T && (a = null == l ? Xr(n[u + 1]) ? [] : {} : l);
	          }Yt(f, c, a);
	        }f = f[c];
	      }return t;
	    }function Tn(t, n, r) {
	      var e = -1,
	          u = t.length;for (0 > n && (n = -n > u ? 0 : u + n), r = r > u ? u : r, 0 > r && (r += u), u = n > r ? 0 : r - n >>> 0, n >>>= 0, r = Array(u); ++e < u;) {
	        r[e] = t[e + n];
	      }return r;
	    }function qn(t, n) {
	      var r;return Ao(t, function (t, e, u) {
	        return r = n(t, e, u), !r;
	      }), !!r;
	    }function Vn(t, n, r) {
	      var e = 0,
	          u = t ? t.length : e;if (typeof n == "number" && n === n && 2147483647 >= u) {
	        for (; u > e;) {
	          var o = e + u >>> 1,
	              i = t[o];null !== i && !Je(i) && (r ? n >= i : n > i) ? e = o + 1 : u = o;
	        }return u;
	      }
	      return Kn(t, n, pu, r);
	    }function Kn(t, n, r, e) {
	      n = r(n);for (var u = 0, o = t ? t.length : 0, i = n !== n, f = null === n, c = Je(n), a = n === T; o > u;) {
	        var l = Gu((u + o) / 2),
	            s = r(t[l]),
	            h = s !== T,
	            p = null === s,
	            _ = s === s,
	            v = Je(s);(i ? e || _ : a ? _ && (e || h) : f ? _ && h && (e || !p) : c ? _ && h && !p && (e || !v) : p || v ? 0 : e ? n >= s : n > s) ? u = l + 1 : o = l;
	      }return to(o, 4294967294);
	    }function Gn(t, n) {
	      for (var r = -1, e = t.length, u = 0, o = []; ++r < e;) {
	        var i = t[r],
	            f = n ? n(i) : i;if (!r || !Ce(f, c)) {
	          var c = f;o[u++] = 0 === i ? 0 : i;
	        }
	      }return o;
	    }function Jn(t) {
	      return typeof t == "number" ? t : Je(t) ? V : +t;
	    }function Yn(t) {
	      if (typeof t == "string") return t;
	      if (Je(t)) return mo ? mo.call(t) : "";var n = t + "";return "0" == n && 1 / t == -q ? "-0" : n;
	    }function Hn(t, n, r) {
	      var e = -1,
	          u = c,
	          o = t.length,
	          i = true,
	          f = [],
	          l = f;if (r) i = false, u = a;else if (o >= 200) {
	        if (u = n ? null : Io(t)) return D(u);i = false, u = E, l = new Zt();
	      } else l = n ? [] : f;t: for (; ++e < o;) {
	        var s = t[e],
	            h = n ? n(s) : s,
	            s = r || 0 !== s ? s : 0;if (i && h === h) {
	          for (var p = l.length; p--;) {
	            if (l[p] === h) continue t;
	          }n && l.push(h), f.push(s);
	        } else u(l, h, r) || (l !== f && l.push(h), f.push(s));
	      }return f;
	    }function Qn(t, n, r, e) {
	      for (var u = t.length, o = e ? u : -1; (e ? o-- : ++o < u) && n(t[o], o, t);) {}return r ? Tn(t, e ? 0 : o, e ? o + 1 : u) : Tn(t, e ? o + 1 : 0, e ? u : o);
	    }function Xn(t, n) {
	      var r = t;return r instanceof Ut && (r = r.value()), h(n, function (t, n) {
	        return n.func.apply(n.thisArg, s([t], n.args));
	      }, r);
	    }function tr(t, n, r) {
	      for (var e = -1, u = t.length; ++e < u;) {
	        var o = o ? s(fn(o, t[e], n, r), fn(t[e], o, n, r)) : t[e];
	      }return o && o.length ? Hn(o, n, r) : [];
	    }function nr(t, n, r) {
	      for (var e = -1, u = t.length, o = n.length, i = {}; ++e < u;) {
	        r(i, t[e], o > e ? n[e] : T);
	      }return i;
	    }function rr(t) {
	      return $e(t) ? t : [];
	    }function er(t) {
	      return yi(t) ? t : Co(t);
	    }function ur(t, n, r) {
	      var e = t.length;return r = r === T ? e : r, !n && r >= e ? t : Tn(t, n, r);
	    }function or(t, n) {
	      if (n) return t.slice();var r = new t.constructor(t.length);return t.copy(r), r;
	    }function ir(t) {
	      var n = new t.constructor(t.byteLength);return new Fu(n).set(new Fu(t)), n;
	    }function fr(t, n) {
	      if (t !== n) {
	        var r = t !== T,
	            e = null === t,
	            u = t === t,
	            o = Je(t),
	            i = n !== T,
	            f = null === n,
	            c = n === n,
	            a = Je(n);if (!f && !a && !o && t > n || o && i && c && !f && !a || e && i && c || !r && c || !u) return 1;if (!e && !o && !a && n > t || a && r && u && !e && !o || f && r && u || !i && u || !c) return -1;
	      }return 0;
	    }function cr(t, n, r, e) {
	      var u = -1,
	          o = t.length,
	          i = r.length,
	          f = -1,
	          c = n.length,
	          a = Xu(o - i, 0),
	          l = Array(c + a);for (e = !e; ++f < c;) {
	        l[f] = n[f];
	      }for (; ++u < i;) {
	        (e || o > u) && (l[r[u]] = t[u]);
	      }for (; a--;) {
	        l[f++] = t[u++];
	      }return l;
	    }function ar(t, n, r, e) {
	      var u = -1,
	          o = t.length,
	          i = -1,
	          f = r.length,
	          c = -1,
	          a = n.length,
	          l = Xu(o - f, 0),
	          s = Array(l + a);for (e = !e; ++u < l;) {
	        s[u] = t[u];
	      }for (l = u; ++c < a;) {
	        s[l + c] = n[c];
	      }for (; ++i < f;) {
	        (e || o > u) && (s[l + r[i]] = t[u++]);
	      }return s;
	    }function lr(t, n) {
	      var r = -1,
	          e = t.length;for (n || (n = Array(e)); ++r < e;) {
	        n[r] = t[r];
	      }return n;
	    }function sr(t, n, r, e) {
	      r || (r = {});for (var u = -1, o = n.length; ++u < o;) {
	        var i = n[u],
	            f = e ? e(r[i], t[i], i, r, t) : t[i];Yt(r, i, f);
	      }return r;
	    }function hr(t, n) {
	      return sr(t, Tr(t), n);
	    }function pr(t, n) {
	      return function (r, u) {
	        var o = yi(r) ? e : Qt,
	            i = n ? n() : {};return o(r, t, Fr(u), i);
	      };
	    }function _r(t) {
	      return Me(function (n, r) {
	        var e = -1,
	            u = r.length,
	            o = u > 1 ? r[u - 1] : T,
	            i = u > 2 ? r[2] : T,
	            o = t.length > 3 && typeof o == "function" ? (u--, o) : T;for (i && te(r[0], r[1], i) && (o = 3 > u ? T : o, u = 1), n = Object(n); ++e < u;) {
	          (i = r[e]) && t(n, i, e, o);
	        }return n;
	      });
	    }function vr(t, n) {
	      return function (r, e) {
	        if (null == r) return r;if (!Ue(r)) return t(r, e);for (var u = r.length, o = n ? u : -1, i = Object(r); (n ? o-- : ++o < u) && false !== e(i[o], o, i);) {}return r;
	      };
	    }function gr(t) {
	      return function (n, r, e) {
	        var u = -1,
	            o = Object(n);e = e(n);for (var i = e.length; i--;) {
	          var f = e[t ? i : ++u];if (false === r(o[f], f, o)) break;
	        }return n;
	      };
	    }function dr(t, n, r) {
	      function e() {
	        return (this && this !== Kt && this instanceof e ? o : t).apply(u ? r : this, arguments);
	      }var u = 1 & n,
	          o = xr(t);return e;
	    }function yr(t) {
	      return function (n) {
	        n = eu(n);var r = Wt.test(n) ? n.match(It) : T,
	            e = r ? r[0] : n.charAt(0);return n = r ? ur(r, 1).join("") : n.slice(1), e[t]() + n;
	      };
	    }function br(t) {
	      return function (n) {
	        return h(su(lu(n).replace(Et, "")), t, "");
	      };
	    }function xr(t) {
	      return function () {
	        var n = arguments;
	        switch (n.length) {case 0:
	            return new t();case 1:
	            return new t(n[0]);case 2:
	            return new t(n[0], n[1]);case 3:
	            return new t(n[0], n[1], n[2]);case 4:
	            return new t(n[0], n[1], n[2], n[3]);case 5:
	            return new t(n[0], n[1], n[2], n[3], n[4]);case 6:
	            return new t(n[0], n[1], n[2], n[3], n[4], n[5]);case 7:
	            return new t(n[0], n[1], n[2], n[3], n[4], n[5], n[6]);}var r = un(t.prototype),
	            n = t.apply(r, n);return Ze(n) ? n : r;
	      };
	    }function jr(t, n, e) {
	      function u() {
	        for (var i = arguments.length, f = Array(i), c = i, a = Dr(u); c--;) {
	          f[c] = arguments[c];
	        }return c = 3 > i && f[0] !== a && f[i - 1] !== a ? [] : $(f, a), i -= c.length, e > i ? Br(t, n, Ar, u.placeholder, T, f, c, T, T, e - i) : r(this && this !== Kt && this instanceof u ? o : t, this, f);
	      }var o = xr(t);return u;
	    }function wr(t) {
	      return function (n, r, e) {
	        var u = Object(n);if (r = Fr(r, 3), !Ue(n)) var o = iu(n);return e = t(o || n, function (t, n) {
	          return o && (n = t, t = u[n]), r(t, n, u);
	        }, e), e > -1 ? n[o ? o[e] : e] : T;
	      };
	    }function mr(t) {
	      return Me(function (n) {
	        n = sn(n, 1);var r = n.length,
	            e = r,
	            u = zt.prototype.thru;for (t && n.reverse(); e--;) {
	          var o = n[e];if (typeof o != "function") throw new Au("Expected a function");if (u && !i && "wrapper" == $r(o)) var i = new zt([], true);
	        }for (e = i ? e : r; ++e < r;) {
	          var o = n[e],
	              u = $r(o),
	              f = "wrapper" == u ? Ro(o) : T,
	              i = f && re(f[0]) && 424 == f[1] && !f[4].length && 1 == f[9] ? i[$r(f[0])].apply(i, f[3]) : 1 == o.length && re(o) ? i[u]() : i.thru(o);
	        }return function () {
	          var t = arguments,
	              e = t[0];if (i && 1 == t.length && yi(e) && e.length >= 200) return i.plant(e).value();for (var u = 0, t = r ? n[u].apply(this, t) : e; ++u < r;) {
	            t = n[u].call(this, t);
	          }return t;
	        };
	      });
	    }function Ar(t, n, r, e, u, o, i, f, c, a) {
	      function l() {
	        for (var d = arguments.length, y = Array(d), b = d; b--;) {
	          y[b] = arguments[b];
	        }if (_) {
	          var x,
	              j = Dr(l),
	              b = y.length;for (x = 0; b--;) {
	            y[b] === j && x++;
	          }
	        }if (e && (y = cr(y, e, u, _)), o && (y = ar(y, o, i, _)), d -= x, _ && a > d) return j = $(y, j), Br(t, n, Ar, l.placeholder, r, y, j, f, c, a - d);if (j = h ? r : this, b = p ? j[t] : t, d = y.length, f) {
	          x = y.length;for (var w = to(f.length, x), m = lr(y); w--;) {
	            var A = f[w];y[w] = Xr(A, x) ? m[A] : T;
	          }
	        } else v && d > 1 && y.reverse();return s && d > c && (y.length = c), this && this !== Kt && this instanceof l && (b = g || xr(b)), b.apply(j, y);
	      }var s = 128 & n,
	          h = 1 & n,
	          p = 2 & n,
	          _ = 24 & n,
	          v = 512 & n,
	          g = p ? T : xr(t);return l;
	    }function Or(t, n) {
	      return function (r, e) {
	        return jn(r, t, n(e));
	      };
	    }function kr(t) {
	      return function (n, r) {
	        var e;
	        if (n === T && r === T) return 0;if (n !== T && (e = n), r !== T) {
	          if (e === T) return r;typeof n == "string" || typeof r == "string" ? (n = Yn(n), r = Yn(r)) : (n = Jn(n), r = Jn(r)), e = t(n, r);
	        }return e;
	      };
	    }function Er(t) {
	      return Me(function (n) {
	        return n = 1 == n.length && yi(n[0]) ? l(n[0], O(Fr())) : l(sn(n, 1, Qr), O(Fr())), Me(function (e) {
	          var u = this;return t(n, function (t) {
	            return r(t, u, e);
	          });
	        });
	      });
	    }function Sr(t, n) {
	      n = n === T ? " " : Yn(n);var r = n.length;return 2 > r ? r ? Pn(n, t) : n : (r = Pn(n, Ku(t / N(n))), Wt.test(n) ? ur(r.match(It), 0, t).join("") : r.slice(0, t));
	    }function Ir(t, n, e, u) {
	      function o() {
	        for (var n = -1, c = arguments.length, a = -1, l = u.length, s = Array(l + c), h = this && this !== Kt && this instanceof o ? f : t; ++a < l;) {
	          s[a] = u[a];
	        }for (; c--;) {
	          s[a++] = arguments[++n];
	        }return r(h, i ? e : this, s);
	      }var i = 1 & n,
	          f = xr(t);return o;
	    }function Rr(t) {
	      return function (n, r, e) {
	        e && typeof e != "number" && te(n, r, e) && (r = e = T), n = nu(n), n = n === n ? n : 0, r === T ? (r = n, n = 0) : r = nu(r) || 0, e = e === T ? r > n ? 1 : -1 : nu(e) || 0;var u = -1;r = Xu(Ku((r - n) / (e || 1)), 0);for (var o = Array(r); r--;) {
	          o[t ? r : ++u] = n, n += e;
	        }return o;
	      };
	    }function Wr(t) {
	      return function (n, r) {
	        return typeof n == "string" && typeof r == "string" || (n = nu(n), r = nu(r)), t(n, r);
	      };
	    }function Br(t, n, r, e, u, o, i, f, c, a) {
	      var l = 8 & n,
	          s = l ? i : T;i = l ? T : i;var h = l ? o : T;return o = l ? T : o, n = (n | (l ? 32 : 64)) & ~(l ? 64 : 32), 4 & n || (n &= -4), n = [t, n, u, h, s, o, i, f, c, a], r = r.apply(T, n), re(t) && Mo(r, n), r.placeholder = e, r;
	    }function Lr(t) {
	      var n = wu[t];return function (t, r) {
	        if (t = nu(t), r = to(Xe(r), 292)) {
	          var e = (eu(t) + "e").split("e"),
	              e = n(e[0] + "e" + (+e[1] + r)),
	              e = (eu(e) + "e").split("e");return +(e[0] + "e" + (+e[1] - r));
	        }return n(t);
	      };
	    }function Mr(t) {
	      return function (n) {
	        var r = qr(n);return "[object Map]" == r ? U(n) : "[object Set]" == r ? F(n) : A(n, t(n));
	      };
	    }function Cr(t, n, r, e, u, o, i, f) {
	      var c = 2 & n;if (!c && typeof t != "function") throw new Au("Expected a function");var a = e ? e.length : 0;if (a || (n &= -97, e = u = T), i = i === T ? i : Xu(Xe(i), 0), f = f === T ? f : Xe(f), a -= u ? u.length : 0, 64 & n) {
	        var l = e,
	            s = u;e = u = T;
	      }var h = c ? T : Ro(t);return o = [t, n, r, e, u, l, s, o, i, f], h && (r = o[1], t = h[1], n = r | t, e = 128 == t && 8 == r || 128 == t && 256 == r && h[8] >= o[7].length || 384 == t && h[8] >= h[7].length && 8 == r, 131 > n || e) && (1 & t && (o[2] = h[2], n |= 1 & r ? 0 : 4), (r = h[3]) && (e = o[3], o[3] = e ? cr(e, r, h[4]) : r, o[4] = e ? $(o[3], "__lodash_placeholder__") : h[4]), (r = h[5]) && (e = o[5], o[5] = e ? ar(e, r, h[6]) : r, o[6] = e ? $(o[5], "__lodash_placeholder__") : h[6]), (r = h[7]) && (o[7] = r), 128 & t && (o[8] = null == o[8] ? h[8] : to(o[8], h[8])), null == o[9] && (o[9] = h[9]), o[0] = h[0], o[1] = n), t = o[0], n = o[1], r = o[2], e = o[3], u = o[4], f = o[9] = null == o[9] ? c ? 0 : t.length : Xu(o[9] - a, 0), !f && 24 & n && (n &= -25), (h ? So : Mo)(n && 1 != n ? 8 == n || 16 == n ? jr(t, n, f) : 32 != n && 33 != n || u.length ? Ar.apply(T, o) : Ir(t, n, r, e) : dr(t, n, r), o);
	    }function zr(t, n, r, e, u, o) {
	      var i = 2 & u,
	          f = t.length,
	          c = n.length;if (f != c && !(i && c > f)) return false;if (c = o.get(t)) return c == n;
	      var c = -1,
	          a = true,
	          l = 1 & u ? new Zt() : T;for (o.set(t, n); ++c < f;) {
	        var s = t[c],
	            h = n[c];if (e) var p = i ? e(h, s, c, n, t, o) : e(s, h, c, t, n, o);if (p !== T) {
	          if (p) continue;a = false;break;
	        }if (l) {
	          if (!_(n, function (t, n) {
	            return l.has(n) || s !== t && !r(s, t, e, u, o) ? void 0 : l.add(n);
	          })) {
	            a = false;break;
	          }
	        } else if (s !== h && !r(s, h, e, u, o)) {
	          a = false;break;
	        }
	      }return o["delete"](t), a;
	    }function Ur(t, n, r, e, u, o, i) {
	      switch (r) {case "[object DataView]":
	          if (t.byteLength != n.byteLength || t.byteOffset != n.byteOffset) break;t = t.buffer, n = n.buffer;case "[object ArrayBuffer]":
	          if (t.byteLength != n.byteLength || !e(new Fu(t), new Fu(n))) break;
	          return true;case "[object Boolean]":case "[object Date]":
	          return +t == +n;case "[object Error]":
	          return t.name == n.name && t.message == n.message;case "[object Number]":
	          return t != +t ? n != +n : t == +n;case "[object RegExp]":case "[object String]":
	          return t == n + "";case "[object Map]":
	          var f = U;case "[object Set]":
	          if (f || (f = D), t.size != n.size && !(2 & o)) break;return (r = i.get(t)) ? r == n : (o |= 1, i.set(t, n), zr(f(t), f(n), e, u, o, i));case "[object Symbol]":
	          if (wo) return wo.call(t) == wo.call(n);}return false;
	    }function $r(t) {
	      for (var n = t.name + "", r = _o[n], e = Wu.call(_o, n) ? r.length : 0; e--;) {
	        var u = r[e],
	            o = u.func;if (null == o || o == t) return u.name;
	      }return n;
	    }function Dr(t) {
	      return (Wu.call(Ot, "placeholder") ? Ot : t).placeholder;
	    }function Fr() {
	      var t = Ot.iteratee || _u,
	          t = t === _u ? kn : t;return arguments.length ? t(arguments[0], arguments[1]) : t;
	    }function Nr(t, n) {
	      var r = t.__data__,
	          e = typeof n === "undefined" ? "undefined" : _typeof(n);return ("string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== n : null === n) ? r[typeof n == "string" ? "string" : "hash"] : r.map;
	    }function Pr(t) {
	      for (var n = iu(t), r = n.length; r--;) {
	        var e = n[r],
	            u = t[e];n[r] = [e, u, u === u && !Ze(u)];
	      }return n;
	    }function Zr(t, n) {
	      var r = null == t ? T : t[n];return On(r) ? r : T;
	    }function Tr(t) {
	      return Pu(Object(t));
	    }function qr(t) {
	      return Mu.call(t);
	    }function Vr(t, n, r) {
	      n = ne(n, t) ? [n] : er(n);for (var e, u = -1, o = n.length; ++u < o;) {
	        var i = fe(n[u]);if (!(e = null != t && r(t, i))) break;t = t[i];
	      }return e ? e : (o = t ? t.length : 0, !!o && Pe(o) && Xr(i, o) && (yi(t) || Ge(t) || ze(t)));
	    }function Kr(t) {
	      var n = t.length,
	          r = t.constructor(n);return n && "string" == typeof t[0] && Wu.call(t, "index") && (r.index = t.index, r.input = t.input), r;
	    }function Gr(t) {
	      return typeof t.constructor != "function" || ee(t) ? {} : un(Ju(Object(t)));
	    }function Jr(r, e, u, o) {
	      var i = r.constructor;switch (e) {case "[object ArrayBuffer]":
	          return ir(r);case "[object Boolean]":case "[object Date]":
	          return new i(+r);case "[object DataView]":
	          return e = o ? ir(r.buffer) : r.buffer, new r.constructor(e, r.byteOffset, r.byteLength);case "[object Float32Array]":case "[object Float64Array]":case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":case "[object Uint16Array]":case "[object Uint32Array]":
	          return e = o ? ir(r.buffer) : r.buffer, new r.constructor(e, r.byteOffset, r.length);case "[object Map]":
	          return e = o ? u(U(r), true) : U(r), h(e, t, new r.constructor());case "[object Number]":case "[object String]":
	          return new i(r);case "[object RegExp]":
	          return e = new r.constructor(r.source, _t.exec(r)), e.lastIndex = r.lastIndex, e;case "[object Set]":
	          return e = o ? u(D(r), true) : D(r), h(e, n, new r.constructor());case "[object Symbol]":
	          return wo ? Object(wo.call(r)) : {};}
	    }function Yr(t) {
	      var n = t ? t.length : T;return Pe(n) && (yi(t) || Ge(t) || ze(t)) ? m(n, String) : null;
	    }function Hr(t) {
	      return yi(t) || ze(t);
	    }function Qr(t) {
	      return yi(t) && !(2 == t.length && !Fe(t[0]));
	    }function Xr(t, n) {
	      return n = null == n ? 9007199254740991 : n, !!n && (typeof t == "number" || xt.test(t)) && t > -1 && 0 == t % 1 && n > t;
	    }function te(t, n, r) {
	      if (!Ze(r)) return false;var e = typeof n === "undefined" ? "undefined" : _typeof(n);return ("number" == e ? Ue(r) && Xr(n, r.length) : "string" == e && n in r) ? Ce(r[n], t) : false;
	    }function ne(t, n) {
	      if (yi(t)) return false;var r = typeof t === "undefined" ? "undefined" : _typeof(t);return "number" == r || "symbol" == r || "boolean" == r || null == t || Je(t) ? true : ut.test(t) || !et.test(t) || null != n && t in Object(n);
	    }function re(t) {
	      var n = $r(t),
	          r = Ot[n];return typeof r == "function" && n in Ut.prototype ? t === r ? true : (n = Ro(r), !!n && t === n[0]) : false;
	    }function ee(t) {
	      var n = t && t.constructor;return t === (typeof n == "function" && n.prototype || ku);
	    }function ue(t, n) {
	      return function (r) {
	        return null == r ? false : r[t] === n && (n !== T || t in Object(r));
	      };
	    }function oe(t, n, r, e, u, o) {
	      return Ze(t) && Ze(n) && Bn(t, n, T, oe, o.set(n, t)), t;
	    }function ie(t, n) {
	      return 1 == n.length ? t : vn(t, Tn(n, 0, -1));
	    }function fe(t) {
	      if (typeof t == "string" || Je(t)) return t;var n = t + "";return "0" == n && 1 / t == -q ? "-0" : n;
	    }function ce(t) {
	      if (null != t) {
	        try {
	          return Ru.call(t);
	        } catch (n) {}return t + "";
	      }return "";
	    }function ae(t) {
	      if (t instanceof Ut) return t.clone();var n = new zt(t.__wrapped__, t.__chain__);return n.__actions__ = lr(t.__actions__), n.__index__ = t.__index__, n.__values__ = t.__values__, n;
	    }function le(t, n, r) {
	      var e = t ? t.length : 0;return e ? (n = r || n === T ? 1 : Xe(n), Tn(t, 0 > n ? 0 : n, e)) : [];
	    }function se(t, n, r) {
	      var e = t ? t.length : 0;return e ? (n = r || n === T ? 1 : Xe(n), n = e - n, Tn(t, 0, 0 > n ? 0 : n)) : [];
	    }function he(t, n, r) {
	      var e = t ? t.length : 0;return e ? (r = null == r ? 0 : Xe(r), 0 > r && (r = Xu(e + r, 0)), g(t, Fr(n, 3), r)) : -1;
	    }function pe(t, n, r) {
	      var e = t ? t.length : 0;if (!e) return -1;var u = e - 1;return r !== T && (u = Xe(r), u = 0 > r ? Xu(e + u, 0) : to(u, e - 1)), g(t, Fr(n, 3), u, true);
	    }function _e(t) {
	      return t && t.length ? t[0] : T;
	    }function ve(t) {
	      var n = t ? t.length : 0;return n ? t[n - 1] : T;
	    }function ge(t, n) {
	      return t && t.length && n && n.length ? Dn(t, n) : t;
	    }function de(t) {
	      return t ? uo.call(t) : t;
	    }function ye(t) {
	      if (!t || !t.length) return [];var n = 0;return t = f(t, function (t) {
	        return $e(t) ? (n = Xu(t.length, n), true) : void 0;
	      }), m(n, function (n) {
	        return l(t, Un(n));
	      });
	    }function be(t, n) {
	      if (!t || !t.length) return [];var e = ye(t);return null == n ? e : l(e, function (t) {
	        return r(n, T, t);
	      });
	    }function xe(t) {
	      return t = Ot(t), t.__chain__ = true, t;
	    }function je(t, n) {
	      return n(t);
	    }function we() {
	      return this;
	    }function me(t, n) {
	      return (yi(t) ? u : Ao)(t, Fr(n, 3));
	    }function Ae(t, n) {
	      return (yi(t) ? o : Oo)(t, Fr(n, 3));
	    }function Oe(t, n) {
	      return (yi(t) ? l : In)(t, Fr(n, 3));
	    }function ke(t, n, r) {
	      var e = -1,
	          u = He(t),
	          o = u.length,
	          i = o - 1;for (n = (r ? te(t, n, r) : n === T) ? 1 : nn(Xe(n), 0, o); ++e < n;) {
	        t = Nn(e, i), r = u[t], u[t] = u[e], u[e] = r;
	      }return u.length = n, u;
	    }function Ee() {
	      return xu.now();
	    }function Se(t, n, r) {
	      return n = r ? T : n, n = t && null == n ? t.length : n, Cr(t, 128, T, T, T, T, n);
	    }function Ie(t, n) {
	      var r;if (typeof n != "function") throw new Au("Expected a function");return t = Xe(t), function () {
	        return 0 < --t && (r = n.apply(this, arguments)), 1 >= t && (n = T), r;
	      };
	    }function Re(t, n, r) {
	      return n = r ? T : n, t = Cr(t, 8, T, T, T, T, T, n), t.placeholder = Re.placeholder, t;
	    }function We(t, n, r) {
	      return n = r ? T : n, t = Cr(t, 16, T, T, T, T, T, n), t.placeholder = We.placeholder, t;
	    }function Be(t, n, r) {
	      function e(n) {
	        var r = c,
	            e = a;return c = a = T, _ = n, s = t.apply(e, r);
	      }function u(t) {
	        var r = t - p;return t -= _, p === T || r >= n || 0 > r || g && t >= l;
	      }function o() {
	        var t = Ee();if (u(t)) return i(t);var r;r = t - _, t = n - (t - p), r = g ? to(t, l - r) : t, h = At(o, r);
	      }function i(t) {
	        return h = T, d && c ? e(t) : (c = a = T, s);
	      }function f() {
	        var t = Ee(),
	            r = u(t);if (c = arguments, a = this, p = t, r) {
	          if (h === T) return _ = t = p, h = At(o, n), v ? e(t) : s;if (g) return h = At(o, n), e(p);
	        }return h === T && (h = At(o, n)), s;
	      }var c,
	          a,
	          l,
	          s,
	          h,
	          p,
	          _ = 0,
	          v = false,
	          g = false,
	          d = true;if (typeof t != "function") throw new Au("Expected a function");return n = nu(n) || 0, Ze(r) && (v = !!r.leading, l = (g = "maxWait" in r) ? Xu(nu(r.maxWait) || 0, n) : l, d = "trailing" in r ? !!r.trailing : d), f.cancel = function () {
	        _ = 0, c = p = a = h = T;
	      }, f.flush = function () {
	        return h === T ? s : i(Ee());
	      }, f;
	    }function Le(t, n) {
	      function r() {
	        var e = arguments,
	            u = n ? n.apply(this, e) : e[0],
	            o = r.cache;return o.has(u) ? o.get(u) : (e = t.apply(this, e), r.cache = o.set(u, e), e);
	      }if (typeof t != "function" || n && typeof n != "function") throw new Au("Expected a function");return r.cache = new (Le.Cache || Pt)(), r;
	    }function Me(t, n) {
	      if (typeof t != "function") throw new Au("Expected a function");return n = Xu(n === T ? t.length - 1 : Xe(n), 0), function () {
	        for (var e = arguments, u = -1, o = Xu(e.length - n, 0), i = Array(o); ++u < o;) {
	          i[u] = e[n + u];
	        }switch (n) {case 0:
	            return t.call(this, i);case 1:
	            return t.call(this, e[0], i);case 2:
	            return t.call(this, e[0], e[1], i);}for (o = Array(n + 1), u = -1; ++u < n;) {
	          o[u] = e[u];
	        }return o[n] = i, r(t, this, o);
	      };
	    }function Ce(t, n) {
	      return t === n || t !== t && n !== n;
	    }function ze(t) {
	      return $e(t) && Wu.call(t, "callee") && (!qu.call(t, "callee") || "[object Arguments]" == Mu.call(t));
	    }function Ue(t) {
	      return null != t && Pe(Wo(t)) && !Fe(t);
	    }function $e(t) {
	      return Te(t) && Ue(t);
	    }function De(t) {
	      return Te(t) ? "[object Error]" == Mu.call(t) || typeof t.message == "string" && typeof t.name == "string" : false;
	    }function Fe(t) {
	      return t = Ze(t) ? Mu.call(t) : "", "[object Function]" == t || "[object GeneratorFunction]" == t;
	    }function Ne(t) {
	      return typeof t == "number" && t == Xe(t);
	    }function Pe(t) {
	      return typeof t == "number" && t > -1 && 0 == t % 1 && 9007199254740991 >= t;
	    }function Ze(t) {
	      var n = typeof t === "undefined" ? "undefined" : _typeof(t);return !!t && ("object" == n || "function" == n);
	    }function Te(t) {
	      return !!t && (typeof t === "undefined" ? "undefined" : _typeof(t)) == "object";
	    }function qe(t) {
	      return typeof t == "number" || Te(t) && "[object Number]" == Mu.call(t);
	    }function Ve(t) {
	      return !Te(t) || "[object Object]" != Mu.call(t) || C(t) ? false : (t = Ju(Object(t)), null === t ? true : (t = Wu.call(t, "constructor") && t.constructor, typeof t == "function" && t instanceof t && Ru.call(t) == Lu));
	    }function Ke(t) {
	      return Ze(t) && "[object RegExp]" == Mu.call(t);
	    }function Ge(t) {
	      return typeof t == "string" || !yi(t) && Te(t) && "[object String]" == Mu.call(t);
	    }function Je(t) {
	      return (typeof t === "undefined" ? "undefined" : _typeof(t)) == "symbol" || Te(t) && "[object Symbol]" == Mu.call(t);
	    }function Ye(t) {
	      return Te(t) && Pe(t.length) && !!Mt[Mu.call(t)];
	    }function He(t) {
	      if (!t) return [];
	      if (Ue(t)) return Ge(t) ? t.match(It) : lr(t);if (Zu && t[Zu]) return z(t[Zu]());var n = qr(t);return ("[object Map]" == n ? U : "[object Set]" == n ? D : cu)(t);
	    }function Qe(t) {
	      return t ? (t = nu(t), t === q || t === -q ? 1.7976931348623157e308 * (0 > t ? -1 : 1) : t === t ? t : 0) : 0 === t ? t : 0;
	    }function Xe(t) {
	      t = Qe(t);var n = t % 1;return t === t ? n ? t - n : t : 0;
	    }function tu(t) {
	      return t ? nn(Xe(t), 0, 4294967295) : 0;
	    }function nu(t) {
	      if (typeof t == "number") return t;if (Je(t)) return V;if (Ze(t) && (t = Fe(t.valueOf) ? t.valueOf() : t, t = Ze(t) ? t + "" : t), typeof t != "string") return 0 === t ? t : +t;
	      t = t.replace(ct, "");var n = dt.test(t);return n || bt.test(t) ? Nt(t.slice(2), n ? 2 : 8) : gt.test(t) ? V : +t;
	    }function ru(t) {
	      return sr(t, fu(t));
	    }function eu(t) {
	      return null == t ? "" : Yn(t);
	    }function uu(t, n, r) {
	      return t = null == t ? T : vn(t, n), t === T ? r : t;
	    }function ou(t, n) {
	      return null != t && Vr(t, n, bn);
	    }function iu(t) {
	      var n = ee(t);if (!n && !Ue(t)) return Qu(Object(t));var r,
	          e = Yr(t),
	          u = !!e,
	          e = e || [],
	          o = e.length;for (r in t) {
	        !yn(t, r) || u && ("length" == r || Xr(r, o)) || n && "constructor" == r || e.push(r);
	      }return e;
	    }function fu(t) {
	      for (var n = -1, r = ee(t), e = En(t), u = e.length, o = Yr(t), i = !!o, o = o || [], f = o.length; ++n < u;) {
	        var c = e[n];i && ("length" == c || Xr(c, f)) || "constructor" == c && (r || !Wu.call(t, c)) || o.push(c);
	      }return o;
	    }function cu(t) {
	      return t ? k(t, iu(t)) : [];
	    }function au(t) {
	      return qi(eu(t).toLowerCase());
	    }function lu(t) {
	      return (t = eu(t)) && t.replace(jt, W).replace(St, "");
	    }function su(t, n, r) {
	      return t = eu(t), n = r ? T : n, n === T && (n = Bt.test(t) ? Rt : st), t.match(n) || [];
	    }function hu(t) {
	      return function () {
	        return t;
	      };
	    }function pu(t) {
	      return t;
	    }function _u(t) {
	      return kn(typeof t == "function" ? t : rn(t, true));
	    }function vu(t, n, r) {
	      var e = iu(n),
	          o = _n(n, e);null != r || Ze(n) && (o.length || !e.length) || (r = n, n = t, t = this, o = _n(n, iu(n)));var i = !(Ze(r) && "chain" in r && !r.chain),
	          f = Fe(t);return u(o, function (r) {
	        var e = n[r];t[r] = e, f && (t.prototype[r] = function () {
	          var n = this.__chain__;if (i || n) {
	            var r = t(this.__wrapped__);return (r.__actions__ = lr(this.__actions__)).push({ func: e, args: arguments, thisArg: t }), r.__chain__ = n, r;
	          }return e.apply(t, s([this.value()], arguments));
	        });
	      }), t;
	    }function gu() {}function du(t) {
	      return ne(t) ? Un(fe(t)) : $n(t);
	    }function yu() {
	      return [];
	    }function bu() {
	      return false;
	    }R = R ? Gt.defaults({}, R, Gt.pick(Kt, Lt)) : Kt;var xu = R.Date,
	        ju = R.Error,
	        wu = R.Math,
	        mu = R.RegExp,
	        Au = R.TypeError,
	        Ou = R.Array.prototype,
	        ku = R.Object.prototype,
	        Eu = R.String.prototype,
	        Su = R["__core-js_shared__"],
	        Iu = function () {
	      var t = /[^.]+$/.exec(Su && Su.keys && Su.keys.IE_PROTO || "");return t ? "Symbol(src)_1." + t : "";
	    }(),
	        Ru = R.Function.prototype.toString,
	        Wu = ku.hasOwnProperty,
	        Bu = 0,
	        Lu = Ru.call(Object),
	        Mu = ku.toString,
	        Cu = Kt._,
	        zu = mu("^" + Ru.call(Wu).replace(it, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
	        Uu = Tt ? R.Buffer : T,
	        $u = R.Reflect,
	        Du = R.Symbol,
	        Fu = R.Uint8Array,
	        Nu = $u ? $u.f : T,
	        Pu = Object.getOwnPropertySymbols,
	        Zu = _typeof(Zu = Du && Du.iterator) == "symbol" ? Zu : T,
	        Tu = Object.create,
	        qu = ku.propertyIsEnumerable,
	        Vu = Ou.splice,
	        Ku = wu.ceil,
	        Gu = wu.floor,
	        Ju = Object.getPrototypeOf,
	        Yu = R.isFinite,
	        Hu = Ou.join,
	        Qu = Object.keys,
	        Xu = wu.max,
	        to = wu.min,
	        no = R.parseInt,
	        ro = wu.random,
	        eo = Eu.replace,
	        uo = Ou.reverse,
	        oo = Eu.split,
	        io = Zr(R, "DataView"),
	        fo = Zr(R, "Map"),
	        co = Zr(R, "Promise"),
	        ao = Zr(R, "Set"),
	        lo = Zr(R, "WeakMap"),
	        so = Zr(Object, "create"),
	        ho = lo && new lo(),
	        po = !qu.call({
	      valueOf: 1 }, "valueOf"),
	        _o = {},
	        vo = ce(io),
	        go = ce(fo),
	        yo = ce(co),
	        bo = ce(ao),
	        xo = ce(lo),
	        jo = Du ? Du.prototype : T,
	        wo = jo ? jo.valueOf : T,
	        mo = jo ? jo.toString : T;Ot.templateSettings = { escape: tt, evaluate: nt, interpolate: rt, variable: "", imports: { _: Ot } }, Ot.prototype = kt.prototype, Ot.prototype.constructor = Ot, zt.prototype = un(kt.prototype), zt.prototype.constructor = zt, Ut.prototype = un(kt.prototype), Ut.prototype.constructor = Ut, $t.prototype.clear = function () {
	      this.__data__ = so ? so(null) : {};
	    }, $t.prototype["delete"] = function (t) {
	      return this.has(t) && delete this.__data__[t];
	    }, $t.prototype.get = function (t) {
	      var n = this.__data__;return so ? (t = n[t], "__lodash_hash_undefined__" === t ? T : t) : Wu.call(n, t) ? n[t] : T;
	    }, $t.prototype.has = function (t) {
	      var n = this.__data__;return so ? n[t] !== T : Wu.call(n, t);
	    }, $t.prototype.set = function (t, n) {
	      return this.__data__[t] = so && n === T ? "__lodash_hash_undefined__" : n, this;
	    }, Dt.prototype.clear = function () {
	      this.__data__ = [];
	    }, Dt.prototype["delete"] = function (t) {
	      var n = this.__data__;return t = Ht(n, t), 0 > t ? false : (t == n.length - 1 ? n.pop() : Vu.call(n, t, 1), true);
	    }, Dt.prototype.get = function (t) {
	      var n = this.__data__;return t = Ht(n, t), 0 > t ? T : n[t][1];
	    }, Dt.prototype.has = function (t) {
	      return -1 < Ht(this.__data__, t);
	    }, Dt.prototype.set = function (t, n) {
	      var r = this.__data__,
	          e = Ht(r, t);return 0 > e ? r.push([t, n]) : r[e][1] = n, this;
	    }, Pt.prototype.clear = function () {
	      this.__data__ = { hash: new $t(), map: new (fo || Dt)(), string: new $t() };
	    }, Pt.prototype["delete"] = function (t) {
	      return Nr(this, t)["delete"](t);
	    }, Pt.prototype.get = function (t) {
	      return Nr(this, t).get(t);
	    }, Pt.prototype.has = function (t) {
	      return Nr(this, t).has(t);
	    }, Pt.prototype.set = function (t, n) {
	      return Nr(this, t).set(t, n), this;
	    }, Zt.prototype.add = Zt.prototype.push = function (t) {
	      return this.__data__.set(t, "__lodash_hash_undefined__"), this;
	    }, Zt.prototype.has = function (t) {
	      return this.__data__.has(t);
	    }, qt.prototype.clear = function () {
	      this.__data__ = new Dt();
	    }, qt.prototype["delete"] = function (t) {
	      return this.__data__["delete"](t);
	    }, qt.prototype.get = function (t) {
	      return this.__data__.get(t);
	    }, qt.prototype.has = function (t) {
	      return this.__data__.has(t);
	    }, qt.prototype.set = function (t, n) {
	      var r = this.__data__;return r instanceof Dt && 200 == r.__data__.length && (r = this.__data__ = new Pt(r.__data__)), r.set(t, n), this;
	    };var Ao = vr(hn),
	        Oo = vr(pn, true),
	        ko = gr(),
	        Eo = gr(true);Nu && !qu.call({ valueOf: 1 }, "valueOf") && (En = function En(t) {
	      return z(Nu(t));
	    });var So = ho ? function (t, n) {
	      return ho.set(t, n), t;
	    } : pu,
	        Io = ao && 1 / D(new ao([, -0]))[1] == q ? function (t) {
	      return new ao(t);
	    } : gu,
	        Ro = ho ? function (t) {
	      return ho.get(t);
	    } : gu,
	        Wo = Un("length");Pu || (Tr = yu);var Bo = Pu ? function (t) {
	      for (var n = []; t;) {
	        s(n, Tr(t)), t = Ju(Object(t));
	      }return n;
	    } : Tr;(io && "[object DataView]" != qr(new io(new ArrayBuffer(1))) || fo && "[object Map]" != qr(new fo()) || co && "[object Promise]" != qr(co.resolve()) || ao && "[object Set]" != qr(new ao()) || lo && "[object WeakMap]" != qr(new lo())) && (qr = function qr(t) {
	      var n = Mu.call(t);if (t = (t = "[object Object]" == n ? t.constructor : T) ? ce(t) : T) switch (t) {case vo:
	          return "[object DataView]";case go:
	          return "[object Map]";case yo:
	          return "[object Promise]";case bo:
	          return "[object Set]";case xo:
	          return "[object WeakMap]";}return n;
	    });var Lo = Su ? Fe : bu,
	        Mo = function () {
	      var t = 0,
	          n = 0;return function (r, e) {
	        var u = Ee(),
	            o = 16 - (u - n);if (n = u, o > 0) {
	          if (150 <= ++t) return r;
	        } else t = 0;return So(r, e);
	      };
	    }(),
	        Co = Le(function (t) {
	      var n = [];return eu(t).replace(ot, function (t, r, e, u) {
	        n.push(e ? u.replace(ht, "$1") : r || t);
	      }), n;
	    }),
	        zo = Me(function (t, n) {
	      return $e(t) ? fn(t, sn(n, 1, $e, true)) : [];
	    }),
	        Uo = Me(function (t, n) {
	      var r = ve(n);return $e(r) && (r = T), $e(t) ? fn(t, sn(n, 1, $e, true), Fr(r)) : [];
	    }),
	        $o = Me(function (t, n) {
	      var r = ve(n);return $e(r) && (r = T), $e(t) ? fn(t, sn(n, 1, $e, true), T, r) : [];
	    }),
	        Do = Me(function (t) {
	      var n = l(t, rr);return n.length && n[0] === t[0] ? xn(n) : [];
	    }),
	        Fo = Me(function (t) {
	      var n = ve(t),
	          r = l(t, rr);return n === ve(r) ? n = T : r.pop(), r.length && r[0] === t[0] ? xn(r, Fr(n)) : [];
	    }),
	        No = Me(function (t) {
	      var n = ve(t),
	          r = l(t, rr);return n === ve(r) ? n = T : r.pop(), r.length && r[0] === t[0] ? xn(r, T, n) : [];
	    }),
	        Po = Me(ge),
	        Zo = Me(function (t, n) {
	      n = sn(n, 1);var r = t ? t.length : 0,
	          e = tn(t, n);return Fn(t, l(n, function (t) {
	        return Xr(t, r) ? +t : t;
	      }).sort(fr)), e;
	    }),
	        To = Me(function (t) {
	      return Hn(sn(t, 1, $e, true));
	    }),
	        qo = Me(function (t) {
	      var n = ve(t);return $e(n) && (n = T), Hn(sn(t, 1, $e, true), Fr(n));
	    }),
	        Vo = Me(function (t) {
	      var n = ve(t);return $e(n) && (n = T), Hn(sn(t, 1, $e, true), T, n);
	    }),
	        Ko = Me(function (t, n) {
	      return $e(t) ? fn(t, n) : [];
	    }),
	        Go = Me(function (t) {
	      return tr(f(t, $e));
	    }),
	        Jo = Me(function (t) {
	      var n = ve(t);return $e(n) && (n = T), tr(f(t, $e), Fr(n));
	    }),
	        Yo = Me(function (t) {
	      var n = ve(t);return $e(n) && (n = T), tr(f(t, $e), T, n);
	    }),
	        Ho = Me(ye),
	        Qo = Me(function (t) {
	      var n = t.length,
	          n = n > 1 ? t[n - 1] : T,
	          n = typeof n == "function" ? (t.pop(), n) : T;return be(t, n);
	    }),
	        Xo = Me(function (t) {
	      function n(n) {
	        return tn(n, t);
	      }t = sn(t, 1);var r = t.length,
	          e = r ? t[0] : 0,
	          u = this.__wrapped__;return !(r > 1 || this.__actions__.length) && u instanceof Ut && Xr(e) ? (u = u.slice(e, +e + (r ? 1 : 0)), u.__actions__.push({ func: je, args: [n], thisArg: T }), new zt(u, this.__chain__).thru(function (t) {
	        return r && !t.length && t.push(T), t;
	      })) : this.thru(n);
	    }),
	        ti = pr(function (t, n, r) {
	      Wu.call(t, r) ? ++t[r] : t[r] = 1;
	    }),
	        ni = wr(he),
	        ri = wr(pe),
	        ei = pr(function (t, n, r) {
	      Wu.call(t, r) ? t[r].push(n) : t[r] = [n];
	    }),
	        ui = Me(function (t, n, e) {
	      var u = -1,
	          o = typeof n == "function",
	          i = ne(n),
	          f = Ue(t) ? Array(t.length) : [];return Ao(t, function (t) {
	        var c = o ? n : i && null != t ? t[n] : T;f[++u] = c ? r(c, t, e) : wn(t, n, e);
	      }), f;
	    }),
	        oi = pr(function (t, n, r) {
	      t[r] = n;
	    }),
	        ii = pr(function (t, n, r) {
	      t[r ? 0 : 1].push(n);
	    }, function () {
	      return [[], []];
	    }),
	        fi = Me(function (t, n) {
	      if (null == t) return [];var r = n.length;return r > 1 && te(t, n[0], n[1]) ? n = [] : r > 2 && te(n[0], n[1], n[2]) && (n = [n[0]]), n = 1 == n.length && yi(n[0]) ? n[0] : sn(n, 1, Qr), Mn(t, n, []);
	    }),
	        ci = Me(function (t, n, r) {
	      var e = 1;if (r.length) var u = $(r, Dr(ci)),
	          e = 32 | e;return Cr(t, e, n, r, u);
	    }),
	        ai = Me(function (t, n, r) {
	      var e = 3;if (r.length) var u = $(r, Dr(ai)),
	          e = 32 | e;return Cr(n, e, t, r, u);
	    }),
	        li = Me(function (t, n) {
	      return on(t, 1, n);
	    }),
	        si = Me(function (t, n, r) {
	      return on(t, nu(n) || 0, r);
	    });Le.Cache = Pt;var hi = Me(function (t, n) {
	      n = 1 == n.length && yi(n[0]) ? l(n[0], O(Fr())) : l(sn(n, 1, Qr), O(Fr()));var e = n.length;return Me(function (u) {
	        for (var o = -1, i = to(u.length, e); ++o < i;) {
	          u[o] = n[o].call(this, u[o]);
	        }return r(t, this, u);
	      });
	    }),
	        pi = Me(function (t, n) {
	      var r = $(n, Dr(pi));return Cr(t, 32, T, n, r);
	    }),
	        _i = Me(function (t, n) {
	      var r = $(n, Dr(_i));return Cr(t, 64, T, n, r);
	    }),
	        vi = Me(function (t, n) {
	      return Cr(t, 256, T, T, T, sn(n, 1));
	    }),
	        gi = Wr(dn),
	        di = Wr(function (t, n) {
	      return t >= n;
	    }),
	        yi = Array.isArray,
	        bi = Uu ? function (t) {
	      return t instanceof Uu;
	    } : bu,
	        xi = Wr(Sn),
	        ji = Wr(function (t, n) {
	      return n >= t;
	    }),
	        wi = _r(function (t, n) {
	      if (po || ee(n) || Ue(n)) sr(n, iu(n), t);else for (var r in n) {
	        Wu.call(n, r) && Yt(t, r, n[r]);
	      }
	    }),
	        mi = _r(function (t, n) {
	      if (po || ee(n) || Ue(n)) sr(n, fu(n), t);else for (var r in n) {
	        Yt(t, r, n[r]);
	      }
	    }),
	        Ai = _r(function (t, n, r, e) {
	      sr(n, fu(n), t, e);
	    }),
	        Oi = _r(function (t, n, r, e) {
	      sr(n, iu(n), t, e);
	    }),
	        ki = Me(function (t, n) {
	      return tn(t, sn(n, 1));
	    }),
	        Ei = Me(function (t) {
	      return t.push(T, Vt), r(Ai, T, t);
	    }),
	        Si = Me(function (t) {
	      return t.push(T, oe), r(Li, T, t);
	    }),
	        Ii = Or(function (t, n, r) {
	      t[n] = r;
	    }, hu(pu)),
	        Ri = Or(function (t, n, r) {
	      Wu.call(t, n) ? t[n].push(r) : t[n] = [r];
	    }, Fr),
	        Wi = Me(wn),
	        Bi = _r(function (t, n, r) {
	      Bn(t, n, r);
	    }),
	        Li = _r(function (t, n, r, e) {
	      Bn(t, n, r, e);
	    }),
	        Mi = Me(function (t, n) {
	      return null == t ? {} : (n = l(sn(n, 1), fe), Cn(t, fn(gn(t, fu, Bo), n)));
	    }),
	        Ci = Me(function (t, n) {
	      return null == t ? {} : Cn(t, l(sn(n, 1), fe));
	    }),
	        zi = Mr(iu),
	        Ui = Mr(fu),
	        $i = br(function (t, n, r) {
	      return n = n.toLowerCase(), t + (r ? au(n) : n);
	    }),
	        Di = br(function (t, n, r) {
	      return t + (r ? "-" : "") + n.toLowerCase();
	    }),
	        Fi = br(function (t, n, r) {
	      return t + (r ? " " : "") + n.toLowerCase();
	    }),
	        Ni = yr("toLowerCase"),
	        Pi = br(function (t, n, r) {
	      return t + (r ? "_" : "") + n.toLowerCase();
	    }),
	        Zi = br(function (t, n, r) {
	      return t + (r ? " " : "") + qi(n);
	    }),
	        Ti = br(function (t, n, r) {
	      return t + (r ? " " : "") + n.toUpperCase();
	    }),
	        qi = yr("toUpperCase"),
	        Vi = Me(function (t, n) {
	      try {
	        return r(t, T, n);
	      } catch (e) {
	        return De(e) ? e : new ju(e);
	      }
	    }),
	        Ki = Me(function (t, n) {
	      return u(sn(n, 1), function (n) {
	        n = fe(n), t[n] = ci(t[n], t);
	      }), t;
	    }),
	        Gi = mr(),
	        Ji = mr(true),
	        Yi = Me(function (t, n) {
	      return function (r) {
	        return wn(r, t, n);
	      };
	    }),
	        Hi = Me(function (t, n) {
	      return function (r) {
	        return wn(t, r, n);
	      };
	    }),
	        Qi = Er(l),
	        Xi = Er(i),
	        tf = Er(_),
	        nf = Rr(),
	        rf = Rr(true),
	        ef = kr(function (t, n) {
	      return t + n;
	    }),
	        uf = Lr("ceil"),
	        of = kr(function (t, n) {
	      return t / n;
	    }),
	        ff = Lr("floor"),
	        cf = kr(function (t, n) {
	      return t * n;
	    }),
	        af = Lr("round"),
	        lf = kr(function (t, n) {
	      return t - n;
	    });return Ot.after = function (t, n) {
	      if (typeof n != "function") throw new Au("Expected a function");
	      return t = Xe(t), function () {
	        return 1 > --t ? n.apply(this, arguments) : void 0;
	      };
	    }, Ot.ary = Se, Ot.assign = wi, Ot.assignIn = mi, Ot.assignInWith = Ai, Ot.assignWith = Oi, Ot.at = ki, Ot.before = Ie, Ot.bind = ci, Ot.bindAll = Ki, Ot.bindKey = ai, Ot.castArray = function () {
	      if (!arguments.length) return [];var t = arguments[0];return yi(t) ? t : [t];
	    }, Ot.chain = xe, Ot.chunk = function (t, n, r) {
	      if (n = (r ? te(t, n, r) : n === T) ? 1 : Xu(Xe(n), 0), r = t ? t.length : 0, !r || 1 > n) return [];for (var e = 0, u = 0, o = Array(Ku(r / n)); r > e;) {
	        o[u++] = Tn(t, e, e += n);
	      }return o;
	    }, Ot.compact = function (t) {
	      for (var n = -1, r = t ? t.length : 0, e = 0, u = []; ++n < r;) {
	        var o = t[n];o && (u[e++] = o);
	      }return u;
	    }, Ot.concat = function () {
	      for (var t = arguments.length, n = Array(t ? t - 1 : 0), r = arguments[0], e = t; e--;) {
	        n[e - 1] = arguments[e];
	      }return t ? s(yi(r) ? lr(r) : [r], sn(n, 1)) : [];
	    }, Ot.cond = function (t) {
	      var n = t ? t.length : 0,
	          e = Fr();return t = n ? l(t, function (t) {
	        if ("function" != typeof t[1]) throw new Au("Expected a function");return [e(t[0]), t[1]];
	      }) : [], Me(function (e) {
	        for (var u = -1; ++u < n;) {
	          var o = t[u];if (r(o[0], this, e)) return r(o[1], this, e);
	        }
	      });
	    }, Ot.conforms = function (t) {
	      return en(rn(t, true));
	    }, Ot.constant = hu, Ot.countBy = ti, Ot.create = function (t, n) {
	      var r = un(t);return n ? Xt(r, n) : r;
	    }, Ot.curry = Re, Ot.curryRight = We, Ot.debounce = Be, Ot.defaults = Ei, Ot.defaultsDeep = Si, Ot.defer = li, Ot.delay = si, Ot.difference = zo, Ot.differenceBy = Uo, Ot.differenceWith = $o, Ot.drop = le, Ot.dropRight = se, Ot.dropRightWhile = function (t, n) {
	      return t && t.length ? Qn(t, Fr(n, 3), true, true) : [];
	    }, Ot.dropWhile = function (t, n) {
	      return t && t.length ? Qn(t, Fr(n, 3), true) : [];
	    }, Ot.fill = function (t, n, r, e) {
	      var u = t ? t.length : 0;if (!u) return [];for (r && typeof r != "number" && te(t, n, r) && (r = 0, e = u), u = t.length, r = Xe(r), 0 > r && (r = -r > u ? 0 : u + r), e = e === T || e > u ? u : Xe(e), 0 > e && (e += u), e = r > e ? 0 : tu(e); e > r;) {
	        t[r++] = n;
	      }return t;
	    }, Ot.filter = function (t, n) {
	      return (yi(t) ? f : ln)(t, Fr(n, 3));
	    }, Ot.flatMap = function (t, n) {
	      return sn(Oe(t, n), 1);
	    }, Ot.flatMapDeep = function (t, n) {
	      return sn(Oe(t, n), q);
	    }, Ot.flatMapDepth = function (t, n, r) {
	      return r = r === T ? 1 : Xe(r), sn(Oe(t, n), r);
	    }, Ot.flatten = function (t) {
	      return t && t.length ? sn(t, 1) : [];
	    }, Ot.flattenDeep = function (t) {
	      return t && t.length ? sn(t, q) : [];
	    }, Ot.flattenDepth = function (t, n) {
	      return t && t.length ? (n = n === T ? 1 : Xe(n), sn(t, n)) : [];
	    }, Ot.flip = function (t) {
	      return Cr(t, 512);
	    }, Ot.flow = Gi, Ot.flowRight = Ji, Ot.fromPairs = function (t) {
	      for (var n = -1, r = t ? t.length : 0, e = {}; ++n < r;) {
	        var u = t[n];e[u[0]] = u[1];
	      }return e;
	    }, Ot.functions = function (t) {
	      return null == t ? [] : _n(t, iu(t));
	    }, Ot.functionsIn = function (t) {
	      return null == t ? [] : _n(t, fu(t));
	    }, Ot.groupBy = ei, Ot.initial = function (t) {
	      return se(t, 1);
	    }, Ot.intersection = Do, Ot.intersectionBy = Fo, Ot.intersectionWith = No, Ot.invert = Ii, Ot.invertBy = Ri, Ot.invokeMap = ui, Ot.iteratee = _u, Ot.keyBy = oi, Ot.keys = iu, Ot.keysIn = fu, Ot.map = Oe, Ot.mapKeys = function (t, n) {
	      var r = {};return n = Fr(n, 3), hn(t, function (t, e, u) {
	        r[n(t, e, u)] = t;
	      }), r;
	    }, Ot.mapValues = function (t, n) {
	      var r = {};return n = Fr(n, 3), hn(t, function (t, e, u) {
	        r[e] = n(t, e, u);
	      }), r;
	    }, Ot.matches = function (t) {
	      return Rn(rn(t, true));
	    }, Ot.matchesProperty = function (t, n) {
	      return Wn(t, rn(n, true));
	    }, Ot.memoize = Le, Ot.merge = Bi, Ot.mergeWith = Li, Ot.method = Yi, Ot.methodOf = Hi, Ot.mixin = vu, Ot.negate = function (t) {
	      if (typeof t != "function") throw new Au("Expected a function");return function () {
	        return !t.apply(this, arguments);
	      };
	    }, Ot.nthArg = function (t) {
	      return t = Xe(t), Me(function (n) {
	        return Ln(n, t);
	      });
	    }, Ot.omit = Mi, Ot.omitBy = function (t, n) {
	      return n = Fr(n), zn(t, function (t, r) {
	        return !n(t, r);
	      });
	    }, Ot.once = function (t) {
	      return Ie(2, t);
	    }, Ot.orderBy = function (t, n, r, e) {
	      return null == t ? [] : (yi(n) || (n = null == n ? [] : [n]), r = e ? T : r, yi(r) || (r = null == r ? [] : [r]), Mn(t, n, r));
	    }, Ot.over = Qi, Ot.overArgs = hi, Ot.overEvery = Xi, Ot.overSome = tf, Ot.partial = pi, Ot.partialRight = _i, Ot.partition = ii, Ot.pick = Ci, Ot.pickBy = function (t, n) {
	      return null == t ? {} : zn(t, Fr(n));
	    }, Ot.property = du, Ot.propertyOf = function (t) {
	      return function (n) {
	        return null == t ? T : vn(t, n);
	      };
	    }, Ot.pull = Po, Ot.pullAll = ge, Ot.pullAllBy = function (t, n, r) {
	      return t && t.length && n && n.length ? Dn(t, n, Fr(r)) : t;
	    }, Ot.pullAllWith = function (t, n, r) {
	      return t && t.length && n && n.length ? Dn(t, n, T, r) : t;
	    }, Ot.pullAt = Zo, Ot.range = nf, Ot.rangeRight = rf, Ot.rearg = vi, Ot.reject = function (t, n) {
	      var r = yi(t) ? f : ln;return n = Fr(n, 3), r(t, function (t, r, e) {
	        return !n(t, r, e);
	      });
	    }, Ot.remove = function (t, n) {
	      var r = [];if (!t || !t.length) return r;var e = -1,
	          u = [],
	          o = t.length;for (n = Fr(n, 3); ++e < o;) {
	        var i = t[e];n(i, e, t) && (r.push(i), u.push(e));
	      }return Fn(t, u), r;
	    }, Ot.rest = Me, Ot.reverse = de, Ot.sampleSize = ke, Ot.set = function (t, n, r) {
	      return null == t ? t : Zn(t, n, r);
	    }, Ot.setWith = function (t, n, r, e) {
	      return e = typeof e == "function" ? e : T, null == t ? t : Zn(t, n, r, e);
	    }, Ot.shuffle = function (t) {
	      return ke(t, 4294967295);
	    }, Ot.slice = function (t, n, r) {
	      var e = t ? t.length : 0;return e ? (r && typeof r != "number" && te(t, n, r) ? (n = 0, r = e) : (n = null == n ? 0 : Xe(n), r = r === T ? e : Xe(r)), Tn(t, n, r)) : [];
	    }, Ot.sortBy = fi, Ot.sortedUniq = function (t) {
	      return t && t.length ? Gn(t) : [];
	    }, Ot.sortedUniqBy = function (t, n) {
	      return t && t.length ? Gn(t, Fr(n)) : [];
	    }, Ot.split = function (t, n, r) {
	      return r && typeof r != "number" && te(t, n, r) && (n = r = T), r = r === T ? 4294967295 : r >>> 0, r ? (t = eu(t)) && (typeof n == "string" || null != n && !Ke(n)) && (n = Yn(n), "" == n && Wt.test(t)) ? ur(t.match(It), 0, r) : oo.call(t, n, r) : [];
	    }, Ot.spread = function (t, n) {
	      if (typeof t != "function") throw new Au("Expected a function");return n = n === T ? 0 : Xu(Xe(n), 0), Me(function (e) {
	        var u = e[n];return e = ur(e, 0, n), u && s(e, u), r(t, this, e);
	      });
	    }, Ot.tail = function (t) {
	      return le(t, 1);
	    }, Ot.take = function (t, n, r) {
	      return t && t.length ? (n = r || n === T ? 1 : Xe(n), Tn(t, 0, 0 > n ? 0 : n)) : [];
	    }, Ot.takeRight = function (t, n, r) {
	      var e = t ? t.length : 0;return e ? (n = r || n === T ? 1 : Xe(n), n = e - n, Tn(t, 0 > n ? 0 : n, e)) : [];
	    }, Ot.takeRightWhile = function (t, n) {
	      return t && t.length ? Qn(t, Fr(n, 3), false, true) : [];
	    }, Ot.takeWhile = function (t, n) {
	      return t && t.length ? Qn(t, Fr(n, 3)) : [];
	    }, Ot.tap = function (t, n) {
	      return n(t), t;
	    }, Ot.throttle = function (t, n, r) {
	      var e = true,
	          u = true;if (typeof t != "function") throw new Au("Expected a function");return Ze(r) && (e = "leading" in r ? !!r.leading : e, u = "trailing" in r ? !!r.trailing : u), Be(t, n, { leading: e, maxWait: n,
	        trailing: u });
	    }, Ot.thru = je, Ot.toArray = He, Ot.toPairs = zi, Ot.toPairsIn = Ui, Ot.toPath = function (t) {
	      return yi(t) ? l(t, fe) : Je(t) ? [t] : lr(Co(t));
	    }, Ot.toPlainObject = ru, Ot.transform = function (t, n, r) {
	      var e = yi(t) || Ye(t);if (n = Fr(n, 4), null == r) if (e || Ze(t)) {
	        var o = t.constructor;r = e ? yi(t) ? new o() : [] : Fe(o) ? un(Ju(Object(t))) : {};
	      } else r = {};return (e ? u : hn)(t, function (t, e, u) {
	        return n(r, t, e, u);
	      }), r;
	    }, Ot.unary = function (t) {
	      return Se(t, 1);
	    }, Ot.union = To, Ot.unionBy = qo, Ot.unionWith = Vo, Ot.uniq = function (t) {
	      return t && t.length ? Hn(t) : [];
	    }, Ot.uniqBy = function (t, n) {
	      return t && t.length ? Hn(t, Fr(n)) : [];
	    }, Ot.uniqWith = function (t, n) {
	      return t && t.length ? Hn(t, T, n) : [];
	    }, Ot.unset = function (t, n) {
	      var r;if (null == t) r = true;else {
	        r = t;var e = n,
	            e = ne(e, r) ? [e] : er(e);r = ie(r, e), e = fe(ve(e)), r = !(null != r && yn(r, e)) || delete r[e];
	      }return r;
	    }, Ot.unzip = ye, Ot.unzipWith = be, Ot.update = function (t, n, r) {
	      return null == t ? t : Zn(t, n, (typeof r == "function" ? r : pu)(vn(t, n)), void 0);
	    }, Ot.updateWith = function (t, n, r, e) {
	      return e = typeof e == "function" ? e : T, null != t && (t = Zn(t, n, (typeof r == "function" ? r : pu)(vn(t, n)), e)), t;
	    }, Ot.values = cu, Ot.valuesIn = function (t) {
	      return null == t ? [] : k(t, fu(t));
	    }, Ot.without = Ko, Ot.words = su, Ot.wrap = function (t, n) {
	      return n = null == n ? pu : n, pi(n, t);
	    }, Ot.xor = Go, Ot.xorBy = Jo, Ot.xorWith = Yo, Ot.zip = Ho, Ot.zipObject = function (t, n) {
	      return nr(t || [], n || [], Yt);
	    }, Ot.zipObjectDeep = function (t, n) {
	      return nr(t || [], n || [], Zn);
	    }, Ot.zipWith = Qo, Ot.entries = zi, Ot.entriesIn = Ui, Ot.extend = mi, Ot.extendWith = Ai, vu(Ot, Ot), Ot.add = ef, Ot.attempt = Vi, Ot.camelCase = $i, Ot.capitalize = au, Ot.ceil = uf, Ot.clamp = function (t, n, r) {
	      return r === T && (r = n, n = T), r !== T && (r = nu(r), r = r === r ? r : 0), n !== T && (n = nu(n), n = n === n ? n : 0), nn(nu(t), n, r);
	    }, Ot.clone = function (t) {
	      return rn(t, false, true);
	    }, Ot.cloneDeep = function (t) {
	      return rn(t, true, true);
	    }, Ot.cloneDeepWith = function (t, n) {
	      return rn(t, true, true, n);
	    }, Ot.cloneWith = function (t, n) {
	      return rn(t, false, true, n);
	    }, Ot.deburr = lu, Ot.divide = of, Ot.endsWith = function (t, n, r) {
	      t = eu(t), n = Yn(n);var e = t.length;return r = r === T ? e : nn(Xe(r), 0, e), r -= n.length, r >= 0 && t.indexOf(n, r) == r;
	    }, Ot.eq = Ce, Ot.escape = function (t) {
	      return (t = eu(t)) && X.test(t) ? t.replace(H, B) : t;
	    }, Ot.escapeRegExp = function (t) {
	      return (t = eu(t)) && ft.test(t) ? t.replace(it, "\\$&") : t;
	    }, Ot.every = function (t, n, r) {
	      var e = yi(t) ? i : cn;return r && te(t, n, r) && (n = T), e(t, Fr(n, 3));
	    }, Ot.find = ni, Ot.findIndex = he, Ot.findKey = function (t, n) {
	      return v(t, Fr(n, 3), hn);
	    }, Ot.findLast = ri, Ot.findLastIndex = pe, Ot.findLastKey = function (t, n) {
	      return v(t, Fr(n, 3), pn);
	    }, Ot.floor = ff, Ot.forEach = me, Ot.forEachRight = Ae, Ot.forIn = function (t, n) {
	      return null == t ? t : ko(t, Fr(n, 3), fu);
	    }, Ot.forInRight = function (t, n) {
	      return null == t ? t : Eo(t, Fr(n, 3), fu);
	    }, Ot.forOwn = function (t, n) {
	      return t && hn(t, Fr(n, 3));
	    }, Ot.forOwnRight = function (t, n) {
	      return t && pn(t, Fr(n, 3));
	    }, Ot.get = uu, Ot.gt = gi, Ot.gte = di, Ot.has = function (t, n) {
	      return null != t && Vr(t, n, yn);
	    }, Ot.hasIn = ou, Ot.head = _e, Ot.identity = pu, Ot.includes = function (t, n, r, e) {
	      return t = Ue(t) ? t : cu(t), r = r && !e ? Xe(r) : 0, e = t.length, 0 > r && (r = Xu(e + r, 0)), Ge(t) ? e >= r && -1 < t.indexOf(n, r) : !!e && -1 < d(t, n, r);
	    }, Ot.indexOf = function (t, n, r) {
	      var e = t ? t.length : 0;return e ? (r = null == r ? 0 : Xe(r), 0 > r && (r = Xu(e + r, 0)), d(t, n, r)) : -1;
	    }, Ot.inRange = function (t, n, r) {
	      return n = nu(n) || 0, r === T ? (r = n, n = 0) : r = nu(r) || 0, t = nu(t), t >= to(n, r) && t < Xu(n, r);
	    }, Ot.invoke = Wi, Ot.isArguments = ze, Ot.isArray = yi, Ot.isArrayBuffer = function (t) {
	      return Te(t) && "[object ArrayBuffer]" == Mu.call(t);
	    }, Ot.isArrayLike = Ue, Ot.isArrayLikeObject = $e, Ot.isBoolean = function (t) {
	      return true === t || false === t || Te(t) && "[object Boolean]" == Mu.call(t);
	    }, Ot.isBuffer = bi, Ot.isDate = function (t) {
	      return Te(t) && "[object Date]" == Mu.call(t);
	    }, Ot.isElement = function (t) {
	      return !!t && 1 === t.nodeType && Te(t) && !Ve(t);
	    }, Ot.isEmpty = function (t) {
	      if (Ue(t) && (yi(t) || Ge(t) || Fe(t.splice) || ze(t) || bi(t))) return !t.length;
	      if (Te(t)) {
	        var n = qr(t);if ("[object Map]" == n || "[object Set]" == n) return !t.size;
	      }for (var r in t) {
	        if (Wu.call(t, r)) return false;
	      }return !(po && iu(t).length);
	    }, Ot.isEqual = function (t, n) {
	      return mn(t, n);
	    }, Ot.isEqualWith = function (t, n, r) {
	      var e = (r = typeof r == "function" ? r : T) ? r(t, n) : T;return e === T ? mn(t, n, r) : !!e;
	    }, Ot.isError = De, Ot.isFinite = function (t) {
	      return typeof t == "number" && Yu(t);
	    }, Ot.isFunction = Fe, Ot.isInteger = Ne, Ot.isLength = Pe, Ot.isMap = function (t) {
	      return Te(t) && "[object Map]" == qr(t);
	    }, Ot.isMatch = function (t, n) {
	      return t === n || An(t, n, Pr(n));
	    }, Ot.isMatchWith = function (t, n, r) {
	      return r = typeof r == "function" ? r : T, An(t, n, Pr(n), r);
	    }, Ot.isNaN = function (t) {
	      return qe(t) && t != +t;
	    }, Ot.isNative = function (t) {
	      if (Lo(t)) throw new ju("This method is not supported with `core-js`. Try https://github.com/es-shims.");return On(t);
	    }, Ot.isNil = function (t) {
	      return null == t;
	    }, Ot.isNull = function (t) {
	      return null === t;
	    }, Ot.isNumber = qe, Ot.isObject = Ze, Ot.isObjectLike = Te, Ot.isPlainObject = Ve, Ot.isRegExp = Ke, Ot.isSafeInteger = function (t) {
	      return Ne(t) && t >= -9007199254740991 && 9007199254740991 >= t;
	    }, Ot.isSet = function (t) {
	      return Te(t) && "[object Set]" == qr(t);
	    }, Ot.isString = Ge, Ot.isSymbol = Je, Ot.isTypedArray = Ye, Ot.isUndefined = function (t) {
	      return t === T;
	    }, Ot.isWeakMap = function (t) {
	      return Te(t) && "[object WeakMap]" == qr(t);
	    }, Ot.isWeakSet = function (t) {
	      return Te(t) && "[object WeakSet]" == Mu.call(t);
	    }, Ot.join = function (t, n) {
	      return t ? Hu.call(t, n) : "";
	    }, Ot.kebabCase = Di, Ot.last = ve, Ot.lastIndexOf = function (t, n, r) {
	      var e = t ? t.length : 0;if (!e) return -1;var u = e;if (r !== T && (u = Xe(r), u = (0 > u ? Xu(e + u, 0) : to(u, e - 1)) + 1), n !== n) return M(t, u - 1, true);
	      for (; u--;) {
	        if (t[u] === n) return u;
	      }return -1;
	    }, Ot.lowerCase = Fi, Ot.lowerFirst = Ni, Ot.lt = xi, Ot.lte = ji, Ot.max = function (t) {
	      return t && t.length ? an(t, pu, dn) : T;
	    }, Ot.maxBy = function (t, n) {
	      return t && t.length ? an(t, Fr(n), dn) : T;
	    }, Ot.mean = function (t) {
	      return b(t, pu);
	    }, Ot.meanBy = function (t, n) {
	      return b(t, Fr(n));
	    }, Ot.min = function (t) {
	      return t && t.length ? an(t, pu, Sn) : T;
	    }, Ot.minBy = function (t, n) {
	      return t && t.length ? an(t, Fr(n), Sn) : T;
	    }, Ot.stubArray = yu, Ot.stubFalse = bu, Ot.stubObject = function () {
	      return {};
	    }, Ot.stubString = function () {
	      return "";
	    }, Ot.stubTrue = function () {
	      return true;
	    }, Ot.multiply = cf, Ot.nth = function (t, n) {
	      return t && t.length ? Ln(t, Xe(n)) : T;
	    }, Ot.noConflict = function () {
	      return Kt._ === this && (Kt._ = Cu), this;
	    }, Ot.noop = gu, Ot.now = Ee, Ot.pad = function (t, n, r) {
	      t = eu(t);var e = (n = Xe(n)) ? N(t) : 0;return !n || e >= n ? t : (n = (n - e) / 2, Sr(Gu(n), r) + t + Sr(Ku(n), r));
	    }, Ot.padEnd = function (t, n, r) {
	      t = eu(t);var e = (n = Xe(n)) ? N(t) : 0;return n && n > e ? t + Sr(n - e, r) : t;
	    }, Ot.padStart = function (t, n, r) {
	      t = eu(t);var e = (n = Xe(n)) ? N(t) : 0;return n && n > e ? Sr(n - e, r) + t : t;
	    }, Ot.parseInt = function (t, n, r) {
	      return r || null == n ? n = 0 : n && (n = +n), t = eu(t).replace(ct, ""), no(t, n || (vt.test(t) ? 16 : 10));
	    }, Ot.random = function (t, n, r) {
	      if (r && typeof r != "boolean" && te(t, n, r) && (n = r = T), r === T && (typeof n == "boolean" ? (r = n, n = T) : typeof t == "boolean" && (r = t, t = T)), t === T && n === T ? (t = 0, n = 1) : (t = nu(t) || 0, n === T ? (n = t, t = 0) : n = nu(n) || 0), t > n) {
	        var e = t;t = n, n = e;
	      }return r || t % 1 || n % 1 ? (r = ro(), to(t + r * (n - t + Ft("1e-" + ((r + "").length - 1))), n)) : Nn(t, n);
	    }, Ot.reduce = function (t, n, r) {
	      var e = yi(t) ? h : x,
	          u = 3 > arguments.length;return e(t, Fr(n, 4), r, u, Ao);
	    }, Ot.reduceRight = function (t, n, r) {
	      var e = yi(t) ? p : x,
	          u = 3 > arguments.length;
	      return e(t, Fr(n, 4), r, u, Oo);
	    }, Ot.repeat = function (t, n, r) {
	      return n = (r ? te(t, n, r) : n === T) ? 1 : Xe(n), Pn(eu(t), n);
	    }, Ot.replace = function () {
	      var t = arguments,
	          n = eu(t[0]);return 3 > t.length ? n : eo.call(n, t[1], t[2]);
	    }, Ot.result = function (t, n, r) {
	      n = ne(n, t) ? [n] : er(n);var e = -1,
	          u = n.length;for (u || (t = T, u = 1); ++e < u;) {
	        var o = null == t ? T : t[fe(n[e])];o === T && (e = u, o = r), t = Fe(o) ? o.call(t) : o;
	      }return t;
	    }, Ot.round = af, Ot.runInContext = Z, Ot.sample = function (t) {
	      t = Ue(t) ? t : cu(t);var n = t.length;return n > 0 ? t[Nn(0, n - 1)] : T;
	    }, Ot.size = function (t) {
	      if (null == t) return 0;
	      if (Ue(t)) {
	        var n = t.length;return n && Ge(t) ? N(t) : n;
	      }return Te(t) && (n = qr(t), "[object Map]" == n || "[object Set]" == n) ? t.size : iu(t).length;
	    }, Ot.snakeCase = Pi, Ot.some = function (t, n, r) {
	      var e = yi(t) ? _ : qn;return r && te(t, n, r) && (n = T), e(t, Fr(n, 3));
	    }, Ot.sortedIndex = function (t, n) {
	      return Vn(t, n);
	    }, Ot.sortedIndexBy = function (t, n, r) {
	      return Kn(t, n, Fr(r));
	    }, Ot.sortedIndexOf = function (t, n) {
	      var r = t ? t.length : 0;if (r) {
	        var e = Vn(t, n);if (r > e && Ce(t[e], n)) return e;
	      }return -1;
	    }, Ot.sortedLastIndex = function (t, n) {
	      return Vn(t, n, true);
	    }, Ot.sortedLastIndexBy = function (t, n, r) {
	      return Kn(t, n, Fr(r), true);
	    }, Ot.sortedLastIndexOf = function (t, n) {
	      if (t && t.length) {
	        var r = Vn(t, n, true) - 1;if (Ce(t[r], n)) return r;
	      }return -1;
	    }, Ot.startCase = Zi, Ot.startsWith = function (t, n, r) {
	      return t = eu(t), r = nn(Xe(r), 0, t.length), t.lastIndexOf(Yn(n), r) == r;
	    }, Ot.subtract = lf, Ot.sum = function (t) {
	      return t && t.length ? w(t, pu) : 0;
	    }, Ot.sumBy = function (t, n) {
	      return t && t.length ? w(t, Fr(n)) : 0;
	    }, Ot.template = function (t, n, r) {
	      var e = Ot.templateSettings;r && te(t, n, r) && (n = T), t = eu(t), n = Ai({}, n, e, Vt), r = Ai({}, n.imports, e.imports, Vt);var u,
	          o,
	          i = iu(r),
	          f = k(r, i),
	          c = 0;
	      r = n.interpolate || wt;var a = "__p+='";r = mu((n.escape || wt).source + "|" + r.source + "|" + (r === rt ? pt : wt).source + "|" + (n.evaluate || wt).source + "|$", "g");var l = "sourceURL" in n ? "//# sourceURL=" + n.sourceURL + "\n" : "";if (t.replace(r, function (n, r, e, i, f, l) {
	        return e || (e = i), a += t.slice(c, l).replace(mt, L), r && (u = true, a += "'+__e(" + r + ")+'"), f && (o = true, a += "';" + f + ";\n__p+='"), e && (a += "'+((__t=(" + e + "))==null?'':__t)+'"), c = l + n.length, n;
	      }), a += "';", (n = n.variable) || (a = "with(obj){" + a + "}"), a = (o ? a.replace(K, "") : a).replace(G, "$1").replace(J, "$1;"), a = "function(" + (n || "obj") + "){" + (n ? "" : "obj||(obj={});") + "var __t,__p=''" + (u ? ",__e=_.escape" : "") + (o ? ",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}" : ";") + a + "return __p}", n = Vi(function () {
	        return Function(i, l + "return " + a).apply(T, f);
	      }), n.source = a, De(n)) throw n;return n;
	    }, Ot.times = function (t, n) {
	      if (t = Xe(t), 1 > t || t > 9007199254740991) return [];var r = 4294967295,
	          e = to(t, 4294967295);for (n = Fr(n), t -= 4294967295, e = m(e, n); ++r < t;) {
	        n(r);
	      }return e;
	    }, Ot.toFinite = Qe, Ot.toInteger = Xe, Ot.toLength = tu, Ot.toLower = function (t) {
	      return eu(t).toLowerCase();
	    }, Ot.toNumber = nu, Ot.toSafeInteger = function (t) {
	      return nn(Xe(t), -9007199254740991, 9007199254740991);
	    }, Ot.toString = eu, Ot.toUpper = function (t) {
	      return eu(t).toUpperCase();
	    }, Ot.trim = function (t, n, r) {
	      return (t = eu(t)) && (r || n === T) ? t.replace(ct, "") : t && (n = Yn(n)) ? (t = t.match(It), n = n.match(It), ur(t, S(t, n), I(t, n) + 1).join("")) : t;
	    }, Ot.trimEnd = function (t, n, r) {
	      return (t = eu(t)) && (r || n === T) ? t.replace(lt, "") : t && (n = Yn(n)) ? (t = t.match(It), n = I(t, n.match(It)) + 1, ur(t, 0, n).join("")) : t;
	    }, Ot.trimStart = function (t, n, r) {
	      return (t = eu(t)) && (r || n === T) ? t.replace(at, "") : t && (n = Yn(n)) ? (t = t.match(It), n = S(t, n.match(It)), ur(t, n).join("")) : t;
	    }, Ot.truncate = function (t, n) {
	      var r = 30,
	          e = "...";if (Ze(n)) var u = "separator" in n ? n.separator : u,
	          r = "length" in n ? Xe(n.length) : r,
	          e = "omission" in n ? Yn(n.omission) : e;t = eu(t);var o = t.length;if (Wt.test(t)) var i = t.match(It),
	          o = i.length;if (r >= o) return t;if (o = r - N(e), 1 > o) return e;if (r = i ? ur(i, 0, o).join("") : t.slice(0, o), u === T) return r + e;if (i && (o += r.length - o), Ke(u)) {
	        if (t.slice(o).search(u)) {
	          var f = r;for (u.global || (u = mu(u.source, eu(_t.exec(u)) + "g")), u.lastIndex = 0; i = u.exec(f);) {
	            var c = i.index;
	          }r = r.slice(0, c === T ? o : c);
	        }
	      } else t.indexOf(Yn(u), o) != o && (u = r.lastIndexOf(u), u > -1 && (r = r.slice(0, u)));return r + e;
	    }, Ot.unescape = function (t) {
	      return (t = eu(t)) && Q.test(t) ? t.replace(Y, P) : t;
	    }, Ot.uniqueId = function (t) {
	      var n = ++Bu;return eu(t) + n;
	    }, Ot.upperCase = Ti, Ot.upperFirst = qi, Ot.each = me, Ot.eachRight = Ae, Ot.first = _e, vu(Ot, function () {
	      var t = {};return hn(Ot, function (n, r) {
	        Wu.call(Ot.prototype, r) || (t[r] = n);
	      }), t;
	    }(), { chain: false }), Ot.VERSION = "4.13.1", u("bind bindKey curry curryRight partial partialRight".split(" "), function (t) {
	      Ot[t].placeholder = Ot;
	    }), u(["drop", "take"], function (t, n) {
	      Ut.prototype[t] = function (r) {
	        var e = this.__filtered__;if (e && !n) return new Ut(this);r = r === T ? 1 : Xu(Xe(r), 0);var u = this.clone();return e ? u.__takeCount__ = to(r, u.__takeCount__) : u.__views__.push({ size: to(r, 4294967295), type: t + (0 > u.__dir__ ? "Right" : "") }), u;
	      }, Ut.prototype[t + "Right"] = function (n) {
	        return this.reverse()[t](n).reverse();
	      };
	    }), u(["filter", "map", "takeWhile"], function (t, n) {
	      var r = n + 1,
	          e = 1 == r || 3 == r;Ut.prototype[t] = function (t) {
	        var n = this.clone();return n.__iteratees__.push({
	          iteratee: Fr(t, 3), type: r }), n.__filtered__ = n.__filtered__ || e, n;
	      };
	    }), u(["head", "last"], function (t, n) {
	      var r = "take" + (n ? "Right" : "");Ut.prototype[t] = function () {
	        return this[r](1).value()[0];
	      };
	    }), u(["initial", "tail"], function (t, n) {
	      var r = "drop" + (n ? "" : "Right");Ut.prototype[t] = function () {
	        return this.__filtered__ ? new Ut(this) : this[r](1);
	      };
	    }), Ut.prototype.compact = function () {
	      return this.filter(pu);
	    }, Ut.prototype.find = function (t) {
	      return this.filter(t).head();
	    }, Ut.prototype.findLast = function (t) {
	      return this.reverse().find(t);
	    }, Ut.prototype.invokeMap = Me(function (t, n) {
	      return typeof t == "function" ? new Ut(this) : this.map(function (r) {
	        return wn(r, t, n);
	      });
	    }), Ut.prototype.reject = function (t) {
	      return t = Fr(t, 3), this.filter(function (n) {
	        return !t(n);
	      });
	    }, Ut.prototype.slice = function (t, n) {
	      t = Xe(t);var r = this;return r.__filtered__ && (t > 0 || 0 > n) ? new Ut(r) : (0 > t ? r = r.takeRight(-t) : t && (r = r.drop(t)), n !== T && (n = Xe(n), r = 0 > n ? r.dropRight(-n) : r.take(n - t)), r);
	    }, Ut.prototype.takeRightWhile = function (t) {
	      return this.reverse().takeWhile(t).reverse();
	    }, Ut.prototype.toArray = function () {
	      return this.take(4294967295);
	    }, hn(Ut.prototype, function (t, n) {
	      var r = /^(?:filter|find|map|reject)|While$/.test(n),
	          e = /^(?:head|last)$/.test(n),
	          u = Ot[e ? "take" + ("last" == n ? "Right" : "") : n],
	          o = e || /^find/.test(n);u && (Ot.prototype[n] = function () {
	        function n(t) {
	          return t = u.apply(Ot, s([t], f)), e && h ? t[0] : t;
	        }var i = this.__wrapped__,
	            f = e ? [1] : arguments,
	            c = i instanceof Ut,
	            a = f[0],
	            l = c || yi(i);l && r && typeof a == "function" && 1 != a.length && (c = l = false);var h = this.__chain__,
	            p = !!this.__actions__.length,
	            a = o && !h,
	            c = c && !p;return !o && l ? (i = c ? i : new Ut(this), i = t.apply(i, f), i.__actions__.push({ func: je, args: [n], thisArg: T }), new zt(i, h)) : a && c ? t.apply(this, f) : (i = this.thru(n), a ? e ? i.value()[0] : i.value() : i);
	      });
	    }), u("pop push shift sort splice unshift".split(" "), function (t) {
	      var n = Ou[t],
	          r = /^(?:push|sort|unshift)$/.test(t) ? "tap" : "thru",
	          e = /^(?:pop|shift)$/.test(t);Ot.prototype[t] = function () {
	        var t = arguments;if (e && !this.__chain__) {
	          var u = this.value();return n.apply(yi(u) ? u : [], t);
	        }return this[r](function (r) {
	          return n.apply(yi(r) ? r : [], t);
	        });
	      };
	    }), hn(Ut.prototype, function (t, n) {
	      var r = Ot[n];if (r) {
	        var e = r.name + "";(_o[e] || (_o[e] = [])).push({ name: n, func: r });
	      }
	    }), _o[Ar(T, 2).name] = [{ name: "wrapper", func: T }], Ut.prototype.clone = function () {
	      var t = new Ut(this.__wrapped__);return t.__actions__ = lr(this.__actions__), t.__dir__ = this.__dir__, t.__filtered__ = this.__filtered__, t.__iteratees__ = lr(this.__iteratees__), t.__takeCount__ = this.__takeCount__, t.__views__ = lr(this.__views__), t;
	    }, Ut.prototype.reverse = function () {
	      if (this.__filtered__) {
	        var t = new Ut(this);t.__dir__ = -1, t.__filtered__ = true;
	      } else t = this.clone(), t.__dir__ *= -1;return t;
	    }, Ut.prototype.value = function () {
	      var t,
	          n = this.__wrapped__.value(),
	          r = this.__dir__,
	          e = yi(n),
	          u = 0 > r,
	          o = e ? n.length : 0;t = o;for (var i = this.__views__, f = 0, c = -1, a = i.length; ++c < a;) {
	        var l = i[c],
	            s = l.size;switch (l.type) {case "drop":
	            f += s;break;case "dropRight":
	            t -= s;break;case "take":
	            t = to(t, f + s);break;case "takeRight":
	            f = Xu(f, t - s);}
	      }if (t = { start: f, end: t }, i = t.start, f = t.end, t = f - i, u = u ? f : i - 1, i = this.__iteratees__, f = i.length, c = 0, a = to(t, this.__takeCount__), !e || 200 > o || o == t && a == t) return Xn(n, this.__actions__);e = [];
	      t: for (; t-- && a > c;) {
	        for (u += r, o = -1, l = n[u]; ++o < f;) {
	          var h = i[o],
	              s = h.type,
	              h = (0, h.iteratee)(l);if (2 == s) l = h;else if (!h) {
	            if (1 == s) continue t;break t;
	          }
	        }e[c++] = l;
	      }return e;
	    }, Ot.prototype.at = Xo, Ot.prototype.chain = function () {
	      return xe(this);
	    }, Ot.prototype.commit = function () {
	      return new zt(this.value(), this.__chain__);
	    }, Ot.prototype.next = function () {
	      this.__values__ === T && (this.__values__ = He(this.value()));var t = this.__index__ >= this.__values__.length,
	          n = t ? T : this.__values__[this.__index__++];return { done: t, value: n };
	    }, Ot.prototype.plant = function (t) {
	      for (var n, r = this; r instanceof kt;) {
	        var e = ae(r);e.__index__ = 0, e.__values__ = T, n ? u.__wrapped__ = e : n = e;var u = e,
	            r = r.__wrapped__;
	      }return u.__wrapped__ = t, n;
	    }, Ot.prototype.reverse = function () {
	      var t = this.__wrapped__;return t instanceof Ut ? (this.__actions__.length && (t = new Ut(this)), t = t.reverse(), t.__actions__.push({ func: je, args: [de], thisArg: T }), new zt(t, this.__chain__)) : this.thru(de);
	    }, Ot.prototype.toJSON = Ot.prototype.valueOf = Ot.prototype.value = function () {
	      return Xn(this.__wrapped__, this.__actions__);
	    }, Zu && (Ot.prototype[Zu] = we), Ot;
	  }var T,
	      q = 1 / 0,
	      V = NaN,
	      K = /\b__p\+='';/g,
	      G = /\b(__p\+=)''\+/g,
	      J = /(__e\(.*?\)|\b__t\))\+'';/g,
	      Y = /&(?:amp|lt|gt|quot|#39|#96);/g,
	      H = /[&<>"'`]/g,
	      Q = RegExp(Y.source),
	      X = RegExp(H.source),
	      tt = /<%-([\s\S]+?)%>/g,
	      nt = /<%([\s\S]+?)%>/g,
	      rt = /<%=([\s\S]+?)%>/g,
	      et = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      ut = /^\w*$/,
	      ot = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(\.|\[\])(?:\4|$))/g,
	      it = /[\\^$.*+?()[\]{}|]/g,
	      ft = RegExp(it.source),
	      ct = /^\s+|\s+$/g,
	      at = /^\s+/,
	      lt = /\s+$/,
	      st = /[a-zA-Z0-9]+/g,
	      ht = /\\(\\)?/g,
	      pt = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
	      _t = /\w*$/,
	      vt = /^0x/i,
	      gt = /^[-+]0x[0-9a-f]+$/i,
	      dt = /^0b[01]+$/i,
	      yt = /^\[object .+?Constructor\]$/,
	      bt = /^0o[0-7]+$/i,
	      xt = /^(?:0|[1-9]\d*)$/,
	      jt = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,
	      wt = /($^)/,
	      mt = /['\n\r\u2028\u2029\\]/g,
	      At = "[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|\\ud83c[\\udffb-\\udfff])?)*",
	      Ot = "(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])" + At,
	      kt = "(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]?|[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])",
	      Et = RegExp("['’]", "g"),
	      St = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]", "g"),
	      It = RegExp("\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|" + kt + At, "g"),
	      Rt = RegExp(["[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d+", Ot].join("|"), "g"),
	      Wt = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),
	      Bt = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
	      Lt = "Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise Reflect RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ isFinite parseInt setTimeout".split(" "),
	      Mt = {};
	  Mt["[object Float32Array]"] = Mt["[object Float64Array]"] = Mt["[object Int8Array]"] = Mt["[object Int16Array]"] = Mt["[object Int32Array]"] = Mt["[object Uint8Array]"] = Mt["[object Uint8ClampedArray]"] = Mt["[object Uint16Array]"] = Mt["[object Uint32Array]"] = true, Mt["[object Arguments]"] = Mt["[object Array]"] = Mt["[object ArrayBuffer]"] = Mt["[object Boolean]"] = Mt["[object DataView]"] = Mt["[object Date]"] = Mt["[object Error]"] = Mt["[object Function]"] = Mt["[object Map]"] = Mt["[object Number]"] = Mt["[object Object]"] = Mt["[object RegExp]"] = Mt["[object Set]"] = Mt["[object String]"] = Mt["[object WeakMap]"] = false;
	  var Ct = {};Ct["[object Arguments]"] = Ct["[object Array]"] = Ct["[object ArrayBuffer]"] = Ct["[object DataView]"] = Ct["[object Boolean]"] = Ct["[object Date]"] = Ct["[object Float32Array]"] = Ct["[object Float64Array]"] = Ct["[object Int8Array]"] = Ct["[object Int16Array]"] = Ct["[object Int32Array]"] = Ct["[object Map]"] = Ct["[object Number]"] = Ct["[object Object]"] = Ct["[object RegExp]"] = Ct["[object Set]"] = Ct["[object String]"] = Ct["[object Symbol]"] = Ct["[object Uint8Array]"] = Ct["[object Uint8ClampedArray]"] = Ct["[object Uint16Array]"] = Ct["[object Uint32Array]"] = true, Ct["[object Error]"] = Ct["[object Function]"] = Ct["[object WeakMap]"] = false;var zt = { "\xc0": "A", "\xc1": "A", "\xc2": "A", "\xc3": "A", "\xc4": "A", "\xc5": "A", "\xe0": "a", "\xe1": "a", "\xe2": "a", "\xe3": "a", "\xe4": "a", "\xe5": "a", "\xc7": "C", "\xe7": "c", "\xd0": "D", "\xf0": "d", "\xc8": "E", "\xc9": "E", "\xca": "E", "\xcb": "E", "\xe8": "e", "\xe9": "e", "\xea": "e", "\xeb": "e", "\xcc": "I", "\xcd": "I", "\xce": "I", "\xcf": "I", "\xec": "i", "\xed": "i", "\xee": "i", "\xef": "i", "\xd1": "N", "\xf1": "n", "\xd2": "O", "\xd3": "O", "\xd4": "O", "\xd5": "O", "\xd6": "O",
	    "\xd8": "O", "\xf2": "o", "\xf3": "o", "\xf4": "o", "\xf5": "o", "\xf6": "o", "\xf8": "o", "\xd9": "U", "\xda": "U", "\xdb": "U", "\xdc": "U", "\xf9": "u", "\xfa": "u", "\xfb": "u", "\xfc": "u", "\xdd": "Y", "\xfd": "y", "\xff": "y", "\xc6": "Ae", "\xe6": "ae", "\xde": "Th", "\xfe": "th", "\xdf": "ss" },
	      Ut = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "`": "&#96;" },
	      $t = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'", "&#96;": "`" },
	      Dt = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" },
	      Ft = parseFloat,
	      Nt = parseInt,
	      Pt = ( false ? "undefined" : _typeof(exports)) == "object" && exports,
	      Zt = Pt && ( false ? "undefined" : _typeof(module)) == "object" && module,
	      Tt = Zt && Zt.exports === Pt,
	      qt = R((typeof self === "undefined" ? "undefined" : _typeof(self)) == "object" && self),
	      Vt = R(_typeof(this) == "object" && this),
	      Kt = R((typeof global === "undefined" ? "undefined" : _typeof(global)) == "object" && global) || qt || Vt || Function("return this")(),
	      Gt = Z();
	  (qt || {})._ = Gt, "function" == "function" && _typeof(__webpack_require__(/*! !webpack amd options */ 4)) == "object" && __webpack_require__(/*! !webpack amd options */ 4) ? !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	    return Gt;
	  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : Zt ? ((Zt.exports = Gt)._ = Gt, Pt._ = Gt) : Kt._ = Gt;
	}).call(undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/module.js */ 3)(module), (function() { return this; }())))

/***/ },
/* 12 */
/*!*************************************!*\
  !*** ./~/lodash/fp/_baseConvert.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var mapping = __webpack_require__(/*! ./_mapping */ 13),
	    mutateMap = mapping.mutate,
	    fallbackHolder = __webpack_require__(/*! ./placeholder */ 14);
	
	/**
	 * Creates a function, with an arity of `n`, that invokes `func` with the
	 * arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} n The arity of the new function.
	 * @returns {Function} Returns the new function.
	 */
	function baseArity(func, n) {
	  return n == 2 ? function (a, b) {
	    return func.apply(undefined, arguments);
	  } : function (a) {
	    return func.apply(undefined, arguments);
	  };
	}
	
	/**
	 * Creates a function that invokes `func`, with up to `n` arguments, ignoring
	 * any additional arguments.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @param {number} n The arity cap.
	 * @returns {Function} Returns the new function.
	 */
	function baseAry(func, n) {
	  return n == 2 ? function (a, b) {
	    return func(a, b);
	  } : function (a) {
	    return func(a);
	  };
	}
	
	/**
	 * Creates a clone of `array`.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the cloned array.
	 */
	function cloneArray(array) {
	  var length = array ? array.length : 0,
	      result = Array(length);
	
	  while (length--) {
	    result[length] = array[length];
	  }
	  return result;
	}
	
	/**
	 * Creates a function that clones a given object using the assignment `func`.
	 *
	 * @private
	 * @param {Function} func The assignment function.
	 * @returns {Function} Returns the new cloner function.
	 */
	function createCloner(func) {
	  return function (object) {
	    return func({}, object);
	  };
	}
	
	/**
	 * Creates a function that wraps `func` and uses `cloner` to clone the first
	 * argument it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} cloner The function to clone arguments.
	 * @returns {Function} Returns the new immutable function.
	 */
	function immutWrap(func, cloner) {
	  return function () {
	    var length = arguments.length;
	    if (!length) {
	      return result;
	    }
	    var args = Array(length);
	    while (length--) {
	      args[length] = arguments[length];
	    }
	    var result = args[0] = cloner.apply(undefined, args);
	    func.apply(undefined, args);
	    return result;
	  };
	}
	
	/**
	 * The base implementation of `convert` which accepts a `util` object of methods
	 * required to perform conversions.
	 *
	 * @param {Object} util The util object.
	 * @param {string} name The name of the function to convert.
	 * @param {Function} func The function to convert.
	 * @param {Object} [options] The options object.
	 * @param {boolean} [options.cap=true] Specify capping iteratee arguments.
	 * @param {boolean} [options.curry=true] Specify currying.
	 * @param {boolean} [options.fixed=true] Specify fixed arity.
	 * @param {boolean} [options.immutable=true] Specify immutable operations.
	 * @param {boolean} [options.rearg=true] Specify rearranging arguments.
	 * @returns {Function|Object} Returns the converted function or object.
	 */
	function baseConvert(util, name, func, options) {
	  var setPlaceholder,
	      isLib = typeof name == 'function',
	      isObj = name === Object(name);
	
	  if (isObj) {
	    options = func;
	    func = name;
	    name = undefined;
	  }
	  if (func == null) {
	    throw new TypeError();
	  }
	  options || (options = {});
	
	  var config = {
	    'cap': 'cap' in options ? options.cap : true,
	    'curry': 'curry' in options ? options.curry : true,
	    'fixed': 'fixed' in options ? options.fixed : true,
	    'immutable': 'immutable' in options ? options.immutable : true,
	    'rearg': 'rearg' in options ? options.rearg : true
	  };
	
	  var forceCurry = 'curry' in options && options.curry,
	      forceFixed = 'fixed' in options && options.fixed,
	      forceRearg = 'rearg' in options && options.rearg,
	      placeholder = isLib ? func : fallbackHolder,
	      pristine = isLib ? func.runInContext() : undefined;
	
	  var helpers = isLib ? func : {
	    'ary': util.ary,
	    'assign': util.assign,
	    'clone': util.clone,
	    'curry': util.curry,
	    'forEach': util.forEach,
	    'isArray': util.isArray,
	    'isFunction': util.isFunction,
	    'iteratee': util.iteratee,
	    'keys': util.keys,
	    'rearg': util.rearg,
	    'spread': util.spread,
	    'toPath': util.toPath
	  };
	
	  var ary = helpers.ary,
	      assign = helpers.assign,
	      clone = helpers.clone,
	      curry = helpers.curry,
	      each = helpers.forEach,
	      isArray = helpers.isArray,
	      isFunction = helpers.isFunction,
	      keys = helpers.keys,
	      rearg = helpers.rearg,
	      spread = helpers.spread,
	      toPath = helpers.toPath;
	
	  var aryMethodKeys = keys(mapping.aryMethod);
	
	  var wrappers = {
	    'castArray': function castArray(_castArray) {
	      return function () {
	        var value = arguments[0];
	        return isArray(value) ? _castArray(cloneArray(value)) : _castArray.apply(undefined, arguments);
	      };
	    },
	    'iteratee': function iteratee(_iteratee) {
	      return function () {
	        var func = arguments[0],
	            arity = arguments[1],
	            result = _iteratee(func, arity),
	            length = result.length;
	
	        if (config.cap && typeof arity == 'number') {
	          arity = arity > 2 ? arity - 2 : 1;
	          return length && length <= arity ? result : baseAry(result, arity);
	        }
	        return result;
	      };
	    },
	    'mixin': function mixin(_mixin) {
	      return function (source) {
	        var func = this;
	        if (!isFunction(func)) {
	          return _mixin(func, Object(source));
	        }
	        var pairs = [];
	        each(keys(source), function (key) {
	          if (isFunction(source[key])) {
	            pairs.push([key, func.prototype[key]]);
	          }
	        });
	
	        _mixin(func, Object(source));
	
	        each(pairs, function (pair) {
	          var value = pair[1];
	          if (isFunction(value)) {
	            func.prototype[pair[0]] = value;
	          } else {
	            delete func.prototype[pair[0]];
	          }
	        });
	        return func;
	      };
	    },
	    'runInContext': function runInContext(_runInContext) {
	      return function (context) {
	        return baseConvert(util, _runInContext(context), options);
	      };
	    }
	  };
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * Creates a clone of `object` by `path`.
	   *
	   * @private
	   * @param {Object} object The object to clone.
	   * @param {Array|string} path The path to clone by.
	   * @returns {Object} Returns the cloned object.
	   */
	  function cloneByPath(object, path) {
	    path = toPath(path);
	
	    var index = -1,
	        length = path.length,
	        lastIndex = length - 1,
	        result = clone(Object(object)),
	        nested = result;
	
	    while (nested != null && ++index < length) {
	      var key = path[index],
	          value = nested[key];
	
	      if (value != null) {
	        nested[path[index]] = clone(index == lastIndex ? value : Object(value));
	      }
	      nested = nested[key];
	    }
	    return result;
	  }
	
	  /**
	   * Converts `lodash` to an immutable auto-curried iteratee-first data-last
	   * version with conversion `options` applied.
	   *
	   * @param {Object} [options] The options object. See `baseConvert` for more details.
	   * @returns {Function} Returns the converted `lodash`.
	   */
	  function convertLib(options) {
	    return _.runInContext.convert(options)(undefined);
	  }
	
	  /**
	   * Create a converter function for `func` of `name`.
	   *
	   * @param {string} name The name of the function to convert.
	   * @param {Function} func The function to convert.
	   * @returns {Function} Returns the new converter function.
	   */
	  function createConverter(name, func) {
	    var oldOptions = options;
	    return function (options) {
	      var newUtil = isLib ? pristine : helpers,
	          newFunc = isLib ? pristine[name] : func,
	          newOptions = assign(assign({}, oldOptions), options);
	
	      return baseConvert(newUtil, name, newFunc, newOptions);
	    };
	  }
	
	  /**
	   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`
	   * arguments, ignoring any additional arguments.
	   *
	   * @private
	   * @param {Function} func The function to cap iteratee arguments for.
	   * @param {number} n The arity cap.
	   * @returns {Function} Returns the new function.
	   */
	  function iterateeAry(func, n) {
	    return overArg(func, function (func) {
	      return typeof func == 'function' ? baseAry(func, n) : func;
	    });
	  }
	
	  /**
	   * Creates a function that wraps `func` to invoke its iteratee with arguments
	   * arranged according to the specified `indexes` where the argument value at
	   * the first index is provided as the first argument, the argument value at
	   * the second index is provided as the second argument, and so on.
	   *
	   * @private
	   * @param {Function} func The function to rearrange iteratee arguments for.
	   * @param {number[]} indexes The arranged argument indexes.
	   * @returns {Function} Returns the new function.
	   */
	  function iterateeRearg(func, indexes) {
	    return overArg(func, function (func) {
	      var n = indexes.length;
	      return baseArity(rearg(baseAry(func, n), indexes), n);
	    });
	  }
	
	  /**
	   * Creates a function that invokes `func` with its first argument passed
	   * thru `transform`.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {...Function} transform The functions to transform the first argument.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function () {
	      var length = arguments.length;
	      if (!length) {
	        return func();
	      }
	      var args = Array(length);
	      while (length--) {
	        args[length] = arguments[length];
	      }
	      var index = config.rearg ? 0 : length - 1;
	      args[index] = transform(args[index]);
	      return func.apply(undefined, args);
	    };
	  }
	
	  /**
	   * Creates a function that wraps `func` and applys the conversions
	   * rules by `name`.
	   *
	   * @private
	   * @param {string} name The name of the function to wrap.
	   * @param {Function} func The function to wrap.
	   * @returns {Function} Returns the converted function.
	   */
	  function wrap(name, func) {
	    name = mapping.aliasToReal[name] || name;
	
	    var result,
	        wrapped = func,
	        wrapper = wrappers[name];
	
	    if (wrapper) {
	      wrapped = wrapper(func);
	    } else if (config.immutable) {
	      if (mutateMap.array[name]) {
	        wrapped = immutWrap(func, cloneArray);
	      } else if (mutateMap.object[name]) {
	        wrapped = immutWrap(func, createCloner(func));
	      } else if (mutateMap.set[name]) {
	        wrapped = immutWrap(func, cloneByPath);
	      }
	    }
	    each(aryMethodKeys, function (aryKey) {
	      each(mapping.aryMethod[aryKey], function (otherName) {
	        if (name == otherName) {
	          var aryN = !isLib && mapping.iterateeAry[name],
	              reargIndexes = mapping.iterateeRearg[name],
	              spreadStart = mapping.methodSpread[name];
	
	          result = wrapped;
	          if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {
	            result = spreadStart === undefined ? ary(result, aryKey) : spread(result, spreadStart);
	          }
	          if (config.rearg && aryKey > 1 && (forceRearg || !mapping.skipRearg[name])) {
	            result = rearg(result, mapping.methodRearg[name] || mapping.aryRearg[aryKey]);
	          }
	          if (config.cap) {
	            if (reargIndexes) {
	              result = iterateeRearg(result, reargIndexes);
	            } else if (aryN) {
	              result = iterateeAry(result, aryN);
	            }
	          }
	          if (forceCurry || config.curry && aryKey > 1) {
	            forceCurry && console.log(forceCurry, name);
	            result = curry(result, aryKey);
	          }
	          return false;
	        }
	      });
	      return !result;
	    });
	
	    result || (result = wrapped);
	    if (result == func) {
	      result = forceCurry ? curry(result, 1) : function () {
	        return func.apply(this, arguments);
	      };
	    }
	    result.convert = createConverter(name, func);
	    if (mapping.placeholder[name]) {
	      setPlaceholder = true;
	      result.placeholder = func.placeholder = placeholder;
	    }
	    return result;
	  }
	
	  /*--------------------------------------------------------------------------*/
	
	  if (!isObj) {
	    return wrap(name, func);
	  }
	  var _ = func;
	
	  // Convert methods by ary cap.
	  var pairs = [];
	  each(aryMethodKeys, function (aryKey) {
	    each(mapping.aryMethod[aryKey], function (key) {
	      var func = _[mapping.remap[key] || key];
	      if (func) {
	        pairs.push([key, wrap(key, func)]);
	      }
	    });
	  });
	
	  // Convert remaining methods.
	  each(keys(_), function (key) {
	    var func = _[key];
	    if (typeof func == 'function') {
	      var length = pairs.length;
	      while (length--) {
	        if (pairs[length][0] == key) {
	          return;
	        }
	      }
	      func.convert = createConverter(key, func);
	      pairs.push([key, func]);
	    }
	  });
	
	  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.
	  each(pairs, function (pair) {
	    _[pair[0]] = pair[1];
	  });
	
	  _.convert = convertLib;
	  if (setPlaceholder) {
	    _.placeholder = placeholder;
	  }
	  // Assign aliases.
	  each(keys(_), function (key) {
	    each(mapping.realToAlias[key] || [], function (alias) {
	      _[alias] = _[key];
	    });
	  });
	
	  return _;
	}
	
	module.exports = baseConvert;

/***/ },
/* 13 */
/*!*********************************!*\
  !*** ./~/lodash/fp/_mapping.js ***!
  \*********************************/
/***/ function(module, exports) {

	'use strict';
	
	/** Used to map aliases to their real names. */
	exports.aliasToReal = {
	
	  // Lodash aliases.
	  'each': 'forEach',
	  'eachRight': 'forEachRight',
	  'entries': 'toPairs',
	  'entriesIn': 'toPairsIn',
	  'extend': 'assignIn',
	  'extendWith': 'assignInWith',
	  'first': 'head',
	
	  // Ramda aliases.
	  '__': 'placeholder',
	  'all': 'every',
	  'allPass': 'overEvery',
	  'always': 'constant',
	  'any': 'some',
	  'anyPass': 'overSome',
	  'apply': 'spread',
	  'assoc': 'set',
	  'assocPath': 'set',
	  'complement': 'negate',
	  'compose': 'flowRight',
	  'contains': 'includes',
	  'dissoc': 'unset',
	  'dissocPath': 'unset',
	  'equals': 'isEqual',
	  'identical': 'eq',
	  'init': 'initial',
	  'invertObj': 'invert',
	  'juxt': 'over',
	  'omitAll': 'omit',
	  'nAry': 'ary',
	  'path': 'get',
	  'pathEq': 'matchesProperty',
	  'pathOr': 'getOr',
	  'paths': 'at',
	  'pickAll': 'pick',
	  'pipe': 'flow',
	  'pluck': 'map',
	  'prop': 'get',
	  'propEq': 'matchesProperty',
	  'propOr': 'getOr',
	  'props': 'at',
	  'unapply': 'rest',
	  'unnest': 'flatten',
	  'useWith': 'overArgs',
	  'whereEq': 'filter',
	  'zipObj': 'zipObject'
	};
	
	/** Used to map ary to method names. */
	exports.aryMethod = {
	  '1': ['attempt', 'castArray', 'ceil', 'create', 'curry', 'curryRight', 'floor', 'flow', 'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'methodOf', 'mixin', 'over', 'overEvery', 'overSome', 'rest', 'reverse', 'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart', 'uniqueId', 'words'],
	  '2': ['add', 'after', 'ary', 'assign', 'assignIn', 'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith', 'cloneWith', 'concat', 'countBy', 'curryN', 'curryRightN', 'debounce', 'defaults', 'defaultsDeep', 'delay', 'difference', 'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq', 'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex', 'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach', 'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get', 'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection', 'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy', 'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty', 'maxBy', 'meanBy', 'merge', 'minBy', 'multiply', 'nth', 'omit', 'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial', 'partialRight', 'partition', 'pick', 'pickBy', 'pull', 'pullAll', 'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove', 'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex', 'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy', 'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight', 'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars', 'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith', 'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject', 'zipObjectDeep'],
	  '3': ['assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith', 'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr', 'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith', 'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth', 'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd', 'padCharsStart', 'pullAllBy', 'pullAllWith', 'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy', 'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy', 'xorWith', 'zipWith'],
	  '4': ['fill', 'setWith', 'updateWith']
	};
	
	/** Used to map ary to rearg configs. */
	exports.aryRearg = {
	  '2': [1, 0],
	  '3': [2, 0, 1],
	  '4': [3, 2, 0, 1]
	};
	
	/** Used to map method names to their iteratee ary. */
	exports.iterateeAry = {
	  'dropRightWhile': 1,
	  'dropWhile': 1,
	  'every': 1,
	  'filter': 1,
	  'find': 1,
	  'findFrom': 1,
	  'findIndex': 1,
	  'findIndexFrom': 1,
	  'findKey': 1,
	  'findLast': 1,
	  'findLastFrom': 1,
	  'findLastIndex': 1,
	  'findLastIndexFrom': 1,
	  'findLastKey': 1,
	  'flatMap': 1,
	  'flatMapDeep': 1,
	  'flatMapDepth': 1,
	  'forEach': 1,
	  'forEachRight': 1,
	  'forIn': 1,
	  'forInRight': 1,
	  'forOwn': 1,
	  'forOwnRight': 1,
	  'map': 1,
	  'mapKeys': 1,
	  'mapValues': 1,
	  'partition': 1,
	  'reduce': 2,
	  'reduceRight': 2,
	  'reject': 1,
	  'remove': 1,
	  'some': 1,
	  'takeRightWhile': 1,
	  'takeWhile': 1,
	  'times': 1,
	  'transform': 2
	};
	
	/** Used to map method names to iteratee rearg configs. */
	exports.iterateeRearg = {
	  'mapKeys': [1]
	};
	
	/** Used to map method names to rearg configs. */
	exports.methodRearg = {
	  'assignInWith': [1, 2, 0],
	  'assignWith': [1, 2, 0],
	  'differenceBy': [1, 2, 0],
	  'differenceWith': [1, 2, 0],
	  'getOr': [2, 1, 0],
	  'intersectionBy': [1, 2, 0],
	  'intersectionWith': [1, 2, 0],
	  'isEqualWith': [1, 2, 0],
	  'isMatchWith': [2, 1, 0],
	  'mergeWith': [1, 2, 0],
	  'padChars': [2, 1, 0],
	  'padCharsEnd': [2, 1, 0],
	  'padCharsStart': [2, 1, 0],
	  'pullAllBy': [2, 1, 0],
	  'pullAllWith': [2, 1, 0],
	  'setWith': [3, 1, 2, 0],
	  'sortedIndexBy': [2, 1, 0],
	  'sortedLastIndexBy': [2, 1, 0],
	  'unionBy': [1, 2, 0],
	  'unionWith': [1, 2, 0],
	  'updateWith': [3, 1, 2, 0],
	  'xorBy': [1, 2, 0],
	  'xorWith': [1, 2, 0],
	  'zipWith': [1, 2, 0]
	};
	
	/** Used to map method names to spread configs. */
	exports.methodSpread = {
	  'invokeArgs': 2,
	  'invokeArgsMap': 2,
	  'partial': 1,
	  'partialRight': 1,
	  'without': 1
	};
	
	/** Used to identify methods which mutate arrays or objects. */
	exports.mutate = {
	  'array': {
	    'fill': true,
	    'pull': true,
	    'pullAll': true,
	    'pullAllBy': true,
	    'pullAllWith': true,
	    'pullAt': true,
	    'remove': true,
	    'reverse': true
	  },
	  'object': {
	    'assign': true,
	    'assignIn': true,
	    'assignInWith': true,
	    'assignWith': true,
	    'defaults': true,
	    'defaultsDeep': true,
	    'merge': true,
	    'mergeWith': true
	  },
	  'set': {
	    'set': true,
	    'setWith': true,
	    'unset': true,
	    'update': true,
	    'updateWith': true
	  }
	};
	
	/** Used to track methods with placeholder support */
	exports.placeholder = {
	  'bind': true,
	  'bindKey': true,
	  'curry': true,
	  'curryRight': true,
	  'partial': true,
	  'partialRight': true
	};
	
	/** Used to map real names to their aliases. */
	exports.realToAlias = function () {
	  var hasOwnProperty = Object.prototype.hasOwnProperty,
	      object = exports.aliasToReal,
	      result = {};
	
	  for (var key in object) {
	    var value = object[key];
	    if (hasOwnProperty.call(result, value)) {
	      result[value].push(key);
	    } else {
	      result[value] = [key];
	    }
	  }
	  return result;
	}();
	
	/** Used to map method names to other names. */
	exports.remap = {
	  'curryN': 'curry',
	  'curryRightN': 'curryRight',
	  'findFrom': 'find',
	  'findIndexFrom': 'findIndex',
	  'findLastFrom': 'findLast',
	  'findLastIndexFrom': 'findLastIndex',
	  'getOr': 'get',
	  'includesFrom': 'includes',
	  'indexOfFrom': 'indexOf',
	  'invokeArgs': 'invoke',
	  'invokeArgsMap': 'invokeMap',
	  'lastIndexOfFrom': 'lastIndexOf',
	  'padChars': 'pad',
	  'padCharsEnd': 'padEnd',
	  'padCharsStart': 'padStart',
	  'restFrom': 'rest',
	  'spreadFrom': 'spread',
	  'trimChars': 'trim',
	  'trimCharsEnd': 'trimEnd',
	  'trimCharsStart': 'trimStart'
	};
	
	/** Used to track methods that skip fixing their arity. */
	exports.skipFixed = {
	  'castArray': true,
	  'flow': true,
	  'flowRight': true,
	  'iteratee': true,
	  'mixin': true,
	  'runInContext': true
	};
	
	/** Used to track methods that skip rearranging arguments. */
	exports.skipRearg = {
	  'add': true,
	  'assign': true,
	  'assignIn': true,
	  'bind': true,
	  'bindKey': true,
	  'concat': true,
	  'difference': true,
	  'divide': true,
	  'eq': true,
	  'gt': true,
	  'gte': true,
	  'isEqual': true,
	  'lt': true,
	  'lte': true,
	  'matchesProperty': true,
	  'merge': true,
	  'multiply': true,
	  'overArgs': true,
	  'partial': true,
	  'partialRight': true,
	  'random': true,
	  'range': true,
	  'rangeRight': true,
	  'subtract': true,
	  'zip': true,
	  'zipObject': true
	};

/***/ },
/* 14 */
/*!************************************!*\
  !*** ./~/lodash/fp/placeholder.js ***!
  \************************************/
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * The default argument placeholder value for methods.
	 *
	 * @type {Object}
	 */
	module.exports = {};

/***/ }
/******/ ]);
//# sourceMappingURL=cssantique-browser.js.map